{"version":3,"sources":["$_lazy_route_resource lazy namespace object","node_modules/moment/locale sync ^\\.\\/.*$","src/app/app.component.html","src/app/components/dialogs/funders-link/funders-link.component.html","src/app/components/dialogs/new-organization-preference/new-organization-preference.component.html","src/app/components/dialogs/new-password/new-password.component.html","src/app/components/dialogs/update-executed/update-executed.component.html","src/app/components/pages/dashboard/dashboard.component.html","src/app/components/pages/fichas/fichas/fichas.component.html","src/app/components/pages/funders/funder-view/funder-view.component.html","src/app/components/pages/funders/funders/funders.component.html","src/app/components/pages/indicators/indicator-view/indicator-view.component.html","src/app/components/pages/indicators/indicators/indicators.component.html","src/app/components/pages/indicators/new-indicator/new-indicator.component.html","src/app/components/pages/login/login.component.html","src/app/components/pages/organization/new-organization/new-organization.component.html","src/app/components/pages/organization/organization-view/organization-view.component.html","src/app/components/pages/organization/organizations/organizations.component.html","src/app/components/pages/organization/partners-historic/partners-historic.component.html","src/app/components/pages/organization/partners/partners.component.html","src/app/components/pages/projects/new-project/new-project.component.html","src/app/components/pages/projects/project-view/project-view.component.html","src/app/components/pages/projects/projects/projects.component.html","src/app/components/pages/report/report/report.component.html","src/app/components/pages/report/table-and-graphic/table-and-graphic.component.html","src/app/components/pages/users/new-users/new-users.component.html","src/app/components/pages/users/users-view/users-view.component.html","src/app/components/pages/users/users/users.component.html","src/app/components/shared/button-group/button-group.component.html","src/app/components/shared/form-buttons/form-buttons.component.html","src/app/components/shared/loading-view/loading-view.component.html","src/app/components/shared/modals/modals.component.html","src/app/components/shared/sub-toolbar/sub-toolbar.component.html","src/app/components/shared/upload-box/upload-box.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.sass","src/app/app.component.ts","src/app/app.module.ts","src/app/components/dialogs/funders-link/funders-link.component.ts","src/app/components/dialogs/new-organization-preference/new-organization-preference.component.ts","src/app/components/dialogs/new-password/new-password.component.ts","src/app/components/dialogs/update-executed/update-executed.component.ts","src/app/components/pages/dashboard/dashboard.component.sass","src/app/components/pages/dashboard/dashboard.component.ts","src/app/components/pages/fichas/fichas/fichas.component.ts","src/app/components/pages/funders/funder-view/funder-view.component.ts","src/app/components/pages/funders/funders/funders.component.ts","src/app/components/pages/indicators/indicator-view/indicator-view.component.ts","src/app/components/pages/indicators/indicators/indicators.component.ts","src/app/components/pages/indicators/new-indicator/new-indicator.component.ts","src/app/components/pages/login/login.component.ts","src/app/components/pages/organization/new-organization/new-organization.component.ts","src/app/components/pages/organization/organization-view/organization-view.component.ts","src/app/components/pages/organization/organizations/organizations.component.ts","src/app/components/pages/organization/partners-historic/partners-historic.component.ts","src/app/components/pages/organization/partners/partners.component.ts","src/app/components/pages/projects/new-project/new-project.component.ts","src/app/components/pages/projects/project-view/project-view.component.ts","src/app/components/pages/projects/projects/projects.component.ts","src/app/components/pages/report/report/report.component.ts","src/app/components/pages/report/table-and-graphic/table-and-graphic.component.ts","src/app/components/pages/users/new-users/new-users.component.ts","src/app/components/pages/users/users-view/users-view.component.ts","src/app/components/pages/users/users/users.component.ts","src/app/components/shared/button-group/button-group.component.ts","src/app/components/shared/form-buttons/form-buttons.component.ts","src/app/components/shared/loading-view/loading-view.component.ts","src/app/components/shared/modals/modals.component.ts","src/app/components/shared/sub-toolbar/sub-toolbar.component.ts","src/app/components/shared/upload-box/upload-box.component.ts","src/app/services/sisi-core.service.ts","src/app/services/sisi-datewarehouse√ß.service.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAAA,wBAAA,CAAA,GAAA,EAAA;AACA;AACA;AACA,aAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,YAAA;AACA,YAAA,CAAA,GAAA,IAAA,KAAA,CAAA,yBAAA,GAAA,GAAA,GAAA,CAAA;AACA,QAAA,CAAA,CAAA,IAAA,GAAA,kBAAA;AACA,cAAA,CAAA;AACE,OAJF,CAAA;AAKA;;AACA,IAAA,wBAAA,CAAA,IAAA,GAAA,YAAA;AAA4C,aAAA,EAAA;AAAW,KAAvD;;AACA,IAAA,wBAAA,CAAA,OAAA,GAAA,wBAAA;AACA,IAAA,MAAA,CAAA,OAAA,GAAA,wBAAA;AACA,IAAA,wBAAA,CAAA,EAAA,GAAA,yCAAA;;;;;;;;;;;;;;ACZA,QAAA,GAAA,GAAA;AACA,cAAA,oCADA;AAEA,iBAAA,oCAFA;AAGA,cAAA,oCAHA;AAIA,iBAAA,uCAJA;AAKA,oBAAA,uCALA;AAMA,iBAAA,uCANA;AAOA,oBAAA,uCAPA;AAQA,iBAAA,uCARA;AASA,oBAAA,uCATA;AAUA,iBAAA,uCAVA;AAWA,oBAAA,uCAXA;AAYA,iBAAA,uCAZA;AAaA,oBAAA,uCAbA;AAcA,iBAAA,uCAdA;AAeA,oBAAA,uCAfA;AAgBA,iBAAA,oCAhBA;AAiBA,cAAA,oCAjBA;AAkBA,iBAAA,oCAlBA;AAmBA,cAAA,oCAnBA;AAoBA,iBAAA,oCApBA;AAqBA,cAAA,oCArBA;AAsBA,iBAAA,oCAtBA;AAuBA,cAAA,oCAvBA;AAwBA,iBAAA,oCAxBA;AAyBA,cAAA,oCAzBA;AA0BA,iBAAA,oCA1BA;AA2BA,cAAA,oCA3BA;AA4BA,iBAAA,oCA5BA;AA6BA,cAAA,oCA7BA;AA8BA,iBAAA,oCA9BA;AA+BA,cAAA,oCA/BA;AAgCA,iBAAA,oCAhCA;AAiCA,cAAA,oCAjCA;AAkCA,iBAAA,oCAlCA;AAmCA,cAAA,oCAnCA;AAoCA,iBAAA,oCApCA;AAqCA,cAAA,oCArCA;AAsCA,iBAAA,oCAtCA;AAuCA,cAAA,oCAvCA;AAwCA,iBAAA,oCAxCA;AAyCA,cAAA,oCAzCA;AA0CA,iBAAA,oCA1CA;AA2CA,cAAA,oCA3CA;AA4CA,iBAAA,uCA5CA;AA6CA,oBAAA,uCA7CA;AA8CA,iBAAA,uCA9CA;AA+CA,oBAAA,uCA/CA;AAgDA,iBAAA,oCAhDA;AAiDA,cAAA,oCAjDA;AAkDA,iBAAA,oCAlDA;AAmDA,cAAA,oCAnDA;AAoDA,iBAAA,oCApDA;AAqDA,iBAAA,uCArDA;AAsDA,oBAAA,uCAtDA;AAuDA,iBAAA,uCAvDA;AAwDA,oBAAA,uCAxDA;AAyDA,iBAAA,uCAzDA;AA0DA,oBAAA,uCA1DA;AA2DA,iBAAA,uCA3DA;AA4DA,oBAAA,uCA5DA;AA6DA,iBAAA,uCA7DA;AA8DA,oBAAA,uCA9DA;AA+DA,iBAAA,uCA/DA;AAgEA,oBAAA,uCAhEA;AAiEA,iBAAA,uCAjEA;AAkEA,oBAAA,uCAlEA;AAmEA,cAAA,oCAnEA;AAoEA,iBAAA,oCApEA;AAqEA,cAAA,oCArEA;AAsEA,iBAAA,uCAtEA;AAuEA,oBAAA,uCAvEA;AAwEA,iBAAA,uCAxEA;AAyEA,oBAAA,uCAzEA;AA0EA,iBAAA,oCA1EA;AA2EA,cAAA,oCA3EA;AA4EA,iBAAA,oCA5EA;AA6EA,cAAA,oCA7EA;AA8EA,iBAAA,oCA9EA;AA+EA,cAAA,oCA/EA;AAgFA,iBAAA,oCAhFA;AAiFA,cAAA,oCAjFA;AAkFA,iBAAA,oCAlFA;AAmFA,cAAA,oCAnFA;AAoFA,iBAAA,oCApFA;AAqFA,cAAA,oCArFA;AAsFA,iBAAA,uCAtFA;AAuFA,oBAAA,uCAvFA;AAwFA,iBAAA,uCAxFA;AAyFA,oBAAA,uCAzFA;AA0FA,iBAAA,oCA1FA;AA2FA,cAAA,oCA3FA;AA4FA,iBAAA,oCA5FA;AA6FA,cAAA,oCA7FA;AA8FA,iBAAA,oCA9FA;AA+FA,cAAA,oCA/FA;AAgGA,iBAAA,oCAhGA;AAiGA,cAAA,oCAjGA;AAkGA,iBAAA,oCAlGA;AAmGA,oBAAA,0CAnGA;AAoGA,uBAAA,0CApGA;AAqGA,cAAA,oCArGA;AAsGA,iBAAA,oCAtGA;AAuGA,cAAA,oCAvGA;AAwGA,iBAAA,oCAxGA;AAyGA,cAAA,oCAzGA;AA0GA,iBAAA,oCA1GA;AA2GA,cAAA,oCA3GA;AA4GA,iBAAA,oCA5GA;AA6GA,cAAA,oCA7GA;AA8GA,iBAAA,oCA9GA;AA+GA,iBAAA,uCA/GA;AAgHA,oBAAA,uCAhHA;AAiHA,cAAA,oCAjHA;AAkHA,iBAAA,oCAlHA;AAmHA,cAAA,oCAnHA;AAoHA,iBAAA,oCApHA;AAqHA,cAAA,oCArHA;AAsHA,iBAAA,uCAtHA;AAuHA,oBAAA,uCAvHA;AAwHA,iBAAA,oCAxHA;AAyHA,cAAA,oCAzHA;AA0HA,iBAAA,oCA1HA;AA2HA,cAAA,oCA3HA;AA4HA,iBAAA,oCA5HA;AA6HA,cAAA,oCA7HA;AA8HA,iBAAA,oCA9HA;AA+HA,cAAA,oCA/HA;AAgIA,iBAAA,oCAhIA;AAiIA,cAAA,oCAjIA;AAkIA,iBAAA,oCAlIA;AAmIA,cAAA,oCAnIA;AAoIA,iBAAA,oCApIA;AAqIA,cAAA,oCArIA;AAsIA,iBAAA,oCAtIA;AAuIA,cAAA,oCAvIA;AAwIA,iBAAA,oCAxIA;AAyIA,cAAA,oCAzIA;AA0IA,iBAAA,oCA1IA;AA2IA,cAAA,oCA3IA;AA4IA,iBAAA,oCA5IA;AA6IA,cAAA,oCA7IA;AA8IA,iBAAA,oCA9IA;AA+IA,cAAA,oCA/IA;AAgJA,iBAAA,oCAhJA;AAiJA,cAAA,oCAjJA;AAkJA,iBAAA,oCAlJA;AAmJA,cAAA,oCAnJA;AAoJA,iBAAA,oCApJA;AAqJA,cAAA,oCArJA;AAsJA,iBAAA,oCAtJA;AAuJA,cAAA,oCAvJA;AAwJA,iBAAA,oCAxJA;AAyJA,cAAA,oCAzJA;AA0JA,iBAAA,oCA1JA;AA2JA,cAAA,oCA3JA;AA4JA,iBAAA,oCA5JA;AA6JA,cAAA,oCA7JA;AA8JA,iBAAA,oCA9JA;AA+JA,cAAA,oCA/JA;AAgKA,iBAAA,uCAhKA;AAiKA,oBAAA,uCAjKA;AAkKA,iBAAA,oCAlKA;AAmKA,cAAA,oCAnKA;AAoKA,iBAAA,oCApKA;AAqKA,cAAA,oCArKA;AAsKA,iBAAA,oCAtKA;AAuKA,cAAA,oCAvKA;AAwKA,iBAAA,oCAxKA;AAyKA,cAAA,oCAzKA;AA0KA,iBAAA,oCA1KA;AA2KA,cAAA,oCA3KA;AA4KA,iBAAA,uCA5KA;AA6KA,oBAAA,uCA7KA;AA8KA,iBAAA,oCA9KA;AA+KA,cAAA,oCA/KA;AAgLA,iBAAA,oCAhLA;AAiLA,iBAAA,uCAjLA;AAkLA,oBAAA,uCAlLA;AAmLA,cAAA,oCAnLA;AAoLA,iBAAA,oCApLA;AAqLA,cAAA,oCArLA;AAsLA,iBAAA,uCAtLA;AAuLA,oBAAA,uCAvLA;AAwLA,iBAAA,oCAxLA;AAyLA,cAAA,oCAzLA;AA0LA,iBAAA,oCA1LA;AA2LA,cAAA,oCA3LA;AA4LA,iBAAA,oCA5LA;AA6LA,cAAA,oCA7LA;AA8LA,iBAAA,oCA9LA;AA+LA,cAAA,oCA/LA;AAgMA,iBAAA,oCAhMA;AAiMA,cAAA,oCAjMA;AAkMA,iBAAA,oCAlMA;AAmMA,cAAA,oCAnMA;AAoMA,iBAAA,oCApMA;AAqMA,cAAA,oCArMA;AAsMA,iBAAA,oCAtMA;AAuMA,cAAA,oCAvMA;AAwMA,iBAAA,oCAxMA;AAyMA,cAAA,oCAzMA;AA0MA,mBAAA,yCA1MA;AA2MA,sBAAA,yCA3MA;AA4MA,iBAAA,oCA5MA;AA6MA,cAAA,oCA7MA;AA8MA,iBAAA,oCA9MA;AA+MA,cAAA,oCA/MA;AAgNA,iBAAA,oCAhNA;AAiNA,cAAA,oCAjNA;AAkNA,iBAAA,oCAlNA;AAmNA,cAAA,oCAnNA;AAoNA,iBAAA,oCApNA;AAqNA,cAAA,oCArNA;AAsNA,iBAAA,oCAtNA;AAuNA,eAAA,qCAvNA;AAwNA,kBAAA,qCAxNA;AAyNA,cAAA,oCAzNA;AA0NA,iBAAA,oCA1NA;AA2NA,cAAA,oCA3NA;AA4NA,iBAAA,oCA5NA;AA6NA,iBAAA,uCA7NA;AA8NA,oBAAA,uCA9NA;AA+NA,eAAA,qCA/NA;AAgOA,kBAAA,qCAhOA;AAiOA,cAAA,oCAjOA;AAkOA,iBAAA,oCAlOA;AAmOA,eAAA,qCAnOA;AAoOA,kBAAA,qCApOA;AAqOA,eAAA,qCArOA;AAsOA,oBAAA,0CAtOA;AAuOA,uBAAA,0CAvOA;AAwOA,kBAAA,qCAxOA;AAyOA,iBAAA,uCAzOA;AA0OA,oBAAA,uCA1OA;AA2OA,cAAA,oCA3OA;AA4OA,iBAAA,oCA5OA;AA6OA,cAAA,oCA7OA;AA8OA,iBAAA,oCA9OA;AA+OA,cAAA,oCA/OA;AAgPA,mBAAA,yCAhPA;AAiPA,sBAAA,yCAjPA;AAkPA,iBAAA,oCAlPA;AAmPA,cAAA,oCAnPA;AAoPA,iBAAA,oCApPA;AAqPA,oBAAA,0CArPA;AAsPA,uBAAA,0CAtPA;AAuPA,cAAA,oCAvPA;AAwPA,iBAAA,oCAxPA;AAyPA,iBAAA,uCAzPA;AA0PA,oBAAA,uCA1PA;AA2PA,iBAAA,uCA3PA;AA4PA,oBAAA,uCA5PA;AA6PA,iBAAA,uCA7PA;AA8PA,oBAAA;AA9PA,KAAA;;AAkQA,aAAA,cAAA,CAAA,GAAA,EAAA;AACA,UAAA,EAAA,GAAA,qBAAA,CAAA,GAAA,CAAA;AACA,aAAA,mBAAA,CAAA,EAAA,CAAA;AACA;;AACA,aAAA,qBAAA,CAAA,GAAA,EAAA;AACA,UAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,GAAA,EAAA,GAAA,CAAA,EAAA;AACA,YAAA,CAAA,GAAA,IAAA,KAAA,CAAA,yBAAA,GAAA,GAAA,GAAA,CAAA;AACA,QAAA,CAAA,CAAA,IAAA,GAAA,kBAAA;AACA,cAAA,CAAA;AACA;;AACA,aAAA,GAAA,CAAA,GAAA,CAAA;AACA;;AACA,IAAA,cAAA,CAAA,IAAA,GAAA,SAAA,kBAAA,GAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,KAFA;;AAGA,IAAA,cAAA,CAAA,OAAA,GAAA,qBAAA;AACA,IAAA,MAAA,CAAA,OAAA,GAAA,cAAA;AACA,IAAA,cAAA,CAAA,EAAA,GAAA,wDAAA;;;;;;;;;;;;;;;;ACnRA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,uwGAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,4zBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,+9CAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,06CAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,ijDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,2BAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,msMAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,sqJAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,m9HAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yyhCAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,usDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,2ilBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qkGAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,gxPAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6sdAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,k/EAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,48GAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,0xIAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,mpaAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,oiZAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,swEAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,u2FAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,+7WAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,04PAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,g5MAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,osGAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6TAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,2SAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,8WAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,wBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6sBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,u0DAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,WAAA,EAAA,YAAA;AAAA,aAAA,SAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,YAAA;AAAA,aAAA,MAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,YAAA,EAAA,YAAA;AAAA,aAAA,UAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,YAAA,EAAA,YAAA;AAAA,aAAA,UAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,WAAA,EAAA,YAAA;AAAA,aAAA,SAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,YAAA;AAAA,aAAA,MAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,gBAAA,EAAA,YAAA;AAAA,aAAA,cAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,kBAAA,EAAA,YAAA;AAAA,aAAA,gBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,kBAAA,EAAA,YAAA;AAAA,aAAA,gBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,eAAA,EAAA,YAAA;AAAA,aAAA,aAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,sBAAA,EAAA,YAAA;AAAA,aAAA,oBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,iBAAA,EAAA,YAAA;AAAA,aAAA,eAAA;AAAA,KAAA;AAAA;;;;;;;;;;;;;;;AAcA;;;AAEA,QAAA,cAAA,GAAA,uBAAA,CAAA,EAAA,CAAA,EAAA;AACA,MAAA,cAAA,GAAA,MAAA,CAAA,cAAA,IACA;AAAU,QAAA,SAAA,EAAA;AAAV,mBAA0B,KAA1B,IAA0B,UAAA,CAAA,EAAA,CAAA,EAAA;AAAsC,QAAA,CAAA,CAAA,SAAA,GAAA,CAAA;AAAmB,OADnF,IAEA,UAAA,CAAA,EAAA,CAAA,EAAA;AAAyB,aAAA,IAAA,CAAA,IAAA,CAAA;AAAA,cAAA,CAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AAAuD,OAFhF;;AAGA,aAAA,cAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,KALA;;AAOO,aAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,MAAA,cAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AACA,eAAA,EAAA,GAAA;AAAmB,aAAA,WAAA,GAAA,CAAA;AAAsB;;AACzC,MAAA,CAAA,CAAA,SAAA,GAAA,CAAA,KAAA,IAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,SAAA,GAAA,CAAA,CAAA,SAAA,EAAA,IAAA,EAAA,EAAA,CAAA;AACA;;AAEO,QAAA,OAAA,GAAA,oBAAA;AACP,MAAA,OAAA,GAAA,MAAA,CAAA,MAAA,IAAA,SAAA,QAAA,CAAA,CAAA,EAAA;AACA,aAAA,IAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,MAAA,EAAgD,CAAA,GAAA,CAAhD,EAAuD,CAAA,EAAvD,EAAuD;AACvD,UAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,eAAA,IAAA,CAAA,IAAA,CAAA;AAAA,gBAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AACA;;AACA,eAAA,CAAA;AACA,OANA;;AAOA,aAAA,OAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AACA,KATO;;AAWA,aAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,IAAA,CAAA;AAAA,YAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,CAAA,IAAA,CAAA,EACA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AADA;;AAEA,UAAA,CAAA,IAAA,IAAA,IAAA,OAAA,MAAA,CAAA,qBAAA,KAAA,UAAA,EACA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,qBAAA,CAAA,CAAA,CAAA,EAA4D,CAAA,GAAA,CAAA,CAAA,MAA5D,EAA0E,CAAA,EAA1E,EAA0E;AAC1E,YAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,aAAA,CAAA;AACA;;AAEO,aAAA,UAAA,CAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA;AACP,UAAA,CAAA,GAAA,SAAA,CAAA,MAAA;AAAA,UAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,MAAA,GAAA,IAAA,KAAA,IAAA,GAAA,IAAA,GAAA,MAAA,CAAA,wBAAA,CAAA,MAAA,EAAA,GAAA,CAAA,GAAA,IAAA;AAAA,UAAA,CAAA;AACA,UAAA,OAAA,OAAA,KAAA,QAAA,IAAA,OAAA,OAAA,CAAA,QAAA,KAAA,UAAA,EAAA,CAAA,GAAA,OAAA,CAAA,QAAA,CAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,KACA,KAAA,IAAA,CAAA,GAAA,UAAA,CAAA,MAAA,GAAA,CAAA,EAA4C,CAAA,IAAA,CAA5C,EAAoD,CAAA,EAApD;AAAoD,YAAA,CAAA,GAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,GAAA,CAAA,KAAA,CAAA;AAApD;AACA,aAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,CAAA,EAAA,CAAA;AACA;;AAEO,aAAA,OAAA,CAAA,UAAA,EAAA,SAAA,EAAA;AACP,aAAA,UAAA,MAAA,EAAA,GAAA,EAAA;AAAmC,QAAA,SAAA,CAAA,MAAA,EAAA,GAAA,EAAA,UAAA,CAAA;AAAoC,OAAvE;AACA;;AAEO,aAAA,UAAA,CAAA,WAAA,EAAA,aAAA,EAAA;AACP,UAAA,OAAA,OAAA,KAAA,QAAA,IAAA,OAAA,OAAA,CAAA,QAAA,KAAA,UAAA,EAAA,OAAA,OAAA,CAAA,QAAA,CAAA,WAAA,EAAA,aAAA,CAAA;AACA;;AAEO,aAAA,SAAA,CAAA,OAAA,EAAA,UAAA,EAAA,CAAA,EAAA,SAAA,EAAA;AACP,aAAA,KAAA,CAAA,KAAA,CAAA,GAAA,OAAA,CAAA,EAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,iBAAA,SAAA,CAAA,KAAA,EAAA;AAAmC,cAAA;AAAM,YAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;AAA+B,WAArC,CAAqC,OAAA,CAAA,EAAA;AAAY,YAAA,MAAA,CAAA,CAAA,CAAA;AAAa;AAAA;;AACjG,iBAAA,QAAA,CAAA,KAAA,EAAA;AAAkC,cAAA;AAAM,YAAA,IAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA,KAAA,CAAA,CAAA;AAAmC,WAAzC,CAAyC,OAAA,CAAA,EAAA;AAAY,YAAA,MAAA,CAAA,CAAA,CAAA;AAAa;AAAA;;AACpG,iBAAA,IAAA,CAAA,MAAA,EAAA;AAA+B,UAAA,MAAA,CAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,IAAA,CAAA,CAAA,UAAA,OAAA,EAAA;AAAiE,YAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AAAyB,WAA1F,EAA0F,IAA1F,CAA0F,SAA1F,EAA0F,QAA1F,CAAA;AAAsH;;AACrJ,QAAA,IAAA,CAAA,CAAA,SAAA,GAAA,SAAA,CAAA,KAAA,CAAA,OAAA,EAAA,UAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AACK,OALL,CAAA;AAMA;;AAEO,aAAA,WAAA,CAAA,OAAA,EAAA,IAAA,EAAA;AACP,UAAA,CAAA,GAAA;AAAa,QAAA,KAAA,EAAA,CAAb;AAAa,QAAA,IAAA,EAAA,gBAAA;AAA6B,cAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAA0B,iBAAA,CAAA,CAAA,CAAA,CAAA;AAAe,SAAnF;AAAmF,QAAA,IAAA,EAAA,EAAnF;AAAmF,QAAA,GAAA,EAAA;AAAnF,OAAA;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AACA,aAAA,CAAA,GAAA;AAAgB,QAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAhB;AAAgB,iBAAA,IAAA,CAAA,CAAA,CAAhB;AAAgB,kBAAA,IAAA,CAAA,CAAA;AAAhB,OAAA,EAAqE,OAAA,MAAA,KAAA,UAAA,KAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,YAAA;AAAoE,eAAA,IAAA;AAAe,OAAnF,CAArE,EAAwJ,CAAxJ;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,eAAA,UAAA,CAAA,EAAA;AAAsB,iBAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AAAqB,SAA3C;AAA8C;;AACpE,eAAA,IAAA,CAAA,EAAA,EAAA;AACA,YAAA,CAAA,EAAA,MAAA,IAAA,SAAA,CAAA,iCAAA,CAAA;;AACA,eAAA,CAAA;AAAA,cAAA;AACA,gBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,KAAA,CAAA;;AACA,oBAAA,EAAA,CAAA,CAAA,CAAA;AACA,mBAAA,CAAA;AAAA,mBAAA,CAAA;AAAA,gBAAA,CAAA,GAAA,EAAA;AAAuC;;AACvC,mBAAA,CAAA;AAAA,gBAAA,CAAA,CAAA,KAAA;AAAkC,uBAAA;AAAS,kBAAA,KAAA,EAAA,EAAA,CAAA,CAAA,CAAT;AAAS,kBAAA,IAAA,EAAA;AAAT,iBAAA;;AAClC,mBAAA,CAAA;AAAA,gBAAA,CAAA,CAAA,KAAA;AAAkC,gBAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAW,gBAAA,EAAA,GAAA,CAAA,CAAA,CAAA;AAAU;;AACvD,mBAAA,CAAA;AAAA,gBAAA,EAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,EAAA;;AAAyC,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA;;AAAc;;AACvD;AACA,oBAAA,EAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA,GAAA,CAAA,CAAA,MAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA,GAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AAA6G,kBAAA,CAAA,GAAA,CAAA;AAAO;AAAU;;AAC9H,oBAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAAgF,kBAAA,CAAA,CAAA,KAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAiB;AAAO;;AACxG,oBAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAAwD,kBAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAgB,kBAAA,CAAA,GAAA,EAAA;AAAQ;AAAO;;AACvF,oBAAA,CAAA,IAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAA8C,kBAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA;;AAAgB,kBAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA;;AAAgB;AAAO;;AACrF,oBAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,GAAA;;AACA,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA;;AAAiC;AAXjC;;AAaA,YAAA,EAAA,GAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA,CAAA,CAAA;AACS,WAjBT,CAiBS,OAAA,CAAA,EAAA;AAAY,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAa,YAAA,CAAA,GAAA,CAAA;AAAS,WAjB3C,SAiB2C;AAAU,YAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAW;AAjBhE;;AAkBA,YAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;AAAmC,eAAA;AAAS,UAAA,KAAA,EAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAT;AAAS,UAAA,IAAA,EAAA;AAAT,SAAA;AACnC;AACA;;AAEO,aAAA,YAAA,CAAA,CAAA,EAAA,OAAA,EAAA;AACP,WAAA,IAAA,CAAA,IAAA,CAAA;AAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AACA;;AAEO,aAAA,QAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,OAAA,MAAA,KAAA,UAAA,IAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AAAA,UAAA,CAAA,GAAA,CAAA;AACA,UAAA,CAAA,EAAA,OAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,gBAAA;AACA,cAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,MAAA,EAAA,CAAA,GAAA,KAAA,CAAA;AACA,iBAAA;AAAoB,YAAA,KAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAApB;AAAoB,YAAA,IAAA,EAAA,CAAA;AAApB,WAAA;AACA;AAJA,OAAA;AAMA;;AAEO,aAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,OAAA,MAAA,KAAA,UAAA,IAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,CAAA,CAAA,EAAA,OAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AAAA,UAAA,CAAA;AAAA,UAAA,EAAA,GAAA,EAAA;AAAA,UAAA,CAAA;;AACA,UAAA;AACA,eAAA,CAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,EAAA,IAAA;AAAA,UAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA;AAAA;AACA,OAFA,CAGA,OAAA,KAAA,EAAA;AAAmB,QAAA,CAAA,GAAA;AAAM,UAAA,KAAA,EAAA;AAAN,SAAA;AAAsB,OAHzC,SAIA;AACA,YAAA;AACA,cAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,SAFA,SAGA;AAAiB,cAAA,CAAA,EAAA,MAAA,CAAA,CAAA,KAAA;AAAsB;AACvC;;AACA,aAAA,EAAA;AACA;;AAEO,aAAA,QAAA,GAAA;AACP,WAAA,IAAA,EAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,EAA4B,CAAA,GAAA,SAAA,CAAA,MAA5B,EAAkD,CAAA,EAAlD;AACA,QAAA,EAAA,GAAA,EAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AADA;;AAEA,aAAA,EAAA;AACA;;AAEO,aAAA,cAAA,GAAA;AACP,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAAA,MAAA,EAAiD,CAAA,GAAA,EAAjD,EAAyD,CAAA,EAAzD;AAAyD,QAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AAAzD;;AACA,WAAA,IAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAwC,CAAA,GAAA,EAAxC,EAAgD,CAAA,EAAhD;AACA,aAAA,IAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA,MAAA,EAAwD,CAAA,GAAA,EAAxD,EAAgE,CAAA,IAAA,CAAA,EAAhE;AACA,UAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AADA;AADA;;AAGA,aAAA,CAAA;AACA;;AAAA;;AAEO,aAAA,OAAA,CAAA,CAAA,EAAA;AACP,aAAA,gBAAA,OAAA,IAAA,KAAA,CAAA,GAAA,CAAA,EAAA,IAAA,IAAA,IAAA,OAAA,CAAA,CAAA,CAAA;AACA;;AAEO,aAAA,gBAAA,CAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA;AACP,UAAA,CAAA,MAAA,CAAA,aAAA,EAAA,MAAA,IAAA,SAAA,CAAA,sCAAA,CAAA;AACA,UAAA,CAAA,GAAA,SAAA,CAAA,KAAA,CAAA,OAAA,EAAA,UAAA,IAAA,EAAA,CAAA;AAAA,UAAA,CAAA;AAAA,UAAA,CAAA,GAAA,EAAA;AACA,aAAA,CAAA,GAAA,EAAA,EAAiB,IAAA,CAAA,MAAA,CAAjB,EAAiB,IAAA,CAAA,OAAA,CAAjB,EAAiB,IAAA,CAAA,QAAA,CAAjB,EAAiB,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA,GAAA,YAAA;AAAsF,eAAA,IAAA;AAAe,OAAtH,EAAsH,CAAtH;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,YAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,UAAA,CAAA,EAAA;AAAgC,iBAAA,IAAA,OAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AAAqC,YAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAA4C,WAAjF,CAAA;AAAmF,SAAnH;AAAsH;;AAC5I,eAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAA2B,YAAA;AAAM,UAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAiB,SAAvB,CAAuB,OAAA,CAAA,EAAA;AAAY,UAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAsB;AAAA;;AACpF,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,QAAA,CAAA,CAAA,KAAA,YAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,OAAA,EAAA,MAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAoG;;AAC1H,eAAA,OAAA,CAAA,KAAA,EAAA;AAA6B,QAAA,MAAA,CAAA,MAAA,EAAA,KAAA,CAAA;AAAuB;;AACpD,eAAA,MAAA,CAAA,KAAA,EAAA;AAA4B,QAAA,MAAA,CAAA,OAAA,EAAA,KAAA,CAAA;AAAwB;;AACpD,eAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAA2B,YAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,KAAA,EAAA,EAAA,CAAA,CAAA,MAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAyD;AACpF;;AAEO,aAAA,gBAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,EAAA,CAAA;AACA,aAAA,CAAA,GAAA,EAAA,EAAiB,IAAA,CAAA,MAAA,CAAjB,EAAiB,IAAA,CAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAA4C,cAAA,CAAA;AAAW,OAAvD,CAAjB,EAAwE,IAAA,CAAA,QAAA,CAAxE,EAAwE,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,YAAA;AAAqD,eAAA,IAAA;AAAe,OAA5I,EAA4I,CAA5I;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAyB,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,UAAA,CAAA,EAAA;AAA6B,iBAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA;AAAoB,YAAA,KAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAApB;AAAoB,YAAA,IAAA,EAAA,CAAA,KAAA;AAApB,WAAA,GAAoE,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAApE;AAAsF,SAAnH,GAAmH,CAAnH;AAAwH;AACjJ;;AAEO,aAAA,aAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,MAAA,CAAA,aAAA,EAAA,MAAA,IAAA,SAAA,CAAA,sCAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA;AAAA,UAAA,CAAA;AACA,aAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,OAAA,QAAA,KAAA,UAAA,GAAA,QAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAA2G,IAAA,CAAA,MAAA,CAA3G,EAA2G,IAAA,CAAA,OAAA,CAA3G,EAA2G,IAAA,CAAA,QAAA,CAA3G,EAA2G,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA,GAAA,YAAA;AAAsF,eAAA,IAAA;AAAe,OAAhN,EAAgN,CAAhN,CAAA;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,UAAA,CAAA,EAAA;AAA8B,iBAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AAAgD,YAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,OAAA,EAAA,MAAA,EAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,KAAA,CAAA;AAAyD,WAAzG,CAAA;AAA2G,SAAzI;AAA4I;;AAClK,eAAA,MAAA,CAAA,OAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AAA4C,QAAA,OAAA,CAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AAAsC,UAAA,OAAA,CAAA;AAAU,YAAA,KAAA,EAAA,CAAV;AAAU,YAAA,IAAA,EAAA;AAAV,WAAA,CAAA;AAAkC,SAAxE,EAAwE,MAAxE;AAAkF;AAC9H;;AAEO,aAAA,oBAAA,CAAA,MAAA,EAAA,GAAA,EAAA;AACP,UAAA,MAAA,CAAA,cAAA,EAAA;AAAgC,QAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,KAAA,EAAA;AAAuC,UAAA,KAAA,EAAA;AAAvC,SAAA;AAAwD,OAAxF,MAAwF;AAAO,QAAA,MAAA,CAAA,GAAA,GAAA,GAAA;AAAkB;;AACjH,aAAA,MAAA;AACA;;AAAA;;AAEO,aAAA,YAAA,CAAA,GAAA,EAAA;AACP,UAAA,GAAA,IAAA,GAAA,CAAA,UAAA,EAAA,OAAA,GAAA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,GAAA,IAAA,IAAA,EAAA,KAAA,IAAA,CAAA,IAAA,GAAA;AAAA,YAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AAAA;AACA,MAAA,MAAA,CAAA,OAAA,GAAA,GAAA;AACA,aAAA,MAAA;AACA;;AAEO,aAAA,eAAA,CAAA,GAAA,EAAA;AACP,aAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,GAAA;AAA4C,QAAA,OAAA,EAAA;AAA5C,OAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5KA,QAAM,MAAM,GAAW,CACrB;AAAC,MAAA,IAAI,EAAE,EAAP;AAAW,MAAA,SAAS,EAAE,MAAtB;AAA8B,MAAA,UAAU,EAAE;AAA1C,KADqB,EAErB;AAAC,MAAA,IAAI,EAAE,WAAP;AAAoB,MAAA,SAAS,EAAE,4EAAA,CAAA,oBAAA;AAA/B,KAFqB,EAGrB;AAAC,MAAA,IAAI,EAAE,SAAP;AAAkB,MAAA,SAAS,EAAE,gFAAA,CAAA,kBAAA;AAA7B,KAHqB,EAIrB;AAAC,MAAA,IAAI,EAAE,aAAP;AAAsB,MAAA,SAAS,EAAE,yFAAA,CAAA,qBAAA;AAAjC,KAJqB,EAKrB;AAAC,MAAA,IAAI,EAAE,eAAP;AAAwB,MAAA,SAAS,EAAE,kGAAA,CAAA,wBAAA;AAAnC,KALqB,EAMrB;AAAC,MAAA,IAAI,EAAE,mBAAP;AAA4B,MAAA,SAAS,EAAE,wGAAA,CAAA,0BAAA;AAAvC,KANqB,EAOrB;AAAC,MAAA,IAAI,EAAE,mBAAP;AAA4B,MAAA,SAAS,EAAE,0GAAA,CAAA,2BAAA;AAAvC,KAPqB,EAQrB;AAAC,MAAA,IAAI,EAAE,4BAAP;AAAqC,MAAA,SAAS,EAAE,uFAAA,CAAA,mBAAA;AAAhD,KARqB,EASrB;AAAC,MAAA,IAAI,EAAE,qCAAP;AAA8C,MAAA,SAAS,EAAE,0GAAA,CAAA,2BAAA;AAAzD,KATqB,EAUrB;AAAC,MAAA,IAAI,EAAE,YAAP;AAAqB,MAAA,SAAS,EAAE,yFAAA,CAAA,qBAAA;AAAhC,KAVqB,EAWrB;AAAC,MAAA,IAAI,EAAE,gBAAP;AAAyB,MAAA,SAAS,EAAE,gGAAA,CAAA,uBAAA;AAApC,KAXqB,EAYrB;AAAC,MAAA,IAAI,EAAE,gBAAP;AAAyB,MAAA,SAAS,EAAE,kGAAA,CAAA,wBAAA;AAApC,KAZqB,EAarB;AAAC,MAAA,IAAI,EAAE,UAAP;AAAmB,MAAA,SAAS,EAAE,mFAAA,CAAA,mBAAA;AAA9B,KAbqB,EAcrB;AAAC,MAAA,IAAI,EAAE,cAAP;AAAuB,MAAA,SAAS,EAAE,0FAAA,CAAA,qBAAA;AAAlC,KAdqB,EAerB;AAAC,MAAA,IAAI,EAAE,cAAP;AAAuB,MAAA,SAAS,EAAE,4FAAA,CAAA,sBAAA;AAAlC,KAfqB,EAgBrB;AAAC,MAAA,IAAI,EAAE,SAAP;AAAkB,MAAA,SAAS,EAAE,6EAAA,CAAA,iBAAA;AAA7B,KAhBqB,EAiBrB;AAAC,MAAA,IAAI,EAAE,SAAP;AAAkB,MAAA,SAAS,EAAE,6EAAA,CAAA,iBAAA;AAA7B,KAjBqB,EAkBrB;AAAC,MAAA,IAAI,EAAE,WAAP;AAAoB,MAAA,SAAS,EAAE,4EAAA,CAAA,oBAAA;AAA/B,KAlBqB,EAmBrB;AAAC,MAAA,IAAI,EAAE,iBAAP;AAA0B,MAAA,SAAS,EAAE,4EAAA,CAAA,oBAAA;AAArC,KAnBqB,EAoBrB;AAAC,MAAA,IAAI,EAAE,OAAP;AAAgB,MAAA,SAAS,EAAE,2EAAA,CAAA,gBAAA;AAA3B,KApBqB,EAqBrB;AAAC,MAAA,IAAI,EAAE,WAAP;AAAoB,MAAA,SAAS,EAAE,mFAAA,CAAA,mBAAA;AAA/B,KArBqB,EAsBrB;AAAC,MAAA,IAAI,EAAE,WAAP;AAAoB,MAAA,SAAS,EAAE,qFAAA,CAAA,oBAAA;AAA/B,KAtBqB,EAuBrB;AAAC,MAAA,IAAI,EAAE,UAAP;AAAmB,MAAA,SAAS,EAAE,4EAAA,CAAA,oBAAA;AAA9B,KAvBqB,EAwBrB;AAAC,MAAA,IAAI,EAAE,IAAP;AAAa,MAAA,SAAS,EAAE,MAAxB;AAAgC,MAAA,UAAU,EAAE;AAA5C,KAxBqB,CAAvB;;AA+BA,QAAa,gBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ5B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,OAAb,CAAqB,MAArB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAI4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACtDb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAa,YAAb;AAAA;AAAA;AAcE,4BAAoB,QAApB,EACoB,SADpB,EAEoB,OAFpB,EAEoC;AAAA;;AAAA;;AAFhB,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,OAAA,GAAA,OAAA;AAdpB,aAAA,KAAA,GAAQ,SAAR;AAEA,aAAA,IAAA,GAAiB,KAAjB;AAMA,aAAA,SAAA,GAAsB,KAAtB;AAEA,aAAA,QAAA,GAAoB,YAAY,CAAC,OAAb,CAAqB,UAArB,CAApB;;AAKE,YAAG,YAAY,CAAC,OAAb,CAAqB,eAArB,KAAyC,MAA5C,EAAmD;AACjD,eAAK,QAAL,GAAgB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,MAArB,CAAX,CAAhB;AACA,eAAK,IAAL,GAAY,IAAZ;;AACA,eAAK,QAAL,CAAc,UAAd,GAA2B,SAA3B,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B,YAAY,CAAC,OAAb,CAAqB,SAArB,EAA+B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,OAAtB,CAA/B;AAC5B,WAHH,EAGI,UAAA,KAAK;AAAA,mBAAI,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,sCAApB,EAA2D,WAA3D,EAAuE;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAvE,CAAJ;AAAA,WAHT;;AAKA,eAAK,QAAL,CAAc,gBAAd,GAAiC,SAAjC,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B,YAAY,CAAC,OAAb,CAAqB,eAArB,EAAqC,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,aAAtB,CAArC;AAC5B,WAHH,EAGI,UAAA,KAAK;AAAA,mBAAI,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,uCAApB,EAA4D,WAA5D,EAAwE;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAxE,CAAJ;AAAA,WAHT;;AAKA,eAAK,QAAL,CAAc,WAAd,GAA4B,SAA5B,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAgC,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,QAAtB,CAAhC,EAA3B,KACK,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAgC,IAAhC;AACN,WAJH,EAII,UAAA,KAAK;AAAA,mBAAI,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,kCAApB,EAAuD,WAAvD,EAAmE;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAnE,CAAJ;AAAA,WAJT;;AAMA,eAAK,QAAL,CAAc,aAAd,GAA8B,SAA9B,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B,YAAY,CAAC,OAAb,CAAqB,YAArB,EAAkC,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,UAAtB,CAAlC;AAC5B,WAHH,EAGI,UAAA,KAAK;AAAA,mBAAI,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,oCAApB,EAAyD,WAAzD,EAAqE;AAAC,cAAA,QAAQ,EAAE;AAAX,aAArE,CAAJ;AAAA,WAHT;;AAKA,eAAK,QAAL,CAAc,QAAd,GAAyB,SAAzB,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA6B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,KAAtB,CAA7B;AAC5B,WAHH,EAGI,UAAA,KAAK;AAAA,mBAAI,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,iCAApB,EAAsD,WAAtD,EAAkE;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAlE,CAAJ;AAAA,WAHT;;AAKA,eAAK,QAAL,CAAc,cAAd,GAA+B,SAA/B,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B;AACzB,cAAA,YAAY,CAAC,OAAb,CAAqB,SAArB,EAA+B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,WAAP,CAAmB,aAAnB,CAAiC,OAAhD,CAA/B;AACA,cAAA,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA6B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,WAAP,CAAmB,aAAnB,CAAiC,KAAhD,CAA7B;AACD;AACF,WANH,EAMI,UAAA,KAAK;AAAA,mBAAI,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,iCAApB,EAAsD,WAAtD,EAAkE;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAlE,CAAJ;AAAA,WANT;AAQD;AACF;;AAvDH;AAAA;AAAA,uCAyDc;AAAA;;AACV,eAAK,OAAL,CAAa,QAAb,CAAsB,CAAC,WAAD,CAAtB;;AACA,eAAK,QAAL,GAAgB,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,MAArB,CAAX,CAAhB;AACA,UAAA,YAAY,CAAC,OAAb,CAAqB,eAArB,EAAqC,MAArC;AACA,UAAA,YAAY,CAAC,OAAb,CAAqB,QAArB,EAA8B,KAAK,QAAL,CAAc,GAA5C;AACA,UAAA,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAgC,KAAK,QAAL,CAAc,IAA9C;AACA,eAAK,IAAL,GAAY,IAAZ;AACA,eAAK,SAAL,GAAiB,IAAjB;AACA,eAAK,QAAL,GAAgB,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAhB;AACA,eAAK,cAAL,GAAsB,oCAAtB;;AACA,eAAK,QAAL,CAAc,UAAd,GAA2B,SAA3B,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B,YAAY,CAAC,OAAb,CAAqB,SAArB,EAA+B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,OAAtB,CAA/B;AAC5B,WAHH,EAGI,UAAA,KAAK;AAAA,mBAAI,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,sCAApB,EAA2D,WAA3D,EAAuE;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAvE,CAAJ;AAAA,WAHT;;AAKA,eAAK,QAAL,CAAc,gBAAd,GAAiC,SAAjC,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B,YAAY,CAAC,OAAb,CAAqB,eAArB,EAAqC,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,aAAtB,CAArC;AAC5B,WAHH,EAGI,UAAA,KAAK;AAAA,mBAAI,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,uCAApB,EAA4D,WAA5D,EAAwE;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAxE,CAAJ;AAAA,WAHT;;AAKA,eAAK,QAAL,CAAc,WAAd,GAA4B,SAA5B,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAgC,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,QAAtB,CAAhC,EAA3B,KACK,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAgC,IAAhC;AACN,WAJH,EAII,UAAA,KAAK;AAAA,mBAAI,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,kCAApB,EAAuD,WAAvD,EAAmE;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAnE,CAAJ;AAAA,WAJT;;AAMA,eAAK,QAAL,CAAc,aAAd,GAA8B,SAA9B,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B,YAAY,CAAC,OAAb,CAAqB,YAArB,EAAkC,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,UAAtB,CAAlC;AAC5B,WAHH,EAGI,UAAA,KAAK;AAAA,mBAAI,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,oCAApB,EAAyD,WAAzD,EAAqE;AAAC,cAAA,QAAQ,EAAE;AAAX,aAArE,CAAJ;AAAA,WAHT;;AAKA,eAAK,QAAL,CAAc,QAAd,GAAyB,SAAzB,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA6B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,KAAtB,CAA7B;AAC5B,WAHH,EAGI,UAAA,KAAK;AAAA,mBAAI,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,iCAApB,EAAsD,WAAtD,EAAkE;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAlE,CAAJ;AAAA,WAHT;;AAKA,eAAK,QAAL,CAAc,cAAd,GAA+B,SAA/B,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B;AACzB,cAAA,YAAY,CAAC,OAAb,CAAqB,SAArB,EAA+B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,WAAP,CAAmB,aAAnB,CAAiC,OAAhD,CAA/B;AACA,cAAA,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA6B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,WAAP,CAAmB,aAAnB,CAAiC,KAAhD,CAA7B;AACD;AACF,WANH,EAMI,UAAA,KAAK;AAAA,mBAAI,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,iCAApB,EAAsD,WAAtD,EAAkE;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAlE,CAAJ;AAAA,WANT;AAQD;AArGH;AAAA;AAAA,oCAuGc,OAvGd,EAuG2B;AACvB,eAAK,SAAL,GAAiB,OAAO,CAAC,SAAzB;AACA,eAAK,cAAL,GAAsB,OAAO,CAAC,OAA9B;AACD;AA1GH;AAAA;AAAA,iCA4GQ;AACJ,UAAA,YAAY,CAAC,UAAb,CAAwB,MAAxB;AACA,UAAA,YAAY,CAAC,UAAb,CAAwB,SAAxB;AACA,UAAA,YAAY,CAAC,UAAb,CAAwB,UAAxB;AACA,UAAA,YAAY,CAAC,UAAb,CAAwB,eAAxB;AACA,UAAA,YAAY,CAAC,UAAb,CAAwB,YAAxB;AACA,eAAK,QAAL,GAAgB,IAAhB;AACA,eAAK,IAAL,GAAY,KAAZ;AACA,UAAA,YAAY,CAAC,OAAb,CAAqB,eAArB,EAAqC,OAArC;AACD;AArHH;;AAAA;AAAA,OAAA;;;;cAciC,wDAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,aAAA;;cACF,4CAAA,CAAA,QAAA;;;;AAhBnB,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALxB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,UADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,0EAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKwB,CAAA,EAAZ,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsBb;;;;;AAoHA,QAAa,SAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,SAAS,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CA9ErB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CACZ,2CAAA,CAAA,cAAA,CADY,EAEZ,oEAAA,CAAA,gBAAA,CAFY,EAGZ,iFAAA,CAAA,kBAAA,CAHY,EAIZ,oFAAA,CAAA,mBAAA,CAJY,EAKZ,wFAAA,CAAA,mBAAA,CALY,EAMZ,gFAAA,CAAA,oBAAA,CANY,EAOZ,6EAAA,CAAA,oBAAA,CAPY,EAQZ,0FAAA,CAAA,qBAAA,CARY,EASZ,0FAAA,CAAA,qBAAA,CATY,EAUZ,kFAAA,CAAA,qBAAA,CAVY,EAWZ,yFAAA,CAAA,qBAAA,CAXY,EAYZ,oFAAA,CAAA,sBAAA,CAZY,EAaZ,oFAAA,CAAA,sBAAA,CAbY,EAcZ,oFAAA,CAAA,sBAAA,CAdY,EAeZ,gGAAA,CAAA,uBAAA,CAfY,EAgBZ,kGAAA,CAAA,wBAAA,CAhBY,EAiBZ,wGAAA,CAAA,0BAAA,CAjBY,EAkBZ,0GAAA,CAAA,2BAAA,CAlBY,EAmBZ,0GAAA,CAAA,2BAAA,CAnBY,EAoBZ,wEAAA,CAAA,iBAAA,CApBY,EAqBZ,4FAAA,CAAA,sBAAA,CArBY,EAsBZ,2FAAA,CAAA,yBAAA,CAtBY,EAuBZ,8EAAA,CAAA,iBAAA,CAvBY,EAwBZ,8EAAA,CAAA,iBAAA,CAxBY,EAyBZ,oGAAA,CAAA,0BAAA,CAzBY,EA0BZ,kGAAA,CAAA,wBAAA,CA1BY,EA2BZ,qFAAA,CAAA,sBAAA,CA3BY,EA4BZ,2EAAA,CAAA,gBAAA,CA5BY,EA6BZ,mFAAA,CAAA,mBAAA,CA7BY,EA8BZ,qFAAA,CAAA,oBAAA,CA9BY,EA+BZ,qFAAA,CAAA,sBAAA,CA/BY,EAgCZ,mHAAA,CAAA,oCAAA,CAhCY,CADN;AAmCR,MAAA,OAAO,EAAE,CACP,2CAAA,CAAA,aAAA,CADO,EAEP,sDAAA,CAAA,eAAA,CAFO,EAGP,oDAAA,CAAA,eAAA,CAHO,EAIP,oDAAA,CAAA,eAAA,CAJO,EAKP,oDAAA,CAAA,eAAA,CALO,EAMP,oDAAA,CAAA,eAAA,CANO,EAOP,oDAAA,CAAA,eAAA,CAPO,EAQP,oDAAA,CAAA,eAAA,CARO,EASP,qDAAA,CAAA,gBAAA,CATO,EAUP,qDAAA,CAAA,gBAAA,CAVO,EAWP,qDAAA,CAAA,gBAAA,CAXO,EAYP,iDAAA,CAAA,iBAAA,CAZO,EAaP,sDAAA,CAAA,iBAAA,CAbO,EAcP,sDAAA,CAAA,iBAAA,CAdO,EAeP,sDAAA,CAAA,iBAAA,CAfO,EAgBP,gDAAA,CAAA,kBAAA,CAhBO,EAiBP,iDAAA,CAAA,kBAAA,CAjBO,EAkBP,uDAAA,CAAA,kBAAA,CAlBO,EAmBP,uDAAA,CAAA,kBAAA,CAnBO,EAoBP,uDAAA,CAAA,kBAAA,CApBO,EAqBP,uDAAA,CAAA,kBAAA,CArBO,EAsBP,uDAAA,CAAA,kBAAA,CAtBO,EAuBP,wDAAA,CAAA,mBAAA,CAvBO,EAwBP,yDAAA,CAAA,mBAAA,CAxBO,EAyBP,yDAAA,CAAA,oBAAA,CAzBO,EA0BP,0DAAA,CAAA,qBAAA,CA1BO,EA2BP,mDAAA,CAAA,qBAAA,CA3BO,EA4BP,2CAAA,CAAA,qBAAA,CA5BO,EA6BP,kEAAA,CAAA,yBAAA,CA7BO,CAnCD;AAkER,MAAA,eAAe,EAAE,CACf,2FAAA,CAAA,yBAAA,CADe,EAEf,qFAAA,CAAA,sBAAA,CAFe,EAGf,qFAAA,CAAA,sBAAA,CAHe,EAIf,mHAAA,CAAA,oCAAA,CAJe,CAlET;AAwER,MAAA,SAAS,EAAE,CACT;AAAC,QAAA,OAAO,EAAE,mDAAA,CAAA,iBAAA,CAAV;AAA2B,QAAA,QAAQ,EAAE;AAArC,OADS,EAET;AAAC,QAAA,OAAO,EAAE,sDAAA,CAAA,4BAAA,CAAV;AAAsC,QAAA,QAAQ,EAAE;AAAC,UAAA,WAAW,EAAE;AAAd;AAAhD,OAFS,CAxEH;AA4ER,MAAA,SAAS,EAAE,CAAC,2CAAA,CAAA,cAAA,CAAD;AA5EH,KAAT,CA8EqB,CAAA,EAAT,SAAS,CAAT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7Ib,QAAa,oBAAb;AAAA;AAAA;AAEE,oCACS,SADT,EAEkC,IAFlC,EAE2C;AAAA;;AADlC,aAAA,SAAA,GAAA,SAAA;AACyB,aAAA,IAAA,GAAA,IAAA;AAC9B,aAAK,IAAL,CAAU,SAAV,GAAsB,EAAtB;;AACA,aAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,KAAK,IAAL,CAAU,aAAV,CAAwB,MAA3C,EAAmD,CAAC,EAApD,EAAuD;AACrD,eAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,KAAK,IAAL,CAAU,OAAV,CAAkB,MAArC,EAA6C,CAAC,EAA9C,EAAiD;AAC/C,gBAAG,KAAK,IAAL,CAAU,aAAV,CAAwB,CAAxB,EAA2B,GAA3B,IAAkC,KAAK,IAAL,CAAU,OAAV,CAAkB,CAAlB,EAAqB,GAA1D,EAA8D;AAC5D,mBAAK,IAAL,CAAU,OAAV,CAAkB,MAAlB,CAAyB,CAAzB,EAA2B,CAA3B;AACA;AACD;AACF;AACF;AAEF;;AAfL;AAAA;AAAA,kCAiBY,GAjBZ,EAiBwB;AACpB,eAAK,SAAL,CAAe,KAAf,CAAqB,GAArB;AACD;AAnBH;AAAA;AAAA,4CAqBsB,EArBtB,EAqBiC;AAC7B,eAAK,IAAL,CAAU,SAAV,CAAoB,IAApB,CAAyB,EAAzB;AACD;AAvBH;;AAAA;AAAA,OAAA;;;;cAGsB,qDAAA,CAAA,cAAA;;;;gBACjB,0CAAA,CAAA,QAAA,C;AAAM,UAAA,IAAA,EAAA,CAAC,qDAAA,CAAA,iBAAA,CAAD;;;;;AAJE,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,kBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,mHAAA,CAAA,EAAA;AAFS,KAAV,CAIgC,EAI5B,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,qDAAA,CAAA,iBAAA,CAAP,CAAA,CAJ4B,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAa,kCAAb;AAAA;AAAA;AAEE,kDACS,SADT,EAEkC,IAFlC,EAE2C;AAAA;;AADlC,aAAA,SAAA,GAAA,SAAA;AACyB,aAAA,IAAA,GAAA,IAAA;AAE/B;;AANL;AAAA;AAAA,kCAQY,GARZ,EAQwB;AACpB,eAAK,SAAL,CAAe,KAAf,CAAqB,GAArB;AACD;AAVH;;AAAA;AAAA,OAAA;;;;cAGsB,qDAAA,CAAA,cAAA;;;;gBACjB,0CAAA,CAAA,QAAA,C;AAAM,UAAA,IAAA,EAAA,CAAC,qDAAA,CAAA,iBAAA,CAAD;;;;;AAJE,IAAA,kCAAkC,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ9C,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iCADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,iJAAA,CAAA,EAAA;AAFS,KAAV,CAI8C,EAI1C,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,qDAAA,CAAA,iBAAA,CAAP,CAAA,CAJ0C,CAAA,EAAlC,kCAAkC,CAAlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCb,QAAa,oBAAb;AAAA;AAAA;AAME,oCAAmB,SAAnB,EACkC,IADlC,EAC2C;AAAA;;AADxB,aAAA,SAAA,GAAA,SAAA;AACe,aAAA,IAAA,GAAA,IAAA;AALlC,aAAA,UAAA,GAAsB,EAAtB;AAOE,aAAK,YAAL,GAAoB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAChC,UAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,EAArB,CAArB,CAAnB,CADsB;AAEhC,UAAA,UAAU,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB;AAFoB,SAAd,CAApB;AAKA,aAAK,YAAL,CAAkB,GAAlB,CAAsB,YAAtB,EAAoC,aAApC,CAAkD,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,WAAL,CAAiB,KAAK,YAAL,CAAkB,GAAlB,CAAsB,UAAtB,CAAjB,CAArB,CAAlD;AAED;;AAhBH;AAAA;AAAA,oCAkBc,YAlBd,EAkB2C;AACvC,iBAAO,UAAC,OAAD,EAAmD;AACxD,gBAAM,KAAK,GAAQ,OAAO,CAAC,KAA3B;AACA,gBAAM,UAAU,GAAQ,YAAY,CAAC,KAArC;AACA,mBAAO,UAAU,KAAK,KAAf,GAAuB,IAAvB,GAA8B;AAAE,0BAAY;AAAE,gBAAA,KAAK,EAAL,KAAF;AAAS,gBAAA,UAAU,EAAV;AAAT;AAAd,aAArC;AACD,WAJD;AAKD;AAxBH;AAAA;AAAA,kCA0BY,GA1BZ,EA0BwB;AACpB,eAAK,SAAL,CAAe,KAAf,CAAqB,GAArB;AACD;AA5BH;;AAAA;AAAA,OAAA;;;;cAMgC,qDAAA,CAAA,cAAA;;;;gBAC3B,0CAAA,CAAA,QAAA,C;AAAM,UAAA,IAAA,EAAA,CAAC,qDAAA,CAAA,iBAAA,CAAD;;;;;AAPE,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,kBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,mHAAA,CAAA,EAAA;AAFS,KAAV,CAIgC,EAO5B,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,qDAAA,CAAA,iBAAA,CAAP,CAAA,CAP4B,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAa,uBAAb;AAAA;AAAA;AAEE,uCACS,SADT,EAEkC,IAFlC,EAE2C;AAAA;;AADlC,aAAA,SAAA,GAAA,SAAA;AACyB,aAAA,IAAA,GAAA,IAAA;AAE/B;;AANL;AAAA;AAAA,kCAQY,GARZ,EAQwB;AACpB,eAAK,SAAL,CAAe,KAAf,CAAqB,GAArB;AACD;AAVH;;AAAA;AAAA,OAAA;;;;cAGsB,qDAAA,CAAA,cAAA;;;;gBACjB,0CAAA,CAAA,QAAA,C;AAAM,UAAA,IAAA,EAAA,CAAC,qDAAA,CAAA,iBAAA,CAAD;;;;;AAJE,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJnC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,qBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,yHAAA,CAAA,EAAA;AAFS,KAAV,CAImC,EAI/B,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,qDAAA,CAAA,iBAAA,CAAP,CAAA,CAJ+B,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACPb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,kBAAb;AAAA;AAAA;AAEE,oCAAA;AAAA;AAAiB;;AAFnB;AAAA;AAAA,mCAIU,CACP;AALH;;AAAA;AAAA,OAAA;;AAAa,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,eADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,2GAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEb,QAAa,eAAb;AAAA;AAAA;AA0BE,+BAAmB,QAAnB,EACoB,SADpB,EAC2C;AAAA;;AAAA;;AADxB,aAAA,QAAA,GAAA,QAAA;AACC,aAAA,SAAA,GAAA,SAAA;AARpB,aAAA,MAAA,GAAgB,IAAI,IAAJ,EAAhB;AAEA,aAAA,MAAA,GAAkB,MAAlB;AAEA,aAAA,SAAA,GAAsB,KAAtB;AAKE,aAAK,QAAL,GAAgB,KAAK,QAAL,CAAc,cAAd,GAA+B,GAA/B,CAAmC,UAAA,OAAO;AAAA,iBAAI,MAAI,CAAC,cAAL,CAAoB,OAApB,CAAJ;AAAA,SAA1C,CAAhB;AACD;;AA7BH;AAAA;AAAA,uCA+BiB,OA/BjB,EA+B8B;AAC1B,iBAAO;AACL,YAAA,IAAI,EAAE,OAAO,CAAC,IADT;AAEL,YAAA,GAAG,EAAE,OAAO,CAAC;AAFR,WAAP;AAID;AApCH;AAAA;AAAA,yCAsCgB;AACZ,eAAK,cAAL,GAAsB,uBAAtB;AACA,eAAK,SAAL,GAAiB,IAAjB;AACA,eAAK,MAAL,GAAc,SAAd;AACA,UAAA,UAAU,CAAC,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAD,EAA4B,IAA5B,CAAV;AACD;AA3CH;AAAA;AAAA,qCA6CY;AACR,eAAK,UAAL,GAAkB,IAAlB;;AACA,cAAG,KAAK,cAAL,CAAoB,MAAvB,EAA8B;AAC5B,gBAAI,GAAG,GAAG,IAAI,IAAJ,EAAV;;AACA,iBAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,KAAK,cAAL,CAAoB,MAAvC,EAA+C,CAAC,EAAhD,EAAmD;AACjD,kBAAI,WAAW,GAAG,IAAI,IAAJ,CAAS,KAAK,cAAL,CAAoB,CAApB,EAAuB,MAAhC,CAAlB;;AACA,kBAAG,KAAK,cAAL,CAAoB,CAApB,EAAuB,OAAvB,CAA+B,SAA/B,IAA4C,KAAK,iBAAjD,IAAsE,GAAG,CAAC,QAAJ,MAAkB,WAAW,CAAC,QAAZ,EAAxF,IAAkH,GAAG,CAAC,WAAJ,MAAqB,WAAW,CAAC,WAAZ,EAA1I,EAAoK;AAClK,qBAAK,UAAL,GAAkB,KAAK,cAAL,CAAoB,CAApB,CAAlB;;AACA,oBAAI,IAAI,GAAG,KAAK,QAAL,CAAc,OAAd,CAAsB,KAAK,UAAL,CAAgB,UAAtC,CAAX;;AACA,qBAAK,eAAL,aAA0B,IAAI,CAAC,IAA/B,cAAuC,IAAI,CAAC,UAA5C,gBAA4D,IAAI,CAAC,QAAjE;AACA,qBAAK,MAAL,GAAc,gBAAd;AACA,qBAAK,SAAL,GAAiB,KAAjB;AACA;AACD,eAPD,MAOK;AACH,qBAAK,MAAL,GAAc,OAAd;AACD;AACF;;AACD,gBAAG,KAAK,MAAL,IAAe,OAAlB,EAA2B,KAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB;AAC5B,WAhBD,MAgBK;AACH,iBAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB;AACA,iBAAK,MAAL,GAAc,OAAd;AACD;AACF;AAnEH;AAAA;AAAA,yCAqEgB;AAAA;;AACZ,cAAG,KAAK,SAAL,CAAe,IAAf,IAAuB,QAA1B,EAAmC;AACjC,iBAAK,YAAL,GAAoB,KAAK,SAAL,CAAe,iBAAnC;AACD,WAFD,MAEK;AACH,iBAAK,YAAL,GAAoB,KAAK,SAAL,CAAe,aAAnC;AACD;;AAED,eAAK,UAAL,GAAkB;AAChB,YAAA,MAAM,EAAE,KAAK,MADG;AAEhB,YAAA,OAAO,EAAE;AACP,cAAA,SAAS,EAAE,KAAK,iBADT;AAEP,cAAA,IAAI,EAAE;AAFC;AAFO,WAAlB;AAQA,eAAK,aAAL,CAAmB,OAAnB,CAA2B,UAAC,YAAD,EAAc,KAAd,EAAuB;AAChD,YAAA,MAAI,CAAC,UAAL,CAAgB,OAAhB,CAAwB,IAAxB,CAA6B,IAA7B,CAAkC;AAChC,cAAA,YAAY,EAAE,YAAY,CAAC,GADK;AAEhC,cAAA,MAAM,EAAE;AAFwB,aAAlC;;AAIA,YAAA,MAAI,CAAC,YAAL,CAAkB,OAAlB,CAA0B,UAAA,KAAK,EAAG;AAChC,cAAA,MAAI,CAAC,UAAL,CAAgB,OAAhB,CAAwB,IAAxB,CAA6B,KAA7B,EAAoC,MAApC,CAA2C,IAA3C,CAAgD;AAC9C,gBAAA,IAAI,EAAE,KAAK,CAAC,IADkC;AAE9C,gBAAA,KAAK,EAAE;AAFuC,eAAhD;AAID,aALD;AAMD,WAXD;AAYA,eAAK,SAAL,GAAiB,KAAjB;AACD;AAjGH;AAAA;AAAA,wCAmGkB,EAnGlB,EAmGoB;AAChB,cAAI,OAAO,GAAG,KAAK,QAAL,CAAc,UAAd,CAAyB,EAAzB,CAAd;;AACA,eAAK,cAAL,GAAsB,OAAO,CAAC,OAA9B;AACA,eAAK,WAAL,GAAmB,OAAO,CAAC,IAA3B;AACA,eAAK,UAAL,GAAkB,OAAO,CAAC,UAA1B;AACA,eAAK,aAAL,GAAqB,OAAO,CAAC,aAA7B;AACA,eAAK,MAAL,GAAc,MAAd;AACD;AA1GH;AAAA;AAAA,0CA4GoB,EA5GpB,EA4GsB;AAClB,eAAK,SAAL,GAAiB,KAAK,QAAL,CAAc,YAAd,CAA2B,EAA3B,CAAjB;AACA,eAAK,MAAL,GAAc,MAAd;AACD;AA/GH;AAAA;AAAA,iCAiHQ,CAEL;AAnHH;AAAA;AAAA,+BAqHM;AAAA;;AACF,cAAI,OAAO,GAAG,IAAd;;AACA,eAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,KAAK,UAAL,CAAgB,OAAhB,CAAwB,IAAxB,CAA6B,MAAhD,EAAwD,CAAC,EAAzD,EAA4D;AAC1D,iBAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,KAAK,UAAL,CAAgB,OAAhB,CAAwB,IAAxB,CAA6B,CAA7B,EAAgC,MAAhC,CAAuC,MAA1D,EAAkE,CAAC,EAAnE,EAAsE;AACpE,kBAAG,KAAK,UAAL,CAAgB,OAAhB,CAAwB,IAAxB,CAA6B,CAA7B,EAAgC,MAAhC,CAAuC,CAAvC,EAA0C,KAA1C,IAAmD,EAAtD,EAAyD;AACvD,gBAAA,OAAO,GAAG,KAAV;AACD;AACF;AACF;;AACD,cAAG,CAAC,OAAJ,EAAa,OAAO,KAAK,CAAC,0CAAD,CAAZ,CAAb,KACI;AACF,iBAAK,QAAL,CAAc,aAAd,CAA4B;AAAC,cAAA,OAAO,EAAE,KAAK;AAAf,aAA5B,EAAuD,KAAK,eAA5D,EAA6E,SAA7E,CACE,UAAA,MAAM,EAAG;AACP,kBAAG,MAAM,CAAC,OAAP,IAAkB,SAArB,EAA+B;AAC7B,gBAAA,MAAI,CAAC,QAAL,CAAc,kBAAd,CAAiC,IAAjC;;AACA,gBAAA,MAAI,CAAC,MAAL,GAAc,MAAd;AAEA,gBAAA,MAAI,CAAC,cAAL,GAAsB,MAAM,CAAC,OAAP,CAAe,OAArC;AAEA,gBAAA,MAAI,CAAC,iBAAL,GAAyB,IAAzB;;AACA,gBAAA,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,8BAApB,EAAmD,WAAnD,EAA+D;AAAC,kBAAA,QAAQ,EAAC;AAAV,iBAA/D;AACD;AACF,aAXH,EAWI,UAAA,KAAK;AAAA,qBAAI,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,uBAApB,EAA4C,WAA5C,EAAwD;AAAC,gBAAA,QAAQ,EAAE;AAAX,eAAxD,CAAJ;AAAA,aAXT;AAaD;AACF;AA9IH;;AAAA;AAAA,OAAA;;;;cA0BgC,wDAAA,CAAA,iBAAA;;cACE,wDAAA,CAAA,aAAA;;;;AA3BrB,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4GAAA,CAAA,EAAA;AAFS,KAAV,CAI2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEb,QAAa,mBAAb;AAAA;AAAA;AA0CE,mCAAoB,eAApB,EACoB,QADpB,EAEoB,SAFpB,EAGoB,OAHpB,EAGoC;AAAA;;AAAA;;AAHhB,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,OAAA,GAAA,OAAA;AAzCpB,aAAA,QAAA,GAAqB,KAArB;AAEA,aAAA,QAAA,GAAoB,YAAY,CAAC,OAAb,CAAqB,UAArB,CAApB;AAMA,aAAA,SAAA,GAAsB,KAAtB;AAEA,aAAA,cAAA,GAA0B,EAA1B;AAEA,aAAA,SAAA,GAA4B;AAC1B,UAAA,OAAO,EAAE,IADiB;AAE1B,UAAA,IAAI,EAAE,QAFoB;AAG1B,UAAA,OAAO,EAAE,mBAAI;AACX,gBAAG,OAAO,CAAC,wFAAD,CAAV,EAAqG;AACnG,cAAA,MAAI,CAAC,cAAL,GAAsB,2BAAtB;AACA,cAAA,MAAI,CAAC,SAAL,GAAiB,IAAjB;;AACA,cAAA,MAAI,CAAC,QAAL,CAAc,YAAd,CAA2B,MAAI,CAAC,MAAL,CAAY,GAAvC,EAA4C,SAA5C,CACE,UAAA,MAAM,EAAG;AACP,oBAAG,MAAM,CAAC,OAAP,IAAkB,SAArB,EAA+B;AAC7B,kBAAA,MAAI,CAAC,QAAL,CAAc,kBAAd,CAAiC,IAAjC;;AACA,kBAAA,MAAI,CAAC,QAAL,CAAc,iBAAd,CAAgC,IAAhC;;AACA,kBAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,kBAAA,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,0CAApB,EAA+D,WAA/D,EAA2E;AAAC,oBAAA,QAAQ,EAAE;AAAX,mBAA3E;AACD;AAEF,eATH,EASI,UAAA,KAAK,EAAG;AACR,gBAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,gBAAA,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,8CAApB,EAAmE,WAAnE,EAA+E;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAA/E;AACD,eAZH;AAcD;AACF,WAtByB;AAuB1B,UAAA,OAAO,EAAE;AAvBiB,SAA5B;;AA8BE,aAAK,eAAL,CAAqB,MAArB,CAA4B,SAA5B,CACE,UAAC,MAAD,EAAoB;AAClB,UAAA,MAAI,CAAC,QAAL,GAAgB,MAAM,CAAC,EAAvB;AACA,UAAA,MAAI,CAAC,MAAL,GAAc,MAAI,CAAC,QAAL,CAAc,SAAd,CAAwB,MAAI,CAAC,QAA7B,CAAd;AACD,SAJH;;AAKA,aAAK,eAAL,GAAuB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACnC,UAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,YAAA,KAAK,EAAE,KAAK,MAAL,CAAY,IAApB;AAA0B,YAAA,QAAQ,EAAE;AAApC,WAAhB,EAA0D,2CAAA,CAAA,YAAA,CAAA,CAAW,QAArE,CAD6B;AAEnC,UAAA,KAAK,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,YAAA,KAAK,EAAE,KAAK,MAAL,CAAY,KAApB;AAA2B,YAAA,QAAQ,EAAE;AAArC,WAAhB,EAA2D,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAtE,CAF4B;AAGnC,UAAA,OAAO,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,YAAA,KAAK,EAAE,KAAK,MAAL,CAAY,OAApB;AAA6B,YAAA,QAAQ,EAAE;AAAvC,WAAhB,CAH0B;AAInC,UAAA,SAAS,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,YAAA,KAAK,EAAE,KAAK,MAAL,CAAY,SAApB;AAA+B,YAAA,QAAQ,EAAE;AAAzC,WAAhB,EAA+D,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,kBAAX,CAAnB,CAArB,CAA/D;AAJwB,SAAd,CAAvB;AAMD;;AAzDH;AAAA;AAAA,+BA2DM;AACF,eAAK,QAAL,GAAgB,IAAhB;AACA,eAAK,eAAL,CAAqB,MAArB;AACD;AA9DH;AAAA;AAAA,+BAgEM;AAAA;;AACF,eAAK,cAAL,GAAsB,4CAAtB;AACA,eAAK,SAAL,GAAiB,IAAjB;;AACA,eAAK,QAAL,CAAc,YAAd,CAA2B,KAAK,eAAL,CAAqB,KAAhD,EAAsD,KAAK,QAA3D,EAAqE,SAArE,CACE,UAAA,MAAM,EAAG;AACP,YAAA,MAAI,CAAC,QAAL,CAAc,iBAAd,CAAgC,KAAhC;;AACA,YAAA,MAAI,CAAC,MAAL,GAAc,MAAM,CAAC,MAArB;AACA,YAAA,MAAI,CAAC,QAAL,GAAgB,KAAhB;;AACA,YAAA,MAAI,CAAC,eAAL,CAAqB,OAArB;;AACA,YAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,8BAApB,EAAmD,WAAnD,EAA+D;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA/D;AACD,WARH,EAQI,UAAA,KAAK,EAAG;AACR,YAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,6CAApB,EAAkE,WAAlE,EAA8E;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA9E;AACD,WAXH;AAaD;AAhFH;AAAA;AAAA,iCAkFQ;AACJ,eAAK,eAAL,CAAqB,OAArB;AACA,eAAK,eAAL,CAAqB,KAArB,CAA2B;AACzB,YAAA,IAAI,EAAE,KAAK,MAAL,CAAY,IADO;AAEzB,YAAA,KAAK,EAAE,KAAK,MAAL,CAAY,KAFM;AAGzB,YAAA,OAAO,EAAE,KAAK,MAAL,CAAY,OAHI;AAIzB,YAAA,SAAS,EAAE,KAAK,MAAL,CAAY;AAJE,WAA3B;AAMA,eAAK,QAAL,GAAgB,KAAhB;AACD;AA3FH;;AAAA;AAAA,OAAA;;;;cA0CwC,4CAAA,CAAA,gBAAA;;cACP,wDAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,aAAA;;cACF,4CAAA,CAAA,QAAA;;;;AA7CnB,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ/B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,uHAAA,CAAA,EAAA;AAFS,KAAV,CAI+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,QAAa,gBAAb;AAAA;AAAA;AAiBE,gCAAoB,QAApB,EACoB,SADpB,EAC2C;AAAA;;AADvB,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,SAAA,GAAA,SAAA;AAhBpB,aAAA,OAAA,GAAkB,KAAK,QAAL,CAAc,aAAd,EAAlB;AAEA,aAAA,MAAA,GAAkB,YAAY,CAAC,OAAb,CAAqB,QAArB,CAAlB;AACA,aAAA,QAAA,GAAoB,YAAY,CAAC,OAAb,CAAqB,UAArB,CAApB;AAEA,aAAA,SAAA,GAAsB,KAAtB;AAEA,aAAA,cAAA,GAA0B,yBAA1B;AAGA,aAAA,QAAA,GAAyB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,WAAnC,CAAnB,CAAzB;AACA,aAAA,aAAA,GAA8B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAA9B;AACA,aAAA,WAAA,GAA4B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,CAA5B;AACA,aAAA,aAAA,GAA8B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,kBAAX,CAAnB,CAArB,CAAnB,CAA9B;AAIE,aAAK,WAAL,GAAmB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC/B,UAAA,IAAI,EAAE,KAAK,QADoB;AAE/B,UAAA,KAAK,EAAE,KAAK,aAFmB;AAG/B,UAAA,OAAO,EAAE,KAAK,WAHiB;AAI/B,UAAA,SAAS,EAAE,KAAK;AAJe,SAAd,CAAnB;AAMD;;AAzBH;AAAA;AAAA,gCA2BO;AACH,eAAK,WAAL,CAAiB,KAAjB;AACD;AA7BH;AAAA;AAAA,qCA+BY;AAAA;;AACR,eAAK,SAAL,GAAiB,IAAjB;AACA,cAAI,IAAI,GAAG,KAAK,WAAL,CAAiB,KAA5B;;AACA,eAAK,QAAL,CAAc,YAAd,CAA2B,IAA3B,EAAiC,SAAjC,CACE,UAAA,MAAM,EAAG;AACP,YAAA,MAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,MAAM,CAAC,MAAzB;;AACA,YAAA,MAAI,CAAC,QAAL,CAAc,iBAAd,CAAgC,IAAhC;;AACA,YAAA,MAAI,CAAC,WAAL,CAAiB,KAAjB;;AACA,YAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,gDAApB,EAAqE,WAArE,EAAiF;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAjF;AACD,WAPH,EAOI,UAAA,KAAK,EAAG;AACR,YAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,mDAApB,EAAwE,WAAxE,EAAoF;AAAC,cAAA,QAAQ,EAAE;AAAX,aAApF;AACD,WAVH;AAYD;AA9CH;;AAAA;AAAA,OAAA;;;;cAiBiC,wDAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,aAAA;;;;AAlBrB,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,aADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,+GAAA,CAAA,EAAA;AAFS,KAAV,CAI4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEb,QAAa,sBAAb;AAAA;AAAA;AAuCE,sCAAoB,eAApB,EACoB,QADpB,EAEoB,SAFpB,EAE2C;AAAA;;AAAA;;AAFvB,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,SAAA,GAAA,SAAA;AA/BpB,aAAA,QAAA,GAAoB,YAAY,CAAC,OAAb,CAAqB,UAArB,CAApB;AAEA,aAAA,SAAA,GAAsB,KAAtB;AACA,aAAA,cAAA,GAA0B,EAA1B;AAEA,aAAA,SAAA,GAA4B;AAC1B,UAAA,OAAO,EAAE,IADiB;AAE1B,UAAA,IAAI,EAAE,QAFoB;AAG1B,UAAA,OAAO,EAAE,mBAAI;AACX,gBAAG,OAAO,CAAC,sFAAD,CAAV,EAAmG;AACjG,cAAA,MAAI,CAAC,cAAL,GAAsB,yBAAtB;AACA,cAAA,MAAI,CAAC,SAAL,GAAiB,IAAjB;;AACA,cAAA,MAAI,CAAC,QAAL,CAAc,eAAd,CAA8B,MAAI,CAAC,SAAL,CAAe,GAA7C,EAAkD,SAAlD,CACA,UAAA,MAAM,EAAG;AACP,oBAAG,MAAM,CAAC,OAAP,IAAkB,SAArB,EAA+B;AAC7B,kBAAA,MAAI,CAAC,QAAL,CAAc,oBAAd,CAAmC,IAAnC;;AACA,kBAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,kBAAA,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,wCAApB,EAA6D,WAA7D,EAAyE;AAAC,oBAAA,QAAQ,EAAE;AAAX,mBAAzE;AACD;AACF,eAPD,EAOE,UAAA,KAAK,EAAG;AACR,gBAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,gBAAA,MAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,4CAApB,EAAiE,WAAjE,EAA6E;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAA7E;AACD,eAVD;AAYD;AACF,WApByB;AAqB1B,UAAA,OAAO,EAAE;AArBiB,SAA5B;;AA2BE,aAAK,eAAL,CAAqB,MAArB,CAA4B,SAA5B,CACE,UAAC,MAAD,EAAoB;AAClB,UAAA,MAAI,CAAC,SAAL,GAAiB,MAAI,CAAC,QAAL,CAAc,YAAd,CAA2B,MAAM,CAAC,EAAlC,CAAjB;AACA,UAAA,MAAI,CAAC,QAAL,GAAgB,KAAhB;;AACA,UAAA,MAAI,CAAC,oBAAL;AACD,SALH;AAOD;;AAjDH;AAAA;AAAA,+CAmDsB;AAAA;;AAClB,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,SAAjB;;AACA,cAAG,KAAK,SAAL,CAAe,IAAf,IAAuB,QAA1B,EAAmC;AACjC,gBAAI,WAAJ;AACA,gBAAG,KAAK,SAAL,CAAe,WAAlB,EAA+B,WAAW,GAAG,KAAK,SAAL,CAAe,WAA7B,CAA/B,KACK,WAAW,GAAG,EAAd;AACL,iBAAK,aAAL,GAAqB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACjC,cAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,SAAL,CAAe,IAA/B,EAAoC,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAApC,CAD2B;AAEjC,cAAA,IAAI,EAAG,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,SAAL,CAAe,IAA/B,EAAoC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA/C,CAF0B;AAGjC,cAAA,cAAc,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,SAAL,CAAe,cAA/B,CAHiB;AAIjC,cAAA,iBAAiB,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,EAAd,CAJc;AAKjC,cAAA,WAAW,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,WAAhB,EAA4B,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAA5B;AALoB,aAAd,CAArB;AAOD,WAXD,MAWK;AACH,iBAAK,aAAL,GAAqB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACjC,cAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,SAAL,CAAe,IAA/B,EAAoC,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAApC,CAD2B;AAEjC,cAAA,IAAI,EAAG,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,SAAL,CAAe,IAA/B,EAAoC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA/C,CAF0B;AAGjC,cAAA,cAAc,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,SAAL,CAAe,cAA/B,CAHiB;AAIjC,cAAA,aAAa,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,EAAd,CAJkB;AAKjC,cAAA,iBAAiB,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,EAAd;AALc,aAAd,CAArB;AAOA,iBAAK,SAAL,CAAe,aAAf,CAA6B,OAA7B,CAAqC,UAAA,KAAK,EAAG;AAC9B,cAAA,OAAI,CAAC,aAAL,CAAmB,QAAnB,CAA4B,aAA5B,CAA2C,IAA3C,CAAgD,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACzE,gBAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,CAAC,IAAtB,EAA2B,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,OAAI,CAAC,QAAL,CAAc,OAAnC,CAA3B,CADmE;AAEzE,gBAAA,SAAS,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,CAAC,SAAtB,EAAgC,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAhC,CAF8D;AAGzE,gBAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,CAAC,IAAtB,EAA2B,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAA3B;AAHmE,eAAd,CAAhD;AAKd,aAND;AASD;;AACD,eAAK,SAAL,CAAe,iBAAf,CAAiC,OAAjC,CAAyC,UAAC,SAAD,EAAW,CAAX,EAAgB;AACvD,gBAAI,QAAQ,GAAS,EAArB;AACA,gBAAG,CAAC,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,MAA1B,EAAkC,QAAQ,CAAC,MAAT,GAAkB,CAAlB,CAAlC,KACK,QAAQ,CAAC,MAAT,GAAkB,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,MAAxC;AACL,gBAAG,CAAC,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,KAA1B,EAAiC,QAAQ,CAAC,KAAT,GAAiB,CAAjB,CAAjC,KACK,QAAQ,CAAC,KAAT,GAAiB,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,KAAvC;AACL,gBAAG,CAAC,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,KAA1B,EAAiC,QAAQ,CAAC,KAAT,GAAiB,CAAjB,CAAjC,KACK,QAAQ,CAAC,KAAT,GAAiB,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,KAAvC;;AACQ,YAAA,OAAI,CAAC,aAAL,CAAmB,QAAnB,CAA4B,iBAA5B,CAA+C,IAA/C,CAAoD,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC3E,cAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,SAAS,CAAC,IAA1B,EAA+B,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA1C,CADqE;AAE3E,cAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,CAAC,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACrC,gBAAA,MAAM,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,QAAQ,CAAC,MAAzB,CAD6B;AAErC,gBAAA,KAAK,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,QAAQ,CAAC,KAAzB,CAF8B;AAGrC,gBAAA,KAAK,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,QAAQ,CAAC,KAAzB;AAH8B,eAAd,CAAD,CAAd,CAFiE;AAO3E,cAAA,MAAM,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,SAAS,CAAC,MAA1B,EAAiC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA5C,CAPmE;AAQ3E,cAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,SAAS,CAAC,IAA1B,EAA+B,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA1C,CARqE;AAS3E,cAAA,UAAU,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,EAAd,CAT+D;AAU3E,cAAA,SAAS,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB;AAVgE,aAAd,CAApD;;AAYX,YAAA,SAAS,CAAC,UAAV,CAAqB,OAArB,CAA6B,UAAA,QAAQ,EAAG;AACzB,cAAA,OAAI,CAAC,aAAL,CAAmB,QAAnB,CAA4B,iBAA5B,CAA8C,UAA9C,EAA0D,CAA1D,EAA6D,QAA7D,CAAsE,UAAtE,CAAkF,IAAlF,CAAuF,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,QAAhB,EAAyB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAApC,CAAvF;AACd,aAFD;AAGH,WAvBD;AAwBA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,aAAL,CAAmB,KAA/B;AAED;AA5GH;AAAA;AAAA,sCA8Ga;AACT,eAAK,QAAL,GAAgB,IAAhB;AACD;AAhHH;AAAA;AAAA,wCAkHe;AAAA;;AACX,eAAK,cAAL,GAAsB,0CAAtB;AACA,eAAK,SAAL,GAAiB,IAAjB;AACA,cAAI,IAAI,GAAS,KAAK,aAAL,CAAmB,KAApC;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;;AACA,cAAG,IAAI,CAAC,IAAL,IAAa,QAAhB,EAAyB;AACvB,gBAAG,CAAC,KAAK,aAAL,CAAmB,KAAvB,EAA6B;AAC3B,mBAAK,SAAL,GAAiB,KAAjB;AACA,qBAAO,KAAK,CAAC,qEAAD,CAAZ;AACD;AACF,WALD,MAKK;AAAE;AACL,gBAAI,IAAJ;AACA,YAAA,IAAI,CAAC,iBAAL,CAAuB,OAAvB,CAA+B,UAAC,SAAD,EAAoB;AACjD,kBAAG,CAAC,SAAS,CAAC,UAAV,CAAqB,MAAzB,EAAiC,OAAO,IAAI,GAAG,kDAAd;AAClC,aAFD;;AAGA,gBAAG,IAAH,EAAS;AACP,mBAAK,SAAL,GAAiB,KAAjB;AACA,qBAAO,KAAK,CAAC,IAAD,CAAZ;AACD;;AACD,gBAAI,IAAI,GAAS;AACf,cAAA,KAAK,EAAE,CADQ;AAEf,cAAA,KAAK,EAAE,CAFQ;AAGf,cAAA,IAAI,EAAE;AAHS,aAAjB;AAKA,YAAA,IAAI,CAAC,iBAAL,CAAuB,OAAvB,CAA+B,UAAA,SAAS,EAAG;AACzC,kBAAG,IAAI,CAAC,cAAR,EAAuB;AACrB,gBAAA,IAAI,CAAC,KAAL,IAAc,QAAQ,CAAC,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,KAAvB,CAAtB;AACA,gBAAA,IAAI,CAAC,KAAL,IAAc,QAAQ,CAAC,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,KAAvB,CAAtB;AACA,oBAAG,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,KAAtB,IAA+B,IAA/B,IAAuC,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,KAAtB,IAA+B,IAAzE,EAA+E,OAAO,IAAI,GAAG,qDAAd;AAChF,eAJD,MAIK;AACH,gBAAA,IAAI,CAAC,IAAL,IAAa,QAAQ,CAAC,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,MAAvB,CAArB;AACA,oBAAG,SAAS,CAAC,QAAV,CAAmB,CAAnB,EAAsB,MAAtB,IAAgC,IAAnC,EAAyC,OAAO,IAAI,GAAG,qDAAd;AAC1C;AACF,aATD;;AAUA,gBAAG,IAAH,EAAS;AACP,mBAAK,SAAL,GAAiB,KAAjB;AACA,qBAAO,KAAK,CAAC,IAAD,CAAZ;AACD;;AAED,gBAAG,IAAI,CAAC,cAAL,KAAwB,IAAI,CAAC,KAAL,IAAc,GAAd,IAAqB,IAAI,CAAC,KAAL,IAAc,GAA3D,CAAH,EAAoE,IAAI,GAAG,0CAAP;AACpE,gBAAG,CAAC,IAAI,CAAC,cAAN,IAAwB,IAAI,CAAC,IAAL,IAAa,GAAxC,EAA6C,IAAI,GAAG,0CAAP;;AAC7C,gBAAG,IAAH,EAAS;AACP,mBAAK,SAAL,GAAiB,KAAjB;AACA,qBAAO,KAAK,CAAC,IAAD,CAAZ;AACD;;AAED,gBAAG,KAAK,aAAL,CAAmB,OAAtB,EAA8B;AAC5B,mBAAK,SAAL,GAAiB,KAAjB;AACA,qBAAO,KAAK,CAAC,oEAAD,CAAZ;AACD;AACF;;AACD,eAAK,QAAL,CAAc,eAAd,CAA8B,IAA9B,EAAmC,KAAK,SAAL,CAAe,GAAlD,EAAuD,SAAvD,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,SAArB,EAA+B;AAC7B,cAAA,OAAI,CAAC,SAAL,GAAiB,MAAM,CAAC,SAAxB;AACA,cAAA,OAAI,CAAC,QAAL,GAAgB,KAAhB;;AACA,cAAA,OAAI,CAAC,oBAAL;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,oBAAd,CAAmC,IAAnC;;AACA,cAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,8CAApB,EAAmE,WAAnE,EAA+E;AAAC,gBAAA,QAAQ,EAAE;AAAX,eAA/E;AACD;AACF,WAVH,EAUI,UAAA,KAAK,EAAG;AACR,YAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,kDAApB,EAAuE,WAAvE,EAAmF;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAnF;AACD,WAbH;AAeD;AApLH;AAAA;AAAA,uCAsLc;AACE,eAAK,aAAL,CAAmB,QAAnB,CAA4B,iBAA5B,CAA+C,IAA/C,CAAoD,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC1E,YAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CADoE;AAE1E,YAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,CAAC,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACrC,cAAA,MAAM,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,CAD6B;AAErC,cAAA,KAAK,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,CAF8B;AAGrC,cAAA,KAAK,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB;AAH8B,aAAd,CAAD,CAAd,CAFgE;AAO1E,YAAA,MAAM,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAhB,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAjC,CAPkE;AAQ1E,YAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CARoE;AAS1E,YAAA,UAAU,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,EAAd;AAT8D,WAAd,CAApD;AAYb;AAnMH;AAAA;AAAA,mCAqMU;AACM,eAAK,aAAL,CAAmB,QAAnB,CAA4B,aAA5B,CAA2C,IAA3C,CAAgD,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACxE,YAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CADkE;AAExE,YAAA,SAAS,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAF6D;AAGxE,YAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB;AAHkE,WAAd,CAAhD;AAKb;AA3MH;AAAA;AAAA,iCA6MQ;AACJ,cAAG,OAAO,CAAC,sFAAD,CAAV,EAAmG;AACjG,iBAAK,QAAL,GAAgB,KAAhB;AACA,iBAAK,oBAAL;AACD;AACF;AAlNH;AAAA;AAAA,oCAoNc,QApNd,EAoN+B;AACd,eAAK,aAAL,CAAmB,QAAnB,CAA4B,iBAA5B,CAA8C,UAA9C,EAA0D,KAAK,iBAA/D,EAAkF,QAAlF,CAA2F,UAA3F,CAAuG,IAAvG,CAA4G,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,QAAhB,CAA5G;AACd;AAtNH;AAAA;AAAA,6CAwNuB,KAxNvB,EAwNqC;AACpB,eAAK,aAAL,CAAmB,QAAnB,CAA4B,iBAA5B,CAA8C,UAA9C,EAA0D,KAAK,iBAA/D,EAAkF,QAAlF,CAA2F,UAA3F,CAAuG,IAAvG,CAA4G,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAhB,CAA5G;AACd;AA1NH;AAAA;AAAA,+BA4NS,KA5NT,EA4NuB;AACN,eAAK,aAAL,CAAmB,QAAnB,CAA4B,iBAA5B,CAA8C,UAA9C,EAA0D,KAAK,iBAA/D,EAAkF,QAAlF,CAA2F,UAA3F,CAAuG,QAAvG,CAAgH,KAAhH;AACd;AA9NH;;AAAA;AAAA,OAAA;;;;cAuCwC,4CAAA,CAAA,gBAAA;;cACP,wDAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,aAAA;;;;AAzCrB,IAAA,sBAAsB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJlC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,oBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,gIAAA,CAAA,EAAA;AAFS,KAAV,CAIkC,CAAA,EAAtB,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJb,QAAa,mBAAb;AAAA;AAAA;AAUE,mCAAoB,QAApB,EAA8C;AAAA;;AAA1B,aAAA,QAAA,GAAA,QAAA;AARpB,aAAA,UAAA,GAAqB,KAAK,QAAL,CAAc,gBAAd,EAArB;AAEA,aAAA,WAAA,GAAuB,EAAvB;AAEA,aAAA,YAAA,GAAuB,KAAK,UAA5B;AAEA,aAAA,QAAA,GAAoB,YAAY,CAAC,OAAb,CAAqB,UAArB,CAApB;AAIC;;AAZH;AAAA;AAAA,iCAcQ;AAAA;;AACJ,cAAG,CAAC,KAAK,WAAL,CAAiB,IAAjB,EAAJ,EAA6B,KAAK,YAAL,GAAoB,KAAK,UAAzB;AAC7B,eAAK,YAAL,GAAoB,KAAK,UAAL,CAAgB,MAAhB,CAAuB,UAAA,SAAS;AAAA,mBAAI,SAAS,CAAC,IAAV,CAAe,WAAf,GAA6B,QAA7B,CAAsC,OAAI,CAAC,WAAL,CAAiB,IAAjB,GAAwB,WAAxB,EAAtC,CAAJ;AAAA,WAAhC,CAApB;AACD;AAjBH;;AAAA;AAAA,OAAA;;;;cAUiC,wDAAA,CAAA,iBAAA;;;;AAVpB,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ/B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,gBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wHAAA,CAAA,EAAA;AAFS,KAAV,CAI+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAa,qBAAb;AAAA;AAAA;AA2CE,qCAAoB,QAApB,EACoB,SADpB,EAEoB,OAFpB,EAEoC;AAAA;;AAFhB,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,OAAA,GAAA,OAAA;AAvCpB,aAAA,SAAA,GAAsB,KAAtB;AAGA,aAAA,QAAA,GAAyB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CAAzB;AACA,aAAA,QAAA,GAAyB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,WAAhB,EAA4B,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAvC,CAAzB;AACA,aAAA,kBAAA,GAAmC,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAhB,CAAnC;AACA,aAAA,eAAA,GAAgC,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CAAhC;AAEA,aAAA,MAAA,GAAqB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACjC,UAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAD2B;AAEjC,UAAA,SAAS,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAFsB;AAGjC,UAAA,MAAM,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAhB,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAjC,CAHyB;AAIjC,UAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B;AAJ2B,SAAd,CAArB;AAOA,aAAA,kBAAA,GAAiC,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,CAC7C,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACZ,UAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CADM;AAEZ,UAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACtB,YAAA,MAAM,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,CADc;AAEtB,YAAA,KAAK,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,CAFe;AAGtB,YAAA,KAAK,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB;AAHe,WAAd,CAFE;AAOZ,UAAA,MAAM,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAhB,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAjC,CAPI;AAQZ,UAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CARM;AASZ,UAAA,UAAU,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,EAAd;AATA,SAAd,CAD6C,CAAd,CAAjC;AAcA,aAAA,iBAAA,GAAgC,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,CAC5C,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACZ,UAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CADM;AAEZ,UAAA,SAAS,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAFC;AAGZ,UAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B;AAHM,SAAd,CAD4C,CAAd,CAAhC;;AAWE,YAAG,KAAK,QAAL,CAAc,KAAd,IAAuB,QAA1B,EAAmC;AACjC,eAAK,aAAL,GAAqB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACjC,YAAA,IAAI,EAAE,KAAK,QADsB;AAEjC,YAAA,IAAI,EAAE,KAAK,QAFsB;AAGjC,YAAA,iBAAiB,EAAE,KAAK;AAHS,WAAd,CAArB;AAKD,SAND,MAMK;AACH,eAAK,aAAL,GAAqB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACjC,YAAA,IAAI,EAAE,KAAK,QADsB;AAEjC,YAAA,IAAI,EAAE,KAAK,QAFsB;AAGjC,YAAA,aAAa,EAAE,KAAK,iBAHa;AAIjC,YAAA,iBAAiB,EAAE,KAAK,kBAJS;AAKjC,YAAA,cAAc,EAAE,KAAK;AALY,WAAd,CAArB;AAOD;AACF;;AA7DH;AAAA;AAAA,mCA+DU;AACN,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,aAAjB;AACD;AAjEH;AAAA;AAAA,uCAmEc;AACE,eAAK,kBAAL,CAAyB,IAAzB,CAA8B,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACpD,YAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAD8C;AAEpD,YAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACtB,cAAA,MAAM,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,CADc;AAEtB,cAAA,KAAK,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,CAFe;AAGtB,cAAA,KAAK,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB;AAHe,aAAd,CAF0C;AAOpD,YAAA,MAAM,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAhB,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAjC,CAP4C;AAQpD,YAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAR8C;AASpD,YAAA,UAAU,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,EAAd;AATwC,WAAd,CAA9B;AAYb;AAhFH;AAAA;AAAA,mCAkFU;AACM,eAAK,iBAAL,CAAwB,IAAxB,CAA6B,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACrD,YAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CAD+C;AAErD,YAAA,SAAS,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAF0C;AAGrD,YAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB;AAH+C,WAAd,CAA7B;AAKb;AAxFH;AAAA;AAAA,mCA0Fa,EA1Fb,EA0Fe;AACX,cAAG,EAAE,IAAI,QAAT,EAAkB;AAChB,iBAAK,aAAL,GAAqB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACjC,cAAA,IAAI,EAAE,KAAK,QADsB;AAEjC,cAAA,IAAI,EAAE,KAAK,QAFsB;AAGjC,cAAA,iBAAiB,EAAE,KAAK,MAHS;AAIjC,cAAA,WAAW,EAAE,KAAK;AAJe,aAAd,CAArB;AAMD,WAPD,MAOK;AACH,iBAAK,aAAL,GAAqB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACjC,cAAA,IAAI,EAAE,KAAK,QADsB;AAEjC,cAAA,IAAI,EAAE,KAAK,QAFsB;AAGjC,cAAA,aAAa,EAAE,KAAK,iBAHa;AAIjC,cAAA,iBAAiB,EAAE,KAAK,kBAJS;AAKjC,cAAA,cAAc,EAAE,KAAK;AALY,aAAd,CAArB;AAOD;AACF;AA3GH;AAAA;AAAA,wCA6Ge;AAAA;;AACX,eAAK,cAAL,GAAsB,wBAAtB;AACA,eAAK,SAAL,GAAiB,IAAjB;AACA,cAAI,IAAJ;;AACA,cAAG,KAAK,QAAL,CAAc,KAAd,IAAuB,QAA1B,EAAmC;AACjC,gBAAG,KAAK,aAAL,CAAmB,KAAtB,EAA4B;AAC1B,cAAA,IAAI,GAAG,KAAK,aAAL,CAAmB,KAA1B;AACA,cAAA,IAAI,CAAC,iBAAL,GAAyB,CAAC;AACxB,gBAAA,IAAI,EAAE,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,CAA0B,KADR;AAExB,gBAAA,SAAS,EAAE,KAAK,MAAL,CAAY,QAAZ,CAAqB,SAArB,CAA+B,KAFlB;AAGxB,gBAAA,MAAM,EAAE,KAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,CAA4B,KAHZ;AAIxB,gBAAA,IAAI,EAAE,KAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,CAA0B,KAJR;AAKxB,gBAAA,UAAU,EAAE,KAAK,eAAL,CAAqB,KALT;AAMxB,gBAAA,QAAQ,EAAE;AAAC,kBAAA,MAAM,EAAE;AAAT;AANc,eAAD,CAAzB;AAQA,cAAA,IAAI,CAAC,cAAL,GAAsB,KAAtB;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACD,aAZD,MAYM;AACJ,mBAAK,SAAL,GAAiB,KAAjB;AACA,qBAAO,KAAK,CAAC,qEAAD,CAAZ;AACD;AACF,WAjBD,MAiBK;AACH,YAAA,IAAI,GAAG,KAAK,aAAL,CAAmB,KAA1B;AACA,gBAAI,IAAJ;;AACA,gBAAG,IAAI,CAAC,iBAAL,CAAuB,MAAvB,IAAiC,CAApC,EAAuC;AACrC,mBAAK,SAAL,GAAiB,KAAjB;AACA,qBAAO,KAAK,CAAC,4HAAD,CAAZ;AACD;;AACD,YAAA,IAAI,CAAC,iBAAL,CAAuB,OAAvB,CAA+B,UAAC,SAAD,EAAoB;AACjD,kBAAG,CAAC,SAAS,CAAC,UAAV,CAAqB,MAAzB,EAAiC,OAAO,IAAI,GAAG,kDAAd;AAClC,aAFD;;AAGA,gBAAG,IAAH,EAAQ;AACN,mBAAK,SAAL,GAAiB,KAAjB;AACA,qBAAO,KAAK,CAAC,IAAD,CAAZ;AACD;;AACD,gBAAI,IAAI,GAAS;AACf,cAAA,KAAK,EAAE,CADQ;AAEf,cAAA,KAAK,EAAE,CAFQ;AAGf,cAAA,IAAI,EAAE;AAHS,aAAjB;AAKA,YAAA,IAAI,CAAC,iBAAL,CAAuB,OAAvB,CAA+B,UAAA,SAAS,EAAG;AACzC,kBAAG,OAAI,CAAC,kBAAL,CAAwB,KAA3B,EAAiC;AAC/B,gBAAA,IAAI,CAAC,KAAL,IAAc,QAAQ,CAAC,SAAS,CAAC,QAAV,CAAmB,KAApB,CAAtB;AACA,gBAAA,IAAI,CAAC,KAAL,IAAc,QAAQ,CAAC,SAAS,CAAC,QAAV,CAAmB,KAApB,CAAtB;AACA,oBAAG,SAAS,CAAC,QAAV,CAAmB,KAAnB,IAA4B,IAA5B,IAAoC,SAAS,CAAC,QAAV,CAAmB,KAAnB,IAA4B,IAAnE,EAAyE,OAAO,IAAI,GAAG,qDAAd;AAC1E,eAJD,MAIK;AACH,gBAAA,IAAI,CAAC,IAAL,IAAa,QAAQ,CAAC,SAAS,CAAC,QAAV,CAAmB,MAApB,CAArB;AACA,oBAAG,SAAS,CAAC,QAAV,CAAmB,MAAnB,IAA6B,IAAhC,EAAsC,OAAO,IAAI,GAAG,qDAAd;AACvC;AACF,aATD;;AAUA,gBAAG,IAAH,EAAS;AACP,mBAAK,SAAL,GAAiB,KAAjB;AACA,qBAAO,KAAK,CAAC,IAAD,CAAZ;AACD;;AAED,gBAAG,KAAK,kBAAL,CAAwB,KAAxB,KAAkC,IAAI,CAAC,KAAL,IAAc,GAAd,IAAqB,IAAI,CAAC,KAAL,IAAc,GAArE,CAAH,EAA8E,IAAI,GAAG,0CAAP;AAC9E,gBAAG,CAAC,KAAK,kBAAL,CAAwB,KAAzB,IAAkC,IAAI,CAAC,IAAL,IAAa,GAAlD,EAAuD,IAAI,GAAG,0CAAP;;AACvD,gBAAG,IAAH,EAAS;AACP,mBAAK,SAAL,GAAiB,KAAjB;AACA,qBAAO,KAAK,CAAC,IAAD,CAAZ;AACD;;AAED,gBAAG,KAAK,aAAL,CAAmB,OAAtB,EAA8B;AAC5B,mBAAK,SAAL,GAAiB,KAAjB;AACA,qBAAO,KAAK,CAAC,oEAAD,CAAZ;AACD;AACF;;AACD,eAAK,QAAL,CAAc,eAAd,CAA8B,IAA9B,EAAoC,SAApC,CACE,UAAA,MAAM,EAAG;AACP,YAAA,OAAI,CAAC,QAAL,CAAc,oBAAd,CAAmC,IAAnC;;AACA,YAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,8CAApB,EAAmE,WAAnE,EAA+E;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA/E;AACD,WALH,EAKI,UAAA,KAAK,EAAG;AACR,YAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,iDAApB,EAAsE,WAAtE,EAAkF;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAlF;AACD,WARH;AAUD;AA1LH;AAAA;AAAA,iCA4LQ;AACJ,cAAG,OAAO,CAAC,wEAAD,CAAV,EAAsF,KAAK,OAAL,CAAa,QAAb,CAAsB,CAAC,aAAD,CAAtB;AACvF;AA9LH;AAAA;AAAA,oCAgMc,QAhMd,EAgM+B;AACd,eAAK,kBAAL,CAAwB,QAAxB,CAAiC,KAAK,iBAAtC,EAAyD,UAAzD,EAAqE,YAArE,EAAoF,IAApF,CAAyF,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,QAAhB,CAAzF;AACd;AAlMH;AAAA;AAAA,6CAoMuB,KApMvB,EAoMqC;AACpB,eAAK,kBAAL,CAAwB,QAAxB,CAAiC,KAAK,iBAAtC,EAAyD,UAAzD,EAAqE,YAArE,EAAoF,IAApF,CAAyF,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAhB,CAAzF;AACd;AAtMH;AAAA;AAAA,+BAwMS,KAxMT,EAwMuB;AACN,eAAK,kBAAL,CAAwB,QAAxB,CAAiC,KAAK,iBAAtC,EAAyD,UAAzD,EAAqE,YAArE,EAAoF,QAApF,CAA6F,KAA7F;AACd;AA1MH;;AAAA;AAAA,OAAA;;;;cA2CiC,wDAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,aAAA;;cACF,4CAAA,CAAA,QAAA;;;;AA7CnB,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJjC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,8HAAA,CAAA,EAAA;AAFS,KAAV,CAIiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAa,cAAb;AAAA;AAAA;AAOE,8BAAoB,QAApB,EACoB,SADpB,EAC2C;AAAA;;AADvB,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,SAAA,GAAA,SAAA;AANV,aAAA,cAAA,GAAsC,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAtC;AACA,aAAA,SAAA,GAAgC,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAhC;AAMR,aAAK,SAAL,GAAiB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC7B,sBAAY,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CADiB;AAE7B,sBAAY,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,CAArB,CAArB,CAAnB;AAFiB,SAAd,CAAjB;AAID;;AAbH;AAAA;AAAA,gCAeO;AAAA;;AACH,eAAK,SAAL,CAAe,IAAf,CAAoB;AAAC,YAAA,SAAS,EAAE,IAAZ;AAAkB,YAAA,OAAO,EAAE;AAA3B,WAApB;AACA,cAAI,IAAI,GAAG,KAAK,SAAL,CAAe,KAA1B;AACA,UAAA,IAAI,CAAC,eAAL,GAAuB,IAAI,IAAJ,EAAvB;;AAEA,eAAK,QAAL,CAAc,YAAd,CAA2B,IAA3B,EAAiC,SAAjC,CACE,UAAA,MAAM,EAAG;AACP,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,MAAM,CAAC,OAA3B,EAAmC,WAAnC,EAA+C;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA/C;;AACA,gBAAG,MAAM,CAAC,OAAP,IAAkB,kBAArB,EAAwC;AACtC,cAAA,YAAY,CAAC,OAAb,CAAqB,MAArB,EAA4B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,IAAtB,CAA5B;AACA,cAAA,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA6B,MAAM,CAAC,KAApC;;AACA,cAAA,OAAI,CAAC,cAAL,CAAoB,IAApB;AACD;;AACD,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB;AAAC,cAAA,SAAS,EAAE;AAAZ,aAApB;AACD,WATH,EAUE,UAAA,KAAK,EAAG;AACN,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB;AAAC,cAAA,SAAS,EAAE;AAAZ,aAApB;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,2CAApB,EAAgE,WAAhE,EAA4E;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA5E;AACD,WAbH;AAiBD;AArCH;;AAAA;AAAA,OAAA;;;;cAOiC,wDAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,aAAA;;;;AANtB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,wBAAA,E,gBAAA,E,KAAyD,CAAzD;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,wBAAA,E,WAAA,E,KAAmD,CAAnD;AAHC,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ1B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,WADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,mGAAA,CAAA,EAAA;AAFS,KAAV,CAI0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAa,wBAAb;AAAA;AAAA;AAyBE,wCAAoB,QAApB,EACoB,SADpB,EAEoB,MAFpB,EAEsC;AAAA;;AAFlB,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,MAAA,GAAA,MAAA;AAvBpB,aAAA,OAAA,GAAkB,KAAK,QAAL,CAAc,aAAd,EAAlB;AACA,aAAA,KAAA,GAAgB,KAAK,QAAL,CAAc,WAAd,EAAhB;AAEA,aAAA,OAAA,GAAoB,KAApB;AACA,aAAA,SAAA,GAAqB,KAArB;AACA,aAAA,cAAA,GAA0B,EAA1B;AAEA,aAAA,SAAA,GAAsB,KAAtB;AAEA,aAAA,QAAA,GAAyB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,iBAAnC,CAAnB,CAAzB;AACA,aAAA,mBAAA,GAAoC,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,mEAAX,CAAnB,CAArB,CAAnB,CAApC;AACA,aAAA,UAAA,GAA2B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAA3B;AACA,aAAA,QAAA,GAAyB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAAzB;AACA,aAAA,aAAA,GAA8B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAA9B;AACA,aAAA,QAAA,GAAyB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,WAAX,CAAnB,CAArB,CAAnB,CAAzB;AACA,aAAA,UAAA,GAA2B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,WAAX,CAAnB,CAArB,CAAnB,CAA3B;AACA,aAAA,iBAAA,GAAkC,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,WAAX,CAAnB,CAArB,CAAnB,CAAlC;AACA,aAAA,UAAA,GAA2B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAA3B;AACA,aAAA,WAAA,GAA4B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAA5B;AACA,aAAA,aAAA,GAA8B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAA9B;AAI2C;;AA3B7C;AAAA;AAAA,mCA6BU;AACN,eAAK,gBAAL,GAAwB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACpC,YAAA,IAAI,EAAG,KAAK,QADwB;AAEpC,YAAA,eAAe,EAAG,KAAK,mBAFa;AAGpC,YAAA,MAAM,EAAE,KAAK,UAHuB;AAIpC,YAAA,IAAI,EAAE,KAAK,QAJyB;AAKpC,YAAA,SAAS,EAAE,KAAK,aALoB;AAMpC,YAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACtB,cAAA,IAAI,EAAE,KAAK,QADW;AAEtB,cAAA,MAAM,EAAE,KAAK;AAFS,aAAd,CAN0B;AAUpC,YAAA,aAAa,EAAE,KAAK,iBAVgB;AAWpC,YAAA,SAAS,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACvB,cAAA,MAAM,EAAE,KAAK,UADU;AAEvB,cAAA,OAAO,EAAE,KAAK,WAFS;AAGvB,cAAA,SAAS,EAAE,KAAK;AAHO,aAAd;AAXyB,WAAd,CAAxB;AAiBD;AA/CH;AAAA;AAAA,iCAiDW,KAjDX,EAiDgB;AACZ,cAAI,IAAI,GAAG,KAAK,mBAAL,CAAyB,KAAzB,CAA+B,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAX;AACA,cAAG,IAAI,IAAI,IAAX,EAAiB,KAAK,OAAL,GAAe,KAAf,CAAjB,KACK,KAAK,OAAL,GAAe,IAAf;AACN;AArDH;AAAA;AAAA,2CAuDkB;AAAA;;AACd,eAAK,cAAL,GAAsB,iCAAtB;AACA,eAAK,SAAL,GAAiB,IAAjB;AACA,cAAI,YAAY,GAAG,KAAK,gBAAL,CAAsB,KAAzC;AACA,UAAA,YAAY,CAAC,UAAb,GAA0B,YAAY,CAAC,OAAb,CAAqB,QAArB,CAA1B;AACA,UAAA,YAAY,CAAC,OAAb,GAAuB,KAAK,OAA5B;;AAEA,eAAK,QAAL,CAAc,kBAAd,CAAiC,YAAjC,EAA+C,SAA/C,CACE,UAAA,MAAM,EAAG;AACP,YAAA,OAAI,CAAC,QAAL,CAAc,uBAAd,CAAsC,IAAtC;;AACA,YAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,4CAApB,EAAiE,WAAjE,EAA6E;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA7E;AAED,WANH,EAMI,UAAA,KAAK,EAAG;AACR,YAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,8CAApB,EAAmE,WAAnE,EAA+E;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA/E;AACD,WATH;AAWD;AAED;;;;AA3EF;AAAA;AAAA,uCA8Ec;AAAA;;AACV,cAAM,SAAS,GAAG,KAAK,MAAL,CAAY,IAAZ,CAAiB,uGAAA,CAAA,oCAAA,CAAjB,EAAqD;AACrE,YAAA,KAAK,EAAE,OAD8D;AAErE,YAAA,IAAI,EAAE;AAAC,cAAA,UAAU,EAAE;AAAb;AAF+D,WAArD,CAAlB;AAKA,UAAA,SAAS,CAAC,WAAV,GAAwB,SAAxB,CAAkC,UAAA,MAAM,EAAG;AACzC,gBAAG,MAAH,EAAU;AACR;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,4BAAd,CAA2C;AAAC,gBAAA,MAAM,EAAN;AAAD,eAA3C,EAAqD,SAArD,CACE,UAAA,MAAM,EAAG;AACP,gBAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;;AACA,gBAAA,OAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,MAAlB;;AACA,gBAAA,OAAI,CAAC,QAAL,CAAc,qBAAd;;AACA,gBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,oCAApB,EAAyD,WAAzD,EAAqE;AAAC,kBAAA,QAAQ,EAAG;AAAZ,iBAArE;AACD,eANH,EAMI,UAAA,KAAK,EAAG;AACR,gBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,gDAApB,EAAqE,WAArE,EAAiF;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAAjF;AACD,eARH;AASD;AACF,WAbD;AAcD;AAlGH;AAAA;AAAA,qCAoGY;AAAA;;AACR,cAAM,SAAS,GAAG,KAAK,MAAL,CAAY,IAAZ,CAAiB,uGAAA,CAAA,oCAAA,CAAjB,EAAqD;AACrE,YAAA,KAAK,EAAE,OAD8D;AAErE,YAAA,IAAI,EAAE;AAAC,cAAA,UAAU,EAAE;AAAb;AAF+D,WAArD,CAAlB;AAKA,UAAA,SAAS,CAAC,WAAV,GAAwB,SAAxB,CAAkC,UAAA,IAAI,EAAG;AACvC,gBAAG,IAAH,EAAQ;AACN;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,4BAAd,CAA2C;AAAC,gBAAA,IAAI,EAAJ;AAAD,eAA3C,EAAmD,SAAnD,CACE,UAAA,MAAM,EAAG;AACP,gBAAA,OAAO,CAAC,GAAR,CAAY,MAAZ,EAAmB,IAAnB;;AACA,gBAAA,OAAI,CAAC,KAAL,CAAW,IAAX,CAAgB,IAAhB;;AACA,gBAAA,OAAI,CAAC,QAAL,CAAc,qBAAd;;AACA,gBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,kCAApB,EAAuD,WAAvD,EAAmE;AAAC,kBAAA,QAAQ,EAAG;AAAZ,iBAAnE;AACD,eANH,EAMI,UAAA,KAAK;AAAA,uBAAI,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,8CAApB,EAAmE,WAAnE,EAA+E;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAA/E,CAAJ;AAAA,eANT;AAQD;AACF,WAZD;AAaD;AAvHH;;AAAA;AAAA,OAAA;;;;cAyBiC,wDAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,aAAA;;cACH,qDAAA,CAAA,WAAA;;;;AA3BlB,IAAA,wBAAwB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJpC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,sBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,sIAAA,CAAA,EAAA;AAFS,KAAV,CAIoC,CAAA,EAAxB,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAa,yBAAb;AAAA;AAAA;AA8BE,yCAAoB,eAApB,EACoB,QADpB,EAEoB,SAFpB,EAGoB,OAHpB,EAGoC;AAAA;;AAAA;;AAHhB,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,OAAA,GAAA,OAAA;AAzBpB,aAAA,QAAA,GAAoB,YAAY,CAAC,OAAb,CAAqB,UAArB,CAApB;AAEA,aAAA,QAAA,GAAqB,KAArB;AAEA,aAAA,OAAA,GAAoB,KAApB;AAEA,aAAA,SAAA,GAAsB,KAAtB;;AAqBE,aAAK,eAAL,CAAqB,MAArB,CAA4B,SAA5B,CACE,UAAC,MAAD;AAAA,iBAAqB,OAAI,CAAC,YAAL,GAAoB,OAAI,CAAC,QAAL,CAAc,eAAd,CAA8B,MAAM,CAAC,EAArC,CAAzC;AAAA,SADF;;AAIA,aAAK,OAAL,GAAgB,CACd;AACE,UAAA,OAAO,EAAE,QADX;AAEE,UAAA,OAAO,EAAE,IAFX;AAGE,UAAA,IAAI,EAAE,QAHR;AAIE,UAAA,OAAO,EAAE,mBAAK;AACZ,YAAA,OAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,CAAC,eAAD,EAAiB,OAAI,CAAC,YAAL,CAAkB,GAAnC,EAAuC,UAAvC,CAAtB;AACD;AANH,SADc,EASd;AACE,UAAA,OAAO,EAAE,UADX;AAEE,UAAA,OAAO,EAAE,IAFX;AAGE,UAAA,IAAI,EAAE,QAHR;AAIE,UAAA,OAAO,EAAE,mBAAK;AACZ,gBAAG,OAAO,CAAC,yFAAD,CAAV,EAAuG;AACrG,cAAA,OAAI,CAAC,cAAL,GAAsB,gCAAtB;AACA,cAAA,OAAI,CAAC,SAAL,GAAiB,IAAjB;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,kBAAd,CAAiC,OAAI,CAAC,YAAL,CAAkB,GAAnD,EAAwD,SAAxD,CACA,UAAA,MAAM,EAAG;AACP,oBAAG,MAAM,CAAC,OAAP,IAAkB,SAArB,EAA+B;AAC7B,kBAAA,OAAI,CAAC,QAAL,CAAc,uBAAd,CAAsC,IAAtC;;AACA,kBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,kBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,2CAApB,EAAgE,WAAhE,EAA4E;AAAC,oBAAA,QAAQ,EAAE;AAAX,mBAA5E;AACD;AACF,eAPD,EAOE,UAAA,KAAK,EAAG;AACR,gBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,gBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,+CAApB,EAAoE,WAApE,EAAgF;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAAhF;AACD,eAVD;AAYD;AACF;AArBH,SATc,CAAhB;AAkCD;;AAzEH;AAAA;AAAA,mCA2EU;AACN,eAAK,QAAL,GAAgB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,YAAL,CAAkB,IAAlC,EAAuC,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,iBAAnC,CAAvC,CAAhB;AACA,eAAK,mBAAL,GAA2B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,YAAL,CAAkB,eAAlC,EAAkD,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,mEAAX,CAAnB,CAArB,CAAlD,CAA3B;AACA,eAAK,UAAL,GAAkB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,YAAL,CAAkB,MAAlC,EAAyC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAApD,CAAlB;AACA,eAAK,QAAL,GAAgB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,YAAL,CAAkB,IAAlC,EAAuC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAlD,CAAhB;AACA,eAAK,aAAL,GAAqB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,YAAL,CAAkB,SAAlC,EAA4C,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAvD,CAArB;AACA,eAAK,QAAL,GAAgB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,YAAL,CAAkB,QAAlB,CAA2B,IAA3C,EAAgD,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,WAAX,CAAnB,CAArB,CAAhD,CAAhB;AACA,eAAK,UAAL,GAAkB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,YAAL,CAAkB,QAAlB,CAA2B,MAA3C,EAAkD,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,WAAX,CAAnB,CAArB,CAAlD,CAAlB;AACA,eAAK,iBAAL,GAAyB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,YAAL,CAAkB,aAAlC,EAAgD,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,WAAX,CAAnB,CAArB,CAAhD,CAAzB;AACA,eAAK,UAAL,GAAkB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,YAAL,CAAkB,SAAlB,CAA4B,MAA5C,EAAmD,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9D,CAAlB;AACA,eAAK,WAAL,GAAmB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,YAAL,CAAkB,SAAlB,CAA4B,OAA5C,EAAoD,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA/D,CAAnB;AACA,eAAK,aAAL,GAAqB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,KAAK,YAAL,CAAkB,SAAlB,CAA4B,SAA5C,EAAsD,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAjE,CAArB;AACA,eAAK,gBAAL,GAAwB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACpC,YAAA,IAAI,EAAG,KAAK,QADwB;AAEpC,YAAA,eAAe,EAAG,KAAK,mBAFa;AAGpC,YAAA,MAAM,EAAE,KAAK,UAHuB;AAIpC,YAAA,IAAI,EAAE,KAAK,QAJyB;AAKpC,YAAA,SAAS,EAAE,KAAK,aALoB;AAMpC,YAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACtB,cAAA,IAAI,EAAE,KAAK,QADW;AAEtB,cAAA,MAAM,EAAE,KAAK;AAFS,aAAd,CAN0B;AAUpC,YAAA,aAAa,EAAE,KAAK,iBAVgB;AAWpC,YAAA,SAAS,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACvB,cAAA,MAAM,EAAE,KAAK,UADU;AAEvB,cAAA,OAAO,EAAE,KAAK,WAFS;AAGvB,cAAA,SAAS,EAAE,KAAK;AAHO,aAAd;AAXyB,WAAd,CAAxB;AAiBA,eAAK,gBAAL,CAAsB,OAAtB;AACD;AAzGH;AAAA;AAAA,mCA2GU;AACN,cAAI,IAAI,GAAG,KAAK,mBAAL,CAAyB,KAAzB,CAA+B,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAX;AACA,cAAG,IAAI,IAAI,IAAX,EAAiB,KAAK,OAAL,GAAe,KAAf,CAAjB,KACK,KAAK,OAAL,GAAe,IAAf;AACN;AA/GH;AAAA;AAAA,6CAiHoB;AAAA;;AAChB,eAAK,cAAL,GAAsB,0BAAtB;AACA,eAAK,SAAL,GAAiB,IAAjB;AACA,cAAI,IAAI,GAAS,KAAK,gBAAL,CAAsB,KAAvC;AACA,UAAA,IAAI,CAAC,OAAL,GAAe,KAAK,OAApB;AACA,UAAA,IAAI,CAAC,eAAL,GAAuB,YAAY,CAAC,OAAb,CAAqB,QAArB,CAAvB;;AACA,eAAK,QAAL,CAAc,kBAAd,CAAiC,IAAjC,EAAsC,KAAK,YAAL,CAAkB,GAAxD,EAA6D,SAA7D,CACE,UAAA,MAAM,EAAG;AACP,YAAA,OAAI,CAAC,YAAL,GAAoB,MAAM,CAAC,YAA3B;;AACA,YAAA,OAAI,CAAC,QAAL,CAAc,uBAAd,CAAsC,IAAtC;;AACA,YAAA,OAAI,CAAC,QAAL,GAAgB,KAAhB;;AACA,YAAA,OAAI,CAAC,gBAAL,CAAsB,OAAtB;;AACA,YAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,4CAApB,EAAiE,WAAjE,EAA6E;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA7E;AACD,WARH,EAQI,UAAA,KAAK,EAAG;AACR,YAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,6CAApB,EAAkE,WAAlE,EAA8E;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA9E;AACD,WAXH;AAaD;AApIH;AAAA;AAAA,+BAsIM;AACF,eAAK,QAAL,GAAgB,IAAhB;AACA,eAAK,gBAAL,CAAsB,MAAtB;AACD;AAzIH;AAAA;AAAA,mCA2IU;AACN,cAAG,OAAO,CAAC,kEAAD,CAAV,EAA+E;AAC7E,iBAAK,QAAL,GAAgB,KAAhB;AACA,iBAAK,gBAAL,CAAsB,OAAtB;AACA,iBAAK,gBAAL,CAAsB,KAAtB,CAA4B;AAC1B,cAAA,IAAI,EAAG,KAAK,YAAL,CAAkB,IADC;AAE1B,cAAA,eAAe,EAAG,KAAK,YAAL,CAAkB,eAFV;AAG1B,cAAA,MAAM,EAAE,KAAK,YAAL,CAAkB,MAHA;AAI1B,cAAA,IAAI,EAAE,KAAK,YAAL,CAAkB,IAJE;AAK1B,cAAA,SAAS,EAAE,KAAK,YAAL,CAAkB,SALH;AAM1B,cAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACtB,gBAAA,IAAI,EAAE,KAAK,YAAL,CAAkB,QAAlB,CAA2B,IADX;AAEtB,gBAAA,MAAM,EAAE,KAAK,YAAL,CAAkB,QAAlB,CAA2B;AAFb,eAAd,CANgB;AAU1B,cAAA,aAAa,EAAE,KAAK,YAAL,CAAkB,aAVP;AAW1B,cAAA,SAAS,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACvB,gBAAA,MAAM,EAAE,KAAK,YAAL,CAAkB,SAAlB,CAA4B,MADb;AAEvB,gBAAA,OAAO,EAAE,KAAK,YAAL,CAAkB,SAAlB,CAA4B,OAFd;AAGvB,gBAAA,SAAS,EAAE,KAAK,YAAL,CAAkB,SAAlB,CAA4B;AAHhB,eAAd;AAXe,aAA5B;AAiBD;AACF;AAjKH;;AAAA;AAAA,OAAA;;;;cA8BwC,4CAAA,CAAA,gBAAA;;cACP,wDAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,aAAA;;cACF,4CAAA,CAAA,QAAA;;;;AAjCnB,IAAA,yBAAyB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJrC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,uBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wIAAA,CAAA,EAAA;AAFS,KAAV,CAIqC,CAAA,EAAzB,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJb,QAAa,sBAAb,GAME,gCAAoB,QAApB,EAA8C;AAAA;;AAA1B,WAAA,QAAA,GAAA,QAAA;AAJpB,WAAA,aAAA,GAAwB,KAAK,QAAL,CAAc,mBAAd,EAAxB;AAEA,WAAA,QAAA,GAAoB,YAAY,CAAC,OAAb,CAAqB,UAArB,CAApB;AAIC,KARH;;;;cAMiC,wDAAA,CAAA,iBAAA;;;;AANpB,IAAA,sBAAsB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJlC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,gIAAA,CAAA,EAAA;AAFS,KAAV,CAIkC,CAAA,EAAtB,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOb,QAAa,yBAAb;AAAA;AAAA;AASE,yCAAoB,eAApB,EACoB,QADpB,EAEoB,cAFpB,EAGoB,SAHpB,EAG2C;AAAA;;AAAA;;AAHvB,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,cAAA,GAAA,cAAA;AACA,aAAA,SAAA,GAAA,SAAA;AAgCpB,aAAA,IAAA,GAAc,CAAC,GAAD,EAAM,GAAN,CAAd,CAhC2C,CAkC3C;;AACA,aAAA,MAAA,GAAkB,IAAlB;AACA,aAAA,UAAA,GAAsB,IAAtB;AACA,aAAA,UAAA,GAAsB,IAAtB;AACA,aAAA,KAAA,GAAiB,IAAjB;AACA,aAAA,KAAA,GAAiB,IAAjB;AACA,aAAA,cAAA,GAA0B,IAA1B;AACA,aAAA,cAAA,GAA0B,IAA1B,CAzC2C,CA0C3C;;AACA,aAAA,UAAA,GAAqB,QAArB,CA3C2C,CA4C3C;;AACA,aAAA,UAAA,GAAqB,kBAArB;AACA,aAAA,QAAA,GAAoB,IAApB;AAEA,aAAA,WAAA,GAAc;AACZ,UAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ;AADI,SAAd;;AA9CE,aAAK,eAAL,CAAqB,MAArB,CAA4B,SAA5B,CACE,UAAC,MAAD;AAAA,iBAAqB,OAAI,CAAC,YAAL,GAAoB,OAAI,CAAC,QAAL,CAAc,eAAd,CAA8B,MAAM,CAAC,EAArC,CAAzC;AAAA,SADF;;AAIA,aAAK,cAAL,CAAoB,sBAApB,CAA2C,KAAK,YAAL,CAAkB,GAA7D,EACK,SADL,CAEM,UAAA,MAAM,EAAG;AACP,cAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA0B;AACxB,YAAA,MAAM,CAAC,IAAP,CAAY,CAAZ,EAAe,MAAf,CAAsB,OAAtB,CAA8B,UAAA,KAAK;AAAA,qBAAI,KAAK,CAAC,IAAN,GAAa,IAAI,IAAJ,CAAS,KAAK,CAAC,IAAf,CAAjB;AAAA,aAAnC;AACA,YAAA,MAAM,CAAC,IAAP,CAAY,CAAZ,EAAe,MAAf,CAAsB,OAAtB,CAA8B,UAAA,KAAK;AAAA,qBAAI,KAAK,CAAC,IAAN,GAAa,IAAI,IAAJ,CAAS,KAAK,CAAC,IAAf,CAAjB;AAAA,aAAnC;AACA,YAAA,OAAI,CAAC,KAAL,GAAa,IAAb;AACA,YAAA,OAAI,CAAC,KAAL,GAAa,MAAM,CAAC,IAApB;;AACA,YAAA,OAAI,CAAC,aAAL;AACD;AACF,SAVP,EAWM,UAAA,KAAK;AAAA,iBAAI,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,+CAApB,EAAoE,WAApE,EAAgF;AAAC,YAAA,QAAQ,EAAE;AAAX,WAAhF,CAAJ;AAAA,SAXX;AAeD;;AAjCH;AAAA;AAAA,mCAmCU;AACN,eAAK,UAAL,CAAgB,SAAhB,GAA4B,KAAK,SAAjC;AACD;AArCH;AAAA;AAAA,iCAgEW,IAhEX,EAgEe;AACX,UAAA,OAAO,CAAC,GAAR,CAAY,cAAZ,EAA4B,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,IAAf,CAAX,CAA5B;AACD;AAlEH;AAAA;AAAA,mCAoEa,IApEb,EAoEiB;AACb,UAAA,OAAO,CAAC,GAAR,CAAY,UAAZ,EAAwB,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,IAAf,CAAX,CAAxB;AACD;AAtEH;AAAA;AAAA,qCAwEe,IAxEf,EAwEmB;AACf,UAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,IAAf,CAAX,CAA1B;AACD;AA1EH;AAAA;AAAA,wCA+EmB,KA/EnB,EA+E+B;AAC3B,2BAAU,KAAK,CAAC,QAAN,KAAmB,CAA7B,cAAkC,KAAK,CAAC,WAAN,EAAlC;AACD;AAjFH;AAAA;AAAA,wCAmFe;AAAA;;AACX,eAAK,YAAL,GAAoB,EAApB;AACA,cAAI,KAAK,GAAU,IAAI,IAAJ,CAAS,KAAK,YAAL,CAAkB,UAA3B,CAAnB;AACA,eAAK,YAAL,CAAkB,IAAlB,CAAuB;AACrB,YAAA,MAAM,EAAE,CADa;AAErB,YAAA,MAAM,YAAK,KAAK,YAAL,CAAkB,KAAK,CAAC,QAAN,KAAmB,CAArC,CAAL,gBAAkD,IAAI,IAAJ,CAAS,KAAK,YAAL,CAAkB,UAA3B,EAAuC,WAAvC,EAAlD,CAFe;AAGrB,YAAA,IAAI,EAAE,KAAK,YAAL,CAAkB,QAAlB,CAA2B,IAHZ;AAIrB,YAAA,MAAM,EAAE,KAAK,YAAL,CAAkB,QAAlB,CAA2B,MAJd;AAKrB,YAAA,KAAK,EAAE,KAAK,YAAL,CAAkB,QAAlB,CAA2B,IAA3B,GAAkC,KAAK,YAAL,CAAkB,QAAlB,CAA2B;AAL/C,WAAvB;AAOA,eAAK,YAAL,CAAkB,eAAlB,CAAkC,OAAlC,CAA0C,UAAC,QAAD,EAAW,KAAX,EAAoB;AAC5D,gBAAI,YAAY,GAAU,IAAI,IAAJ,CAAS,QAAQ,CAAC,MAAlB,CAA1B;;AACA,YAAA,OAAI,CAAC,YAAL,CAAkB,IAAlB,CAAuB;AACrB,cAAA,MAAM,EAAE,KAAK,GAAG,CADK;AAErB,cAAA,MAAM,YAAK,OAAI,CAAC,YAAL,CAAkB,YAAY,CAAC,QAAb,KAA0B,CAA5C,CAAL,gBAAyD,YAAY,CAAC,WAAb,EAAzD,CAFe;AAGrB,cAAA,IAAI,EAAE,QAAQ,CAAC,IAHM;AAIrB,cAAA,MAAM,EAAE,QAAQ,CAAC,MAJI;AAKrB,cAAA,KAAK,EAAE,QAAQ,CAAC,IAAT,GAAgB,QAAQ,CAAC;AALX,aAAvB;AAOD,WATD;AAUA,eAAK,gBAAL,GAAwB,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,EAA6B,QAA7B,EAAuC,OAAvC,CAAxB;AACA,eAAK,UAAL,GAAkB,IAAI,oDAAA,CAAA,oBAAA,CAAJ,CAAiC,KAAK,YAAtC,CAAlB;AACD;AAzGH;AAAA;AAAA,qCA2GgB,KA3GhB,EA2G8B;AAC1B,cAAI,GAAG,GAAY,EAAnB;;AACA,kBAAO,KAAP;AACE,iBAAK,CAAL;AACE,cAAA,GAAG,GAAG,OAAN;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,GAAG,GAAG,SAAN;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,GAAG,GAAG,OAAN;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,GAAG,GAAG,OAAN;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,GAAG,GAAG,MAAN;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,GAAG,GAAG,OAAN;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,GAAG,GAAG,OAAN;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,GAAG,GAAG,QAAN;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,GAAG,GAAG,YAAN;AACA;;AACF,iBAAK,EAAL;AACE,cAAA,GAAG,GAAG,SAAN;AACA;;AACF,iBAAK,EAAL;AACE,cAAA,GAAG,GAAG,WAAN;AACA;;AACF,iBAAK,EAAL;AACE,cAAA,GAAG,GAAG,WAAN;AACA;;AACF;AACE;AAtCJ;;AAwCA,iBAAO,GAAP;AACD;AAtJH;AAAA;AAAA,mCAwJc,KAxJd,EAwJ0B;AACtB,iBAAO,KAAK,CAAC,QAAN,GAAiB,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAP;AACD;AA1JH;;AAAA;AAAA,OAAA;;;;cASwC,4CAAA,CAAA,gBAAA;;cACP,wDAAA,CAAA,iBAAA;;cACM,iEAAA,CAAA,0BAAA;;cACL,wDAAA,CAAA,aAAA;;;;AAgES,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAxC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,wDAAA,CAAA,cAAA,CAAV,EAAwB;AAAC,MAAA,MAAM,EAAE;AAAT,KAAxB,CAAwC,CAAA,E,mCAAA,E,WAAA,E,KAAwB,CAAxB;AA5E9B,IAAA,yBAAyB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJrC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,uBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wIAAA,CAAA,EAAA;AAFS,KAAV,CAIqC,CAAA,EAAzB,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHb,QAAa,iBAAb;AAAA;AAAA;AAaE,iCAAoB,aAApB,EACoB,QADpB,EAEoB,SAFpB,EAGoB,OAHpB,EAGoC;AAAA;;AAAA;;AAHhB,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,OAAA,GAAA,OAAA;AANpB,aAAA,QAAA,GAAyB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,WAAX,CAAnB,CAArB,CAAnB,CAAzB;AACA,aAAA,UAAA,GAA2B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,WAAX,CAAnB,CAArB,CAAnB,CAA3B;;AAOE,aAAK,aAAL,CAAmB,MAAnB,CAA0B,SAA1B,CACE,UAAC,MAAD;AAAA,iBAAoB,OAAI,CAAC,YAAL,GAAoB,OAAI,CAAC,QAAL,CAAc,eAAd,CAA8B,MAAM,CAAC,EAArC,CAAxC;AAAA,SADF;;AAIA,aAAK,WAAL,GAAmB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC/B,UAAA,IAAI,EAAE,KAAK,QADoB;AAE/B,UAAA,MAAM,EAAE,KAAK;AAFkB,SAAd,CAAnB;AAIA,QAAA,OAAO,CAAC,GAAR,CAAY,KAAK,YAAjB;;AACA,YAAG,KAAK,YAAL,CAAkB,eAAlB,CAAkC,MAArC,EAA6C;AAC3C,UAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,eAAK,cAAL,GAAsB;AACpB,YAAA,IAAI,EAAE,KAAK,YAAL,CAAkB,eAAlB,CAAkC,KAAK,YAAL,CAAkB,eAAlB,CAAkC,MAAlC,GAA2C,CAA7E,EAAgF,IADlE;AAEpB,YAAA,MAAM,EAAE,KAAK,YAAL,CAAkB,eAAlB,CAAkC,KAAK,YAAL,CAAkB,eAAlB,CAAkC,MAAlC,GAA2C,CAA7E,EAAgF,MAFpE;AAGpB,YAAA,KAAK,EAAE,KAAK,YAAL,CAAkB,eAAlB,CAAkC,KAAK,YAAL,CAAkB,eAAlB,CAAkC,MAAlC,GAA2C,CAA7E,EAAgF,IAAhF,GAAuF,KAAK,YAAL,CAAkB,eAAlB,CAAkC,KAAK,YAAL,CAAkB,eAAlB,CAAkC,MAAlC,GAA2C,CAA7E,EAAgF;AAH1J,WAAtB;AAKD,SAPD,MAOM;AACJ,UAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AACA,eAAK,cAAL,GAAsB;AACpB,YAAA,IAAI,EAAE,KAAK,YAAL,CAAkB,QAAlB,CAA2B,IADb;AAEpB,YAAA,MAAM,EAAE,KAAK,YAAL,CAAkB,QAAlB,CAA2B,MAFf;AAGpB,YAAA,KAAK,EAAE,KAAK,YAAL,CAAkB,QAAlB,CAA2B,IAA3B,GAAkC,KAAK,YAAL,CAAkB,QAAlB,CAA2B;AAHhD,WAAtB;AAKD;;AACD,aAAK,OAAL,GAAe,CACb;AACE,UAAA,OAAO,EAAE,WADX;AAEE,UAAA,OAAO,EAAE,IAFX;AAGE,UAAA,IAAI,EAAE,UAHR;AAIE,UAAA,OAAO,EAAE,mBAAK;AACZ,YAAA,OAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,CAAC,eAAD,EAAiB,OAAI,CAAC,YAAL,CAAkB,GAAnC,EAAuC,UAAvC,EAAkD,UAAlD,CAAtB;AACD;AANH,SADa,CAAf;AAUD;;AApDH;AAAA;AAAA,iCAsDQ;AACJ,eAAK,WAAL,CAAiB,KAAjB;AACD;AAxDH;AAAA;AAAA,iCA0Da,MA1Db,EA0D4B;AACxB,iBAAO,MAAM,CAAC,QAAP,CAAgB,MAAhB,CAAP;AACD;AA5DH;AAAA;AAAA,+BA8DM;AAAA;;AACF,cAAI,OAAJ;AACA,cAAI,QAAQ,GAAS,KAAK,WAAL,CAAiB,KAAtC;AACA,UAAA,QAAQ,CAAC,MAAT,GAAkB,IAAI,IAAJ,EAAlB;AACA,UAAA,OAAO,GAAG,KAAK,YAAL,CAAkB,eAA5B;AACA,UAAA,OAAO,CAAC,IAAR,CAAa,QAAb;;AACA,eAAK,QAAL,CAAc,kBAAd,CAAiC;AAAC,YAAA,eAAe,EAAE;AAAlB,WAAjC,EAA4D,KAAK,YAAL,CAAkB,GAA9E,EAAmF,SAAnF,CACE,UAAA,MAAM,EAAG;AAEP,YAAA,OAAI,CAAC,YAAL,GAAoB,MAAM,CAAC,YAA3B;AACA,gBAAI,aAAa,GAAW,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,eAArB,CAAX,CAA5B;AACA,gBAAI,QAAJ;;AACA,iBAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,aAAa,CAAC,MAAjC,EAAyC,CAAC,EAA1C,EAA6C;AAC3C,kBAAG,aAAa,CAAC,CAAD,CAAb,CAAiB,GAAjB,IAAwB,OAAI,CAAC,YAAL,CAAkB,GAA7C,EAAkD,QAAQ,GAAG,CAAX;AACnD;;AACD,YAAA,aAAa,CAAC,MAAd,CAAqB,QAArB,EAA8B,CAA9B;AACA,YAAA,aAAa,CAAC,IAAd,CAAmB,MAAM,CAAC,YAA1B;AACA,YAAA,YAAY,CAAC,OAAb,CAAqB,eAArB,EAAqC,IAAI,CAAC,SAAL,CAAe,aAAf,CAArC;;AAEA,YAAA,OAAI,CAAC,WAAL,CAAiB,KAAjB;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,6CAApB,EAAkE,WAAlE,EAA8E;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA9E;AACD,WAfH,EAeI,UAAA,KAAK;AAAA,mBAAI,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,gDAApB,EAAqE,WAArE,EAAiF;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAjF,CAAJ;AAAA,WAfT;AAiBD;AArFH;;AAAA;AAAA,OAAA;;;;cAasC,4CAAA,CAAA,gBAAA;;cACL,wDAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,aAAA;;cACF,4CAAA,CAAA,QAAA;;;;AAhBnB,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ7B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,cADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,sHAAA,CAAA,EAAA;AAFS,KAAV,CAI6B,CAAA,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKb,QAAa,mBAAb;AAAA;AAAA;AAkCE,mCAAoB,QAApB,EACoB,SADpB,EAEoB,OAFpB,EAEoC;AAAA;;AAFhB,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,OAAA,GAAA,OAAA;AAlCpB,aAAA,aAAA,GAAwB,KAAK,QAAL,CAAc,mBAAd,EAAxB;AACA,aAAA,OAAA,GAAkB,KAAK,QAAL,CAAc,aAAd,EAAlB;AACA,aAAA,UAAA,GAAqB,KAAK,QAAL,CAAc,gBAAd,EAArB;AAIA,aAAA,OAAA,GAAoB,IAApB;AAEA,aAAA,qBAAA,GAA8B,EAA9B;AACA,aAAA,kBAAA,GAA2B,EAA3B;AAEA,aAAA,SAAA,GAAsB,KAAtB;AAKA;;AACA,aAAA,QAAA,GAAyB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,YAAnC,EAAgD,KAAK,QAAL,CAAc,OAA9D,CAAnB,CAAzB;AACA,aAAA,cAAA,GAA+B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,mEAAX,CAAnB,CAArB,CAAnB,CAA/B;AACA,aAAA,YAAA,GAA6B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,WAAX,CAAnB,CAArB,EAAiE,KAAK,QAAL,CAAc,OAA/E,CAAnB,CAA7B;AAEA,aAAA,UAAA,GAA2B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,YAAX,CAAnB,CAArB,CAAnB,CAA3B;AACA,aAAA,aAAA,GAA8B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CAA9B;AACA,aAAA,uBAAA,GAAwC,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,WAAX,CAAnB,CAArB,CAAnB,CAAxC;AAEA,aAAA,cAAA,GAA+B,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CAA/B;AACA,aAAA,WAAA,GAA0B,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,CAAC,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CAAD,CAAd,CAA1B;AACA,aAAA,WAAA,GAA0B,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,CAAC,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CAAD,CAAd,CAA1B;AAEA,aAAA,SAAA,GAAwB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,EAAd,CAAxB;AACA,aAAA,WAAA,GAA0B,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,EAAd,CAA1B;AAKE,aAAK,gBAAL,GAAwB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACpC,UAAA,IAAI,EAAE,KAAK,QADyB;AAEpC,UAAA,UAAU,EAAE,KAAK,cAFmB;AAGpC,UAAA,QAAQ,EAAE,KAAK,YAHqB;AAIpC,UAAA,OAAO,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACrB,YAAA,aAAa,EAAE,KAAK;AADC,WAAd,CAJ2B;AAOpC,UAAA,SAAS,EAAE,KAAK,aAPoB;AAQpC,UAAA,aAAa,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC3B,YAAA,MAAM,EAAE,KAAK;AADc,WAAd,CARqB;AAWpC,UAAA,aAAa,EAAE,KAAK,cAXgB;AAYpC,UAAA,cAAc,EAAE,KAAK,WAZe;AAapC,UAAA,OAAO,EAAE,KAAK,WAbsB;AAcpC,UAAA,KAAK,EAAE,KAAK,SAdwB;AAepC,UAAA,OAAO,EAAE,KAAK;AAfsB,SAAd,CAAxB;AAiBD;;AAtDH;AAAA;AAAA,uCAwDc;AACG,eAAK,WAAL,CAAkB,IAAlB,CAAuB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CAAvB;AACd;AA1DH;AAAA;AAAA,oCA4DW;AACM,eAAK,WAAL,CAAkB,IAAlB,CAAuB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CAAvB;AACd;AA9DH;AAAA;AAAA,wCAgEkB,KAhElB,EAgEgC;AAC5B,cAAG,OAAO,CAAC,oDAAD,CAAV,EAA+E,KAAK,WAAL,CAAkB,QAAlB,CAA2B,KAA3B;AAChF;AAlEH;AAAA;AAAA,qCAoEe,KApEf,EAoE6B;AACzB,cAAG,OAAO,CAAC,qDAAD,CAAV,EAAgF,KAAK,WAAL,CAAkB,QAAlB,CAA2B,KAA3B;AACjF;AAED;;AAxEF;AAAA;AAAA,+CAyEyB,EAzEzB,EAyEsC,IAzEtC,EAyE6D;AAAA;;AACzD,cAAI,KAAK,GAAa,KAAtB;AACA,cAAI,MAAJ;;AACA,eAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAgB,KAAK,SAAL,CAAgB,MAAhD,EAAwD,CAAC,EAAzD,EAA4D;AAC1D,gBAAG,KAAK,SAAL,CAAe,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAA+B,IAA/B,EAAqC,KAArC,IAA8C,EAAjD,EAAoD;AAClD,cAAA,MAAM,GAAG,CAAT;AACA,cAAA,KAAK,GAAG,IAAR;AACA;AACD;AACF;;AACD,cAAG,KAAH,EAAS;AAAC;AACR,gBAAG,OAAO,CAAC,qFAAD,CAAV,EAAgH,KAAK,SAAL,CAAgB,QAAhB,CAAyB,MAAzB,EAAhH,KACK,IAAI,CAAC,OAAL,CAAa,MAAb,CAAoB,UAAA,MAAM;AAAA,qBAAI,MAAM,CAAC,KAAP,IAAgB,EAApB;AAAA,aAA1B,EAAkD,CAAlD,EAAqD,QAArD,GAAgE,IAAhE;AACN,WAHD,MAGK;AAAA;AAAC;AACJ,kBAAI,SAAS,GAAS,OAAI,CAAC,UAAL,CAAgB,MAAhB,CAAuB,UAAA,SAAS;AAAA,uBAAI,SAAS,CAAC,GAAV,IAAiB,EAArB;AAAA,eAAhC,EAAyD,CAAzD,CAAtB;;AACA,cAAA,OAAI,CAAC,kBAAL,CAAwB,IAAxB,CAA6B;AAAC,gBAAA,EAAE,EAAE,SAAS,CAAC,GAAf;AAAmB,gBAAA,UAAU,EAAE,SAAS,CAAC;AAAzC,eAA7B;;AACA,kBAAI,iBAAiB,GAAe,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,EAAd,CAApC;;AACA,cAAA,OAAI,CAAC,qBAAL,CAA2B,OAA3B,CAAmC,UAAA,YAAY,EAAG;AACnC,gBAAA,iBAAkB,CAAC,IAAnB,CAAwB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACjD,kBAAA,YAAY,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,YAAY,CAAC,IAA7B,EAAkC,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAlC,CADmC;AAEjD,kBAAA,EAAE,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,YAAY,CAAC,EAA7B,EAAgC,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAhC,CAF6C;AAGjD,kBAAA,UAAU,EAAE,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,EAAd;AAHqC,iBAAd,CAAxB;AAKd,eAND;;AAOA,kBAAI,aAAa,GAAG,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAChC,gBAAA,SAAS,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,SAAS,CAAC,IAA1B,CADqB;AAEhC,gBAAA,EAAE,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,SAAS,CAAC,GAA1B,CAF4B;AAGhC,gBAAA,aAAa,EAAE;AAHiB,eAAd,CAApB;;AAXG,yCAgBK,EAhBL;AAiBC,gBAAA,SAAS,CAAC,iBAAV,CAA4B,OAA5B,CAAoC,UAAA,SAAS,EAAG;AAClC,kBAAA,aAAa,CAAC,QAAd,CAAuB,aAAvB,CAAqC,UAArC,EAAiD,EAAjD,EAAoD,GAApD,CAAwD,YAAxD,EAAuE,IAAvE,CAA4E,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACpG,oBAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,SAAS,CAAC,IAA1B,CAD8F;AAEpG,oBAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,OAAI,CAAC,QAAL,CAAc,OAAnC,EAA2C,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,YAAX,CAAnB,CAA3C,CAAnB,CAF0F;AAGpG,oBAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,OAAI,CAAC,QAAL,CAAc,OAAnC,EAA2C,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,YAAX,CAAnB,CAA3C,CAAnB;AAH8F,mBAAd,CAA5E;AAKb,iBAND;AAjBD;;AAgBH,mBAAI,IAAI,EAAC,GAAG,CAAZ,EAAe,EAAC,GAAe,aAAa,CAAC,QAAd,CAAuB,aAAvB,CAAsC,MAArE,EAA6E,EAAC,EAA9E,EAAiF;AAAA,sBAAzE,EAAyE;AAQhF;;AACY,cAAA,OAAI,CAAC,SAAL,CAAgB,IAAhB,CAAqB,aAArB;AAzBV;AA0BJ;AACF;AAjHH;AAAA;AAAA,kDAmH4B,EAnH5B,EAmHyC,iBAnHzC,EAmH6E;AAAA;;AACzE,cAAI,KAAK,GAAa,KAAtB;AACA,eAAK,qBAAL,CAA2B,OAA3B,CAAmC,UAAC,YAAD,EAAe,KAAf,EAAwB;AACzD,gBAAG,YAAY,CAAC,EAAb,IAAmB,EAAtB,EAAyB;AAAE;AACzB,cAAA,KAAK,GAAG,IAAR;;AACA,kBAAG,OAAO,CAAC,wFAAD,CAAV,EAAqG;AACnG,gBAAA,OAAI,CAAC,qBAAL,CAA2B,MAA3B,CAAkC,KAAlC,EAAwC,CAAxC,EADmG,CACvD;AAC5C;;;AACA,uBAAO,OAAI,CAAC,cAAL,CAAoB,KAApB,CAAP;AACD,eAJD,MAIM,OAAO,iBAAiB,CAAC,OAAlB,CAA0B,MAA1B,CAAiC,UAAA,MAAM;AAAA,uBAAI,MAAM,CAAC,KAAP,IAAgB,EAApB;AAAA,eAAvC,EAA+D,CAA/D,EAAkE,QAAlE,GAA6E,IAApF;AACP;AACF,WATD,EAFyE,CAYzE;;AACA,cAAG,CAAC,KAAJ,EAAU;AACR,gBAAI,YAAY,GAAS,KAAK,aAAL,CAAmB,MAAnB,CAA0B,UAAA,YAAY;AAAA,qBAAI,YAAY,CAAC,GAAb,IAAoB,EAAxB;AAAA,aAAtC,EAAkE,CAAlE,CAAzB;AACA,iBAAK,qBAAL,CAA2B,IAA3B,CAAgC;AAC9B,cAAA,IAAI,EAAE,YAAY,CAAC,IADW;AAE9B,cAAA,EAAE,EAAE,YAAY,CAAC;AAFa,aAAhC;;AAFQ,yCAMA,CANA;AAQN,kBAAI,UAAU,GAAe,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc,EAAd,CAA7B;;AAEA,cAAA,OAAI,CAAC,kBAAL,CAAwB,CAAxB,EAA2B,UAA3B,CAAsC,OAAtC,CAA8C,UAAA,SAAS,EAAG;AAC3C,gBAAA,UAAW,CAAC,IAAZ,CAAiB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC1C,kBAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,SAAS,CAAC,IAA1B,CADoC;AAE1C,kBAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,OAAI,CAAC,QAAL,CAAc,OAAnC,EAA2C,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,YAAX,CAAnB,CAA3C,CAAnB,CAFgC;AAG1C,kBAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,OAAI,CAAC,QAAL,CAAc,OAAnC,EAA2C,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,YAAX,CAAnB,CAA3C,CAAnB;AAHoC,iBAAd,CAAjB;AAKd,eAND;;AAQa,cAAA,OAAI,CAAC,SAAL,CAAe,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAA+B,eAA/B,EAAiD,IAAjD,CAAsD,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC/E,gBAAA,YAAY,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,YAAY,CAAC,IAA7B,EAAkC,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAlC,CADiE;AAE/E,gBAAA,EAAE,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,YAAY,CAAC,GAA7B,EAAiC,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAjC,CAF2E;AAG/E,gBAAA,UAAU,EAAV;AAH+E,eAAd,CAAtD;AAlBP;;AAMR,iBAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,KAAK,SAAL,CAAe,MAAlC,EAA0C,CAAC,EAA3C,EAA8C;AAAA,qBAAtC,CAAsC;AAiB7C;AACF;AACF;AAzJH;AAAA;AAAA,uCA2JiB,KA3JjB,EA2J+B;AAC3B,eAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,KAAK,SAAL,CAAe,MAAlC,EAA0C,CAAC,EAA3C,EAA8C;AAC/B,iBAAK,SAAL,CAAe,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAA+B,eAA/B,EAAiD,QAAjD,CAA0D,KAA1D;AACd;AACF;AA/JH;AAAA;AAAA,4CAiKsB,EAjKtB,EAiKiC;AAChB,eAAK,WAAL,CAAkB,IAAlB,CAAuB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB,CAAvB;AACd;AAnKH;AAAA;AAAA,wCAqKe;AAAA;;AACX,eAAK,cAAL,GAAsB,0BAAtB;AACA,eAAK,SAAL,GAAiB,IAAjB;;AACA,cAAG,KAAK,gBAAL,CAAsB,OAAtB,IAAiC,CAAC,KAAK,IAAvC,IAA+C,CAAC,KAAK,SAAL,CAAe,MAA/D,IAAyE,CAAC,KAAK,WAAL,CAAiB,MAA9F,EAAqG;AACnG,iBAAK,SAAL,GAAiB,KAAjB;AACA,mBAAO,KAAK,CAAC,oMAAD,CAAZ;AACD;;AACD,cAAI,OAAO,GAAS,KAAK,gBAAL,CAAsB,KAA1C;AACA,UAAA,OAAO,CAAC,UAAR,GAAqB,EAArB;AACA,UAAA,OAAO,CAAC,aAAR,GAAwB,EAAxB;;AACA,eAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,OAAO,CAAC,KAAR,CAAc,MAAjC,EAAyC,CAAC,EAA1C,EAA6C;AAC3C,YAAA,OAAO,CAAC,UAAR,CAAmB,IAAnB,CAAwB,OAAO,CAAC,KAAR,CAAc,CAAd,EAAiB,EAAzC;AACD;;AACD,eAAI,IAAI,GAAC,GAAG,CAAZ,EAAe,GAAC,GAAG,OAAO,CAAC,KAAR,CAAc,CAAd,EAAiB,aAAjB,CAA+B,MAAlD,EAA0D,GAAC,EAA3D,EAA8D;AAC5D,YAAA,OAAO,CAAC,aAAR,CAAsB,IAAtB,CAA2B,OAAO,CAAC,KAAR,CAAc,CAAd,EAAiB,aAAjB,CAA+B,GAA/B,EAAkC,EAA7D;AACD;;AACD,eAAK,QAAL,CAAc,aAAd,CAA4B,OAA5B,EAAqC,SAArC,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,SAArB,EAAgC;AAC9B,cAAA,OAAI,CAAC,uBAAL,CAA6B,MAAM,CAAC,OAAP,CAAe,GAA5C,EAAiD,SAAjD,CACE,UAAA,MAAM,EAAG;AACP,oBAAG,MAAM,CAAC,OAAP,IAAiB,SAApB,EAA8B;AAC5B,kBAAA,OAAI,CAAC,QAAL,CAAc,uBAAd,CAAsC,IAAtC;;AACA,kBAAA,OAAI,CAAC,QAAL,CAAc,iBAAd,CAAgC,IAAhC;;AACA,kBAAA,OAAI,CAAC,QAAL,CAAc,kBAAd,CAAiC,IAAjC;;AACA,kBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,kBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,oCAApB,EAAyD,WAAzD,EAAqE;AAAC,oBAAA,QAAQ,EAAE;AAAX,mBAArE;AACD;AACF,eATH,EASI,UAAA,KAAK,EAAG;AACR,gBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,gBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,4DAApB,EAAiF,WAAjF,EAA6F;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAA7F;AACD,eAZH;AAcD;AACF,WAlBH,EAkBI,UAAA,KAAK,EAAG;AACR,YAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,gDAApB,EAAqE,WAArE,EAAiF;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAjF;AACD,WArBH;AAuBD;AA5MH;AAAA;AAAA,iDA8M2B,KA9M3B,EA8MgC;AAC5B,cAAG,KAAK,CAAC,MAAN,CAAa,KAAb,IAAsB,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,MAAnB,GAA4B,CAArD,EAAuD;AACrD,gBAAI,IAAI,GAAG,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,CAAnB,CAAX;AACE,gBAAI,IAAI,GAAG,IAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,GAAhB,CAAX;AACA,iBAAK,IAAL,GAAY;AACV,cAAA,IAAI,EAAE,IAAI,CAAC,CAAD,CADA;AAEV,cAAA,MAAM,EAAE,KAAK,QAAL,CAAc,KAFZ;AAGV,cAAA,IAAI,EAAE,IAAI,CAAC,IAHD;AAIV,cAAA,GAAG,EAAE,IAAI,CAAC,CAAD,CAJC;AAKV,cAAA,IAAI,EAAE,MAAA,CAAA,oEAAA,CAAA,gBAAA,CAAA,CAAA,CAAe,IAAI,CAAC,CAAD,CAAnB,CALI;AAMV,cAAA,WAAW,EAAE,aANH;AAOV,cAAA,MAAM,EAAE,MAAA,CAAA,oEAAA,CAAA,aAAA,CAAA,CAAA,CAAY,IAAI,CAAC,IAAjB,CAPE;AAQV,cAAA,OAAO,EAAE;AARC,aAAZ;AAUD;AACJ;AA7NH;AAAA;AAAA,gDA+N0B,EA/N1B,EA+N4B;AACxB,cAAI,SAAS,GAAG,IAAI,QAAJ,EAAhB;AACA,cAAI,OAAO,GAAG,EAAd;AACA,cAAI,IAAI,aAAM,KAAK,IAAL,CAAU,IAAV,CAAe,OAAf,CAAuB,IAAvB,EAA4B,GAA5B,CAAN,cAA0C,mCAAA,CAAA,KAAA,CAAA,EAA1C,cAA0D,KAAK,IAAL,CAAU,GAApE,CAAR;AACI,UAAA,SAAS,CAAC,MAAV,CAAiB,aAAjB,EAA+B,KAAK,IAAL,CAAU,OAAzC,EAAiD,IAAjD;AACA,UAAA,OAAO,CAAC,IAAR,CAAa;AACX,YAAA,IAAI,EAAE,KAAK,IAAL,CAAU,IADL;AAEX,YAAA,MAAM,EAAE,EAFG;AAGX,YAAA,IAAI,EAAE,KAAK,IAAL,CAAU,IAHL;AAIX,YAAA,IAAI,EAAE,IAJK;AAKX,YAAA,GAAG,EAAE,KAAK,IAAL,CAAU,GALJ;AAMX,YAAA,IAAI,EAAE,KAAK,IAAL,CAAU,MANL;AAOX,YAAA,MAAM,EAAE;AAPG,WAAb;AASJ,UAAA,SAAS,CAAC,MAAV,CAAiB,SAAjB,EAA2B,IAAI,CAAC,SAAL,CAAe,OAAf,CAA3B;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,QAAjB,EAA0B,SAA1B;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,IAAjB,EAAsB,EAAtB;AACA,iBAAO,KAAK,QAAL,CAAc,UAAd,CAAyB,SAAzB,CAAP;AACD;AAjPH;;AAAA;AAAA,OAAA;;;;cAkCiC,wDAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,aAAA;;cACF,4CAAA,CAAA,QAAA;;;;AApCnB,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ/B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wHAAA,CAAA,EAAA;AAFS,KAAV,CAI+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHb,QAAa,oBAAb;AAAA;AAAA;AAqCE,oCAAoB,QAApB,EACoB,eADpB,EAEoB,SAFpB,EAGoB,MAHpB,EAGsC;AAAA;;AAAA;;AAHlB,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,MAAA,GAAA,MAAA;AAhCpB,aAAA,QAAA,GAAoB,YAAY,CAAC,OAAb,CAAqB,UAArB,CAApB;AAGA,aAAA,SAAA,GAAsB,KAAtB;AAEA,aAAA,SAAA,GAA4B;AAC1B,UAAA,OAAO,EAAE,IADiB;AAE1B,UAAA,IAAI,EAAE,QAFoB;AAG1B,UAAA,OAAO,EAAE,mBAAI;AACX,gBAAG,OAAO,CAAC,qFAAD,CAAV,EAAkG;AAChG,cAAA,OAAI,CAAC,cAAL,GAAsB,2BAAtB;AACA,cAAA,OAAI,CAAC,SAAL,GAAiB,IAAjB;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,aAAd,CAA4B,OAAI,CAAC,OAAL,CAAa,GAAzC,EAA8C,SAA9C,CACA,UAAA,MAAM,EAAG;AACP,oBAAG,MAAM,CAAC,OAAP,IAAkB,SAArB,EAA+B;AAC7B,kBAAA,OAAI,CAAC,QAAL,CAAc,kBAAd,CAAiC,IAAjC;;AACA,kBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,kBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,uCAApB,EAA4D,WAA5D,EAAwE;AAAC,oBAAA,QAAQ,EAAE;AAAX,mBAAxE;AACD;AACF,eAPD,EAOE,UAAA,KAAK,EAAG;AACR,gBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,gBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,2CAApB,EAAgE,WAAhE,EAA4E;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAA5E;AACD,eAVD;AAYD;AACF,WApByB;AAqB1B,UAAA,OAAO,EAAE;AArBiB,SAA5B;AAwNE,aAAA,IAAA,GAAc,CAAC,GAAD,EAAM,GAAN,CAAd,CA7LoC,CA+LpC;;AACA,aAAA,MAAA,GAAkB,IAAlB;AACA,aAAA,UAAA,GAAsB,IAAtB;AACA,aAAA,UAAA,GAAsB,IAAtB;AACA,aAAA,KAAA,GAAiB,IAAjB;AACA,aAAA,KAAA,GAAiB,IAAjB;AACA,aAAA,cAAA,GAA0B,IAA1B;AACA,aAAA,cAAA,GAA0B,IAA1B,CAtMoC,CAuMpC;;AACA,aAAA,UAAA,GAAqB,QAArB,CAxMoC,CAyMpC;;AACA,aAAA,UAAA,GAAqB,8BAArB;AACA,aAAA,QAAA,GAAoB,IAApB;AAEA,aAAA,WAAA,GAAc;AACZ,UAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ;AADI,SAAd;;AA3MA,aAAK,eAAL,CAAqB,MAArB,CAA4B,SAA5B,CACE,UAAC,MAAD,EAAoB;AAClB,UAAA,OAAI,CAAC,OAAL,GAAe,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,EAAhC,CAAf;AACA,UAAA,OAAI,CAAC,eAAL,GAAuB,OAAI,CAAC,OAAL,CAAa,OAAb,CAAqB,SAArB,CAA+B,GAA/B,EAAvB;;AACA,UAAA,OAAI,CAAC,OAAL,CAAa,OAAb,CAAqB,SAArB,CAA+B,IAA/B,CAAoC,OAAI,CAAC,eAAzC;;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,OAAI,CAAC,OAAL,CAAa,OAAzB;;AACA,UAAA,OAAI,CAAC,iBAAL;AACD,SAPH;;AAWA,aAAK,QAAL,CAAc,oBAAd,CAAmC,KAAK,OAAL,CAAa,aAAb,CAA2B,IAA9D,EAAoE,SAApE,CACE,UAAA,MAAM,EAAG;AACP,cAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA2B,OAAI,CAAC,IAAL,GAAY,MAAM,CAAC,IAAnB;AAC5B,SAHH,EAGI,UAAA,KAAK;AAAA,iBAAI,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,+CAApB,EAAoE,WAApE,EAAgF;AAAC,YAAA,QAAQ,EAAE;AAAX,WAAhF,CAAJ;AAAA,SAHT;AAKD;AAED;;;;;AA5DF;AAAA;AAAA,sCA+Da;AAAA;;AACT,cAAM,SAAS,GAAG,KAAK,MAAL,CAAY,IAAZ,CAAiB,yEAAA,CAAA,sBAAA,CAAjB,EAAuC;AACvD,YAAA,KAAK,EAAE,OADgD;AAEvD,YAAA,IAAI,EAAE;AAAC,cAAA,OAAO,EAAE,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAxB,CAAV;AAA2C,cAAA,aAAa,EAAE,KAAK,OAAL,CAAa;AAAvE;AAFiD,WAAvC,CAAlB;AAKA,UAAA,SAAS,CAAC,WAAV,GAAwB,SAAxB,CAAkC,UAAA,OAAO,EAAG;AAC1C,gBAAG,OAAH,EAAW;AACT;AACA,cAAA,OAAI,CAAC,cAAL,GAAsB,0BAAtB;AACA,cAAA,OAAI,CAAC,SAAL,GAAiB,IAAjB;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,aAAd,CAA4B;AAAC,gBAAA,OAAO,EAAP;AAAD,eAA5B,EAAsC,OAAI,CAAC,OAAL,CAAa,GAAnD,EAAwD,SAAxD,CACE,UAAA,MAAM,EAAG;AACP,oBAAG,MAAM,CAAC,OAAP,IAAkB,SAArB,EAA+B;AAC7B,sBAAI,cAAc,GAAW,EAA7B;AACA,kBAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,OAAvB,CAA+B,UAAA,EAAE,EAAG;AAClC,oBAAA,OAAO,CAAC,GAAR,CAAY,EAAZ;AACA,oBAAA,cAAc,CAAC,IAAf,CAAoB,OAAI,CAAC,YAAL,CAAkB,OAAI,CAAC,QAAL,CAAc,SAAd,CAAwB,EAAxB,CAAlB,CAApB;AACD,mBAHD;AAIA,kBAAA,OAAI,CAAC,OAAL,CAAa,OAAb,GAAuB,cAAvB;AACA,kBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,kBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,iCAApB,EAAsD,WAAtD,EAAkE;AAAC,oBAAA,QAAQ,EAAE;AAAX,mBAAlE;;AACA,kBAAA,OAAI,CAAC,QAAL,CAAc,kBAAd,CAAiC,IAAjC;;AACA,kBAAA,OAAI,CAAC,QAAL,CAAc,iBAAd,CAAgC,IAAhC;AACD;AACF,eAdH,EAcI,UAAA,KAAK,EAAG;AACR,gBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,gBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,uBAApB,EAA4C,WAA5C,EAAwD;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAAxD;AACD,eAjBH;AAmBD;AACF,WAzBD;AA0BD;AA/FH;AAAA;AAAA,qCAiGe,MAjGf,EAiG2B;AACvB,iBAAO;AACL,YAAA,IAAI,EAAE,MAAM,CAAC,IADR;AAEL,YAAA,GAAG,EAAE,MAAM,CAAC,GAFP;AAGL,YAAA,KAAK,EAAE,MAAM,CAAC;AAHT,WAAP;AAKD;AAED;;;;AAzGF;AAAA;AAAA,yCA6GgB;AAAA;;AACZ,cAAM,SAAS,GAAG,KAAK,MAAL,CAAY,IAAZ,CAAiB,+EAAA,CAAA,yBAAA,CAAjB,EAA0C;AAC1D,YAAA,KAAK,EAAE,OADmD;AAE1D,YAAA,IAAI,EAAE;AAAC,cAAA,SAAS,EAAE,EAAZ;AAAe,cAAA,IAAI,EAAE;AAArB;AAFoD,WAA1C,CAAlB;AAKA,UAAA,SAAS,CAAC,WAAV,GAAwB,SAAxB,CAAkC,UAAA,MAAM,EAAG;AACzC,gBAAG,MAAH,EAAU;AACR;AACA,cAAA,OAAI,CAAC,cAAL,GAAsB,0BAAtB;AACA,cAAA,OAAI,CAAC,SAAL,GAAiB,IAAjB;AACA,kBAAI,SAAS,GAAY,QAAQ,CAAC,MAAD,CAAjC;;AACA,kBAAG,SAAS,IAAI,OAAI,CAAC,eAAL,CAAqB,KAArC,EAA2C;AACzC,gBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;AACA,uBAAO,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,mGAApB,EAAwH,WAAxH,EAAoI;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAApI,CAAP;AACD;;AACD,kBAAI,OAAO,GAAG;AACZ,gBAAA,OAAO,EAAC;AACN,kBAAA,KAAK,EAAE,SADD;AAEN,kBAAA,IAAI,EAAE,IAAI,IAAJ;AAFA;AADI,eAAd;;AAMA,cAAA,OAAI,CAAC,QAAL,CAAc,aAAd,CAA4B,OAA5B,EAAoC,OAAI,CAAC,OAAL,CAAa,GAAjD,EAAsD,SAAtD,CACE,UAAA,MAAM,EAAG;AACP,gBAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;;AACA,oBAAG,MAAM,CAAC,OAAP,IAAkB,SAArB,EAA+B;AAC7B,kBAAA,OAAI,CAAC,eAAL,CAAqB,KAArB,GAA6B,SAA7B;AACA,kBAAA,OAAI,CAAC,OAAL,CAAa,OAAb,GAAuB,MAAM,CAAC,OAAP,CAAe,OAAtC;;AACA,kBAAA,OAAI,CAAC,KAAL,CAAW,CAAX,EAAc,MAAd,CAAqB,IAArB,CAA0B,OAAO,CAAC,OAAlC;;AACA,kBAAA,OAAI,CAAC,QAAL,CAAc,kBAAd,CAAiC,IAAjC;;AACA,kBAAA,OAAI,CAAC,iBAAL;;AACA,kBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,kBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,kCAApB,EAAuD,WAAvD,EAAmE;AAAC,oBAAA,QAAQ,EAAE;AAAX,mBAAnE;AACD;AACF,eAZH,EAYI,UAAA,KAAK,EAAG;AACR,gBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,gBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,gDAApB,EAAqE,WAArE,EAAiF;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAAjF;AACD,eAfH;AAiBD;AACF,WAlCD;AAmCD;AAtJH;AAAA;AAAA,uCAwJc;AAAA;;AACV,cAAM,SAAS,GAAG,KAAK,MAAL,CAAY,IAAZ,CAAiB,+EAAA,CAAA,yBAAA,CAAjB,EAA0C;AAC1D,YAAA,KAAK,EAAE,OADmD;AAE1D,YAAA,IAAI,EAAE;AAAC,cAAA,KAAK,EAAE,EAAR;AAAW,cAAA,IAAI,EAAE;AAAjB;AAFoD,WAA1C,CAAlB;AAKA,UAAA,SAAS,CAAC,WAAV,GAAwB,SAAxB,CAAkC,UAAA,MAAM,EAAG;AACzC,gBAAG,MAAH,EAAU;AACR;AACA,cAAA,OAAI,CAAC,cAAL,GAAsB,0BAAtB;AACA,cAAA,OAAI,CAAC,SAAL,GAAiB,IAAjB;AACA,kBAAI,SAAS,GAAY,QAAQ,CAAC,MAAD,CAAjC;AACA,kBAAI,IAAI,GAAG;AAAE,gBAAA,SAAS,EAAT;AAAF,eAAX;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,aAAd,CAA4B,IAA5B,EAAiC,OAAI,CAAC,OAAL,CAAa,GAA9C,EAAmD,SAAnD,CACE,UAAA,SAAS,EAAG;AACV,oBAAG,SAAS,CAAC,OAAV,IAAqB,SAAxB,EAAkC;AAChC,kBAAA,OAAI,CAAC,OAAL,CAAa,OAAb,CAAqB,WAArB,GAAmC,MAAnC;;AACA,kBAAA,OAAI,CAAC,KAAL,CAAW,CAAX,EAAc,MAAd,CAAqB,GAArB;;AACA,kBAAA,OAAI,CAAC,KAAL,CAAW,CAAX,EAAc,MAAd,CAAqB,IAArB,CAA0B;AAAC,oBAAA,KAAK,EAAE,MAAR;AAAgB,oBAAA,IAAI,EAAE,IAAI,IAAJ;AAAtB,mBAA1B;;AACA,kBAAA,OAAI,CAAC,QAAL,CAAc,kBAAd,CAAiC,IAAjC;;AACA,kBAAA,OAAI,CAAC,iBAAL;;AACA,kBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,kBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,kCAApB,EAAuD,WAAvD,EAAmE;AAAC,oBAAA,QAAQ,EAAE;AAAX,mBAAnE;AACD;AACF,eAXH,EAWI,UAAA,KAAK,EAAG;AACR,gBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,gBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,gDAApB,EAAqE,WAArE,EAAiF;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAAjF;AACD,eAdH;AAgBD;AACF,WAxBD;AAyBD;AAED;;;;AAzLF;AAAA;AAAA,4CA6LqB;AACf,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,OAAL,CAAa,OAAzB;AACA,eAAK,KAAL,GAAa,IAAb;AACA,eAAK,KAAL,GAAa,CACX;AACE,YAAA,IAAI,EAAE,aADR;AAEE,YAAA,MAAM,EAAE,CAAC;AACL,cAAA,IAAI,EAAE,IAAI,IAAJ,CAAS,KAAK,OAAL,CAAa,UAAtB,CADD;AAEL,cAAA,KAAK,EAAE,KAAK,OAAL,CAAa,OAAb,CAAqB;AAFvB,aAAD,EAIN;AACE,cAAA,IAAI,EAAE,IAAI,IAAJ,EADR;AAEE,cAAA,KAAK,EAAE,KAAK,OAAL,CAAa,OAAb,CAAqB;AAF9B,aAJM;AAFV,WADW,EAYX;AACE,YAAA,IAAI,EAAE,WADR;AAEE,YAAA,MAAM,EAAE,CAAC;AAAC,cAAA,IAAI,EAAE,IAAI,IAAJ,CAAS,KAAK,OAAL,CAAa,UAAtB,CAAP;AAAyC,cAAA,KAAK,EAAE,KAAK,OAAL,CAAa,OAAb,CAAqB,SAArB,CAA+B,CAA/B,EAAkC;AAAlF,aAAD;AAFV,WAZW,CAAb;;AAiBA,eAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,KAAK,OAAL,CAAa,OAAb,CAAqB,SAArB,CAA+B,MAAlD,EAA0D,CAAC,EAA3D,EAA8D;AAC5D,gBAAG,CAAH,EAAM,KAAK,KAAL,CAAW,CAAX,EAAc,MAAd,CAAqB,IAArB,CAA0B,KAAK,YAAL,CAAkB,KAAK,OAAL,CAAa,OAAb,CAAqB,SAArB,CAA+B,CAA/B,EAAkC,IAApD,EAAyD,KAAK,OAAL,CAAa,OAAb,CAAqB,SAArB,CAA+B,CAA/B,EAAkC,KAA3F,CAA1B;AACP;;AAED,eAAK,KAAL,CAAW,CAAX,EAAc,MAAd,CAAqB,IAArB,CAA0B;AACxB,YAAA,IAAI,EAAE,IAAI,IAAJ,EADkB;AAExB,YAAA,KAAK,EAAE,KAAK,eAAL,CAAqB;AAFJ,WAA1B;AAIA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;AAED;AA3NL;AAAA;AAAA,qCA6NiB,IA7NjB,EA6NgC,KA7NhC,EA6N8C;AACxC,iBAAO;AACL,YAAA,IAAI,EAAE,IAAI,IAAJ,CAAS,IAAT,CADD;AAEL,YAAA,KAAK,EAAL;AAFK,WAAP;AAID;AAlOL;AAAA;AAAA,iCAyPa,IAzPb,EAyPiB;AACX,UAAA,OAAO,CAAC,GAAR,CAAY,cAAZ,EAA4B,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,IAAf,CAAX,CAA5B;AACD;AA3PL;AAAA;AAAA,mCA6Pe,IA7Pf,EA6PmB;AACb,UAAA,OAAO,CAAC,GAAR,CAAY,UAAZ,EAAwB,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,IAAf,CAAX,CAAxB;AACD;AA/PL;AAAA;AAAA,qCAiQiB,IAjQjB,EAiQqB;AACf,UAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,IAAf,CAAX,CAA1B;AACD;AAnQL;;AAAA;AAAA,OAAA;;;;cAqCiC,wDAAA,CAAA,iBAAA;;cACO,4CAAA,CAAA,gBAAA;;cACP,wDAAA,CAAA,aAAA;;cACF,qDAAA,CAAA,WAAA;;;;AAxClB,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,kBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,0HAAA,CAAA,EAAA;AAFS,KAAV,CAIgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNb,QAAa,iBAAb,GAME,2BAAqB,QAArB,EAA+C;AAAA;;AAAA;;AAA1B,WAAA,QAAA,GAAA,QAAA;AAJrB,WAAA,QAAA,GAAoB,YAAY,CAAC,OAAb,CAAqB,UAArB,CAApB;AAEA,WAAA,QAAA,GAAmB,EAAnB;;AAGE,UAAG,KAAK,QAAL,IAAiB,aAApB,EAAkC;AAChC,YAAI,cAAc,GAAW,KAAK,QAAL,CAAc,cAAd,EAA7B;;AACA,YAAI,YAAY,GAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,MAArB,CAAX,EAAyC,MAAzC,CAAgD,QAAnE;AACA,QAAA,YAAY,CAAC,OAAb,CAAqB,UAAA,OAAO,EAAG;AAC7B,UAAA,cAAc,CAAC,OAAf,CAAuB,UAAA,UAAU,EAAG;AAClC,gBAAG,UAAU,CAAC,GAAX,IAAkB,OAArB,EAA8B,OAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,UAAnB;AAC/B,WAFD;AAGD,SAJD;AAKD,OARD,MAQM,KAAK,QAAL,GAAiB,KAAK,QAAL,CAAc,cAAd,EAAjB;AACP,KAhBH;;;;cAMkC,wDAAA,CAAA,iBAAA;;;;AANrB,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ7B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,cADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kHAAA,CAAA,EAAA;AAFS,KAAV,CAI6B,CAAA,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAa,eAAb;AAAA;AAAA;AA+BE,+BAAoB,QAApB,EAA8C;AAAA;;AAAA;;AAA1B,aAAA,QAAA,GAAA,QAAA;AA5BpB,aAAA,QAAA,GAAmB,EAAnB;AAcA,aAAA,MAAA,GAAkB,MAAlB;AAeE,aAAK,QAAL,GAAgB,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAhB;;AACA,YAAG,KAAK,QAAL,IAAiB,aAApB,EAAkC;AAChC,cAAI,cAAc,GAAW,KAAK,QAAL,CAAc,cAAd,EAA7B;;AACA,cAAI,YAAY,GAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,MAArB,CAAX,EAAyC,MAAzC,CAAgD,QAAnE;AACA,UAAA,YAAY,CAAC,OAAb,CAAqB,UAAA,OAAO,EAAG;AAC7B,YAAA,cAAc,CAAC,OAAf,CAAuB,UAAA,UAAU,EAAG;AAClC,kBAAG,UAAU,CAAC,GAAX,IAAkB,OAArB,EAA8B,OAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,UAAnB;AAC/B,aAFD;AAGD,WAJD;AAKD,SARD,MAQM,KAAK,QAAL,GAAiB,KAAK,QAAL,CAAc,cAAd,EAAjB;AACP;;AA1CH;AAAA;AAAA,0CA4CoB,SA5CpB,EA4C6B;AACzB,eAAK,OAAL,GAAe,KAAK,QAAL,CAAc,MAAd,CAAqB,UAAA,OAAO;AAAA,mBAAI,OAAO,CAAC,GAAR,IAAe,SAAnB;AAAA,WAA5B,EAA0D,CAA1D,CAAf;AACA,eAAK,UAAL,GAAkB,KAAK,OAAL,CAAa,UAA/B;AACA,eAAK,cAAL,GAAsB,KAAK,OAAL,CAAa,OAAnC;AACA,eAAK,YAAL,GAAoB,KAAK,OAAL,CAAa,KAAjC;AACD;AAjDH;AAAA;AAAA,4CAmDsB,SAnDtB,EAmD+B;AAAA;;AAC3B,eAAK,qBAAL,GAA6B,KAA7B;AACA,eAAK,SAAL,GAAiB,KAAK,QAAL,CAAc,YAAd,CAA2B,SAA3B,CAAjB;AAEA,eAAK,gBAAL,GAAwB,EAAxB;AAEA,eAAK,cAAL,CAAoB,OAApB,CAA4B,UAAA,MAAM,EAAG;AACnC,gBAAG,MAAM,CAAC,OAAP,CAAe,SAAf,IAA4B,SAA/B,EAA0C,OAAI,CAAC,gBAAL,CAAsB,IAAtB,CAA2B,OAAI,CAAC,YAAL,CAAkB,IAAI,IAAJ,CAAS,MAAM,CAAC,MAAhB,CAAlB,CAA3B;AAC3C,WAFD;AAIA,eAAK,qBAAL,GAA6B,IAA7B;AACD;AA9DH;AAAA;AAAA,yCAgEmB,SAhEnB,EAgE4B;AAAA;;AACxB;;AACA;;;AAGA,UAAA,OAAO,CAAC,GAAR,CAAY,SAAZ;AACA,cAAG,SAAS,IAAI,MAAhB,EAAwB,OAAO,IAAP;AAExB,eAAK,MAAL,GAAc,SAAd;AAEA,cAAI,oBAAoB,GAAG,KAAK,cAAL,CAAoB,MAApB,CAA2B,UAAA,MAAM;AAAA,mBAAI,MAAM,CAAC,OAAP,CAAe,SAAf,IAA4B,OAAI,CAAC,iBAArC;AAAA,WAAjC,CAA3B;AACA,eAAK,MAAL,GAAc,oBAAoB,CAAC,MAArB,CAA4B,UAAA,MAAM;AAAA,mBAAI,OAAI,CAAC,YAAL,CAAkB,IAAI,IAAJ,CAAS,MAAM,CAAC,MAAhB,CAAlB,KAA8C,SAAlD;AAAA,WAAlC,EAA+F,CAA/F,CAAd;AAEA,eAAK,cAAL,GAAsB,KAAK,YAAL,CAAkB,MAAlB,CAAyB,UAAA,SAAS;AAAA,mBAAI,SAAS,CAAC,EAAV,IAAgB,OAAI,CAAC,iBAAzB;AAAA,WAAlC,EAA8E,CAA9E,CAAtB;AACA,eAAK,6BAAL;AAEA,eAAK,MAAL,GAAc,OAAd;AACD;AAjFH;AAAA;AAAA,wDAmF+B;AAAA;;AAC3B,eAAK,eAAL,GAAuB,EAAvB;AACA,eAAK,cAAL,GAAsB,EAAtB;AACA,eAAK,SAAL,GAAiB,EAAjB;AAEA,cAAG,KAAK,SAAL,CAAe,IAAf,IAAuB,QAA1B,EAAoC,KAApC,KACK;AACH,iBAAK,WAAL,GAAmB;AACjB,cAAA,WAAW,EAAE,KAAK,OAAL,CAAa,IADT;AAEjB,cAAA,OAAO,EAAE,KAAK,MAAL,CAAY,UAFJ;AAGjB,cAAA,MAAM,EAAE;AAHS,aAAnB;AAMA,iBAAK,OAAL,CAAa,aAAb,CAA2B,OAA3B,CAAmC,UAAC,YAAD,EAAc,CAAd,EAAmB;AAEpD;;;AAGA,cAAA,OAAI,CAAC,WAAL,CAAiB,MAAjB,CAAwB,IAAxB,CAA6B;AAC3B,gBAAA,IAAI,EAAE,YAAY,CAAC,IADQ;AAE3B,gBAAA,MAAM,EAAE;AAFmB,eAA7B;;AAIA,cAAA,OAAI,CAAC,MAAL,CAAY,OAAZ,CAAoB,IAApB,CAAyB,CAAzB,EAA4B,MAA5B,CAAmC,OAAnC,CAA2C,UAAA,KAAK;AAAA,uBAAI,OAAI,CAAC,WAAL,CAAiB,MAAjB,CAAwB,CAAxB,EAA2B,MAA3B,CAAkC,IAAlC,CAAuC,KAAvC,CAAJ;AAAA,eAAhD;AAEA;;;;;AAGA,kBAAI,UAAU,GAAG,OAAI,CAAC,SAAL,CAAe,iBAAhC;;AAEA,cAAA,OAAI,CAAC,eAAL,CAAqB,IAArB,CAA0B;AACxB,gBAAA,IAAI,EAAE,YAAY,CAAC,IADK;AAExB,gBAAA,UAAU,EAAC;AAFa,eAA1B;;AAKA,cAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,SAAD,EAAW,CAAX,EAAgB;AACjC;AACA,gBAAA,OAAI,CAAC,eAAL,CAAqB,CAArB,EAAwB,UAAxB,CAAmC,IAAnC,CAAwC;AACtC,kBAAA,KAAK,EAAE,OAAI,CAAC,kBAAL,CAAwB,SAAS,CAAC,UAAlC,EAA6C,OAAI,CAAC,WAAL,CAAiB,MAAjB,CAAwB,CAAxB,EAA2B,MAAxE,CAD+B;AAEtC,kBAAA,UAAU,EAAE,OAAI,CAAC,gBAAL,CAAsB,SAAS,CAAC,UAAhC,CAF0B;AAGtC,kBAAA,IAAI,EAAE,SAAS,CAAC,IAHsB;AAItC,kBAAA,MAAM,EAAE,SAAS,CAAC,MAJoB;AAKtC,kBAAA,IAAI,EAAE,SAAS,CAAC;AALsB,iBAAxC;AAOD,eATD;AAWA;;;;AAGA,cAAA,OAAI,CAAC,cAAL,CAAoB,IAApB,CAAyB;AACvB,gBAAA,IAAI,EAAE,YAAY,CAAC,IADI;AAEvB,gBAAA,QAAQ,EAAE,EAFa;AAGvB,gBAAA,UAAU,EAAE,EAHW;AAIvB,gBAAA,qBAAqB,EAAE;AAJA,eAAzB;;AAMA,cAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,SAAD,EAAW,CAAX,EAAgB;AACjC;AACA,gBAAA,OAAI,CAAC,cAAL,CAAoB,CAApB,EAAuB,QAAvB,CAAgC,IAAhC,CAAqC;AACnC,kBAAA,QAAQ,EAAE,OAAI,CAAC,cAAL,CAAoB,aAApB,CAAkC,CAAlC,EAAqC,UAArC,CAAgD,CAAhD,EAAmD,QAD1B;AAEnC,kBAAA,IAAI,EAAE,OAAI,CAAC,cAAL,CAAoB,aAApB,CAAkC,CAAlC,EAAqC,UAArC,CAAgD,CAAhD,EAAmD;AAFtB,iBAArC,EAFiC,CAMjC;;;AACA,gBAAA,OAAI,CAAC,cAAL,CAAoB,CAApB,EAAuB,UAAvB,CAAkC,IAAlC,CAAuC;AACrC,kBAAA,WAAW,EAAE,OAAI,CAAC,iBAAL,CAAuB,OAAI,CAAC,eAAL,CAAqB,CAArB,EAAwB,UAAxB,CAAmC,CAAnC,EAAsC,KAA7D,EAAmE,SAAS,CAAC,QAA7E,EAAsF,OAAI,CAAC,cAAL,CAAoB,CAApB,EAAuB,QAAvB,CAAgC,CAAhC,EAAmC,IAAzH,EAA8H,YAAY,CAAC,OAA3I,EAAmJ,OAAI,CAAC,SAAL,CAAe,cAAlK;AADwB,iBAAvC,EAPiC,CAUjC;;;AACA,gBAAA,OAAI,CAAC,cAAL,CAAoB,CAApB,EAAuB,qBAAvB,IAAgD,OAAI,CAAC,cAAL,CAAoB,CAApB,EAAuB,UAAvB,CAAkC,CAAlC,EAAqC,WAArC,CAAiD,MAAjG;AACD,eAZD;AAcA;;;;AAGA,cAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB;AAClB,gBAAA,IAAI,EAAE,YAAY,CAAC,IADD;AAElB,gBAAA,KAAK,EAAE;AAFW,eAApB;;AAIA,cAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,SAAD,EAAW,CAAX,EAAgB;AACjC,gBAAA,OAAO,CAAC,GAAR,CAAY,OAAI,CAAC,SAAjB;;AACA,gBAAA,OAAI,CAAC,SAAL,CAAe,CAAf,EAAkB,KAAlB,CAAwB,IAAxB,CAA6B;AAC3B,kBAAA,IAAI,EAAE,SAAS,CAAC,IADW;AAE3B,kBAAA,MAAM,EAAE,CACN;AACE,oBAAA,IAAI,EAAE,MADR;AAEE,oBAAA,KAAK,EAAE,OAAI,CAAC,cAAL,CAAoB,CAApB,EAAuB,UAAvB,CAAkC,CAAlC,EAAqC,WAArC,CAAiD;AAF1D,mBADM,EAKN;AACE,oBAAA,IAAI,EAAE,cADR;AAEE,oBAAA,KAAK,EAAE,OAAI,CAAC,cAAL,CAAoB,CAApB,EAAuB,UAAvB,CAAkC,CAAlC,EAAqC,WAArC,CAAiD;AAF1D,mBALM;AAFmB,iBAA7B;AAaD,eAfD;AAiBD,aA/ED;AAiFA,gBAAI,IAAI,GAAS;AACf,cAAA,MAAM,EAAE;AADO,aAAjB;AAIA,iBAAK,OAAL,CAAa,aAAb,CAA2B,OAA3B,CAAmC,UAAC,YAAD,EAAc,CAAd,EAAmB;AACpD,cAAA,IAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB;AACf,gBAAA,IAAI,EAAE,YAAY,CAAC,IADJ;AAEf,gBAAA,KAAK,EAAE,OAAI,CAAC,cAAL,CAAoB,CAApB,EAAuB;AAFf,eAAjB;AAID,aALD;AAOA,iBAAK,SAAL,CAAe,IAAf,CAAoB,IAApB;AAED;AAEF;AAhMH;AAAA;AAAA,0CAkMoB,KAlMpB,EAkMoC,QAlMpC,EAkMoD,IAlMpD,EAkMmE,OAlMnE,EAkMsF,IAlMtF,EAkMoG;AAChG,cAAI,UAAU,GAAS;AAAC,YAAA,MAAM,EAAE,CAAT;AAAY,YAAA,WAAW,EAAE;AAAzB,WAAvB;;AACA,cAAG,IAAH,EAAQ;AAAK;AACX,gBAAG,OAAH,EAAW;AAAE;AACX,cAAA,UAAU,CAAC,WAAX,GAAyB,QAAQ,CAAC,CAAD,CAAR,CAAY,KAArC;AACA,cAAA,UAAU,CAAC,MAAX,GAAoB,QAAQ,CAAC,KAAD,CAAR,GAAkB,QAAQ,CAAC,CAAD,CAAR,CAAY,KAA9B,GAAsC,QAAQ,CAAC,IAAD,CAAlE;AACD,aAHD,MAGK;AAAQ;AACX,cAAA,UAAU,CAAC,WAAX,GAAyB,QAAQ,CAAC,CAAD,CAAR,CAAY,KAArC;AACA,cAAA,UAAU,CAAC,MAAX,GAAoB,QAAQ,CAAC,KAAD,CAAR,GAAkB,QAAQ,CAAC,CAAD,CAAR,CAAY,KAA9B,GAAsC,QAAQ,CAAC,IAAD,CAAlE;AACD;AACF,WARD,MAQK;AAAQ;AACX,YAAA,UAAU,CAAC,WAAX,GAAyB,QAAQ,CAAC,CAAD,CAAR,CAAY,MAArC;AACA,YAAA,UAAU,CAAC,MAAX,GAAoB,QAAQ,CAAC,KAAD,CAAR,GAAkB,QAAQ,CAAC,CAAD,CAAR,CAAY,MAA9B,GAAuC,QAAQ,CAAC,IAAD,CAAnE;AACD;;AACD,iBAAO,UAAP;AACD;AAjNH;AAAA;AAAA,yCAmNmB,UAnNnB,EAmNwC;AACpC,cAAI,MAAM,GAAG,EAAb;AACA,UAAA,UAAU,CAAC,OAAX,CAAmB,UAAA,QAAQ,EAAG;AAC5B,gBAAG,QAAQ,IAAI,GAAZ,IAAmB,QAAQ,IAAI,GAA/B,IAAsC,QAAQ,IAAI,GAAlD,IAAyD,QAAQ,IAAI,GAAxE,EAA6E,MAAM,eAAQ,QAAR,MAAN,CAA7E,KACK,MAAM,IAAI,QAAV;AACN,WAHD;AAIA,iBAAO,MAAP;AACD;AA1NH;AAAA;AAAA,2CA4NqB,UA5NrB,EA4N2C,MA5N3C,EA4NyD;AACrD,cAAI,UAAU,GAAY,EAA1B;AACA,UAAA,UAAU,CAAC,OAAX,CAAmB,UAAA,QAAQ,EAAG;AAC5B,gBAAG,QAAQ,IAAI,GAAZ,IAAmB,QAAQ,IAAI,GAA/B,IAAsC,QAAQ,IAAI,GAAlD,IAAyD,QAAQ,IAAI,GAArE,IAA4E,QAAQ,IAAI,GAAxF,IAA+F,QAAQ,IAAI,GAA3G,IAAkH,QAAQ,IAAI,OAAjI,EAAyI;AACvI,kBAAG,QAAQ,IAAI,OAAf,EAAwB,UAAU,IAAI,MAAd,CAAxB,KACK,UAAU,IAAI,QAAd;AACN,aAHD,MAGK;AACH,cAAA,UAAU,IAAK,MAAM,CAAC,MAAP,CAAc,UAAA,KAAK;AAAA,uBAAI,QAAQ,IAAI,KAAK,CAAC,IAAtB;AAAA,eAAnB,EAA+C,CAA/C,CAAD,CAAoD,KAAlE;AACD;AACF,WAPD;AAQA,iBAAO,IAAI,CAAC,UAAD,CAAJ,CAAiB,OAAjB,CAAyB,CAAzB,CAAP;AACD;AAvOH;AAAA;AAAA,qCAyOe,KAzOf,EAyO2B;AACvB,2BAAU,KAAK,QAAL,CAAc,QAAd,CAAuB,KAAK,CAAC,QAAN,EAAvB,CAAV,cAAsD,KAAK,CAAC,WAAN,EAAtD;AACD;AA3OH;;AAAA;AAAA,OAAA;;;;cA+BiC,wDAAA,CAAA,iBAAA;;;;AA/BpB,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4GAAA,CAAA,EAAA;AAFS,KAAV,CAI2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAa,wBAAb;AAAA;AAAA;AAmBE,wCAAmB,QAAnB,EAA6C;AAAA;;AAA1B,aAAA,QAAA,GAAA,QAAA;AANnB,aAAA,YAAA,GAAqB;AACnB,UAAA,MAAM,EAAE,EADW;AAEnB,UAAA,OAAO,EAAE,EAFU;AAGnB,UAAA,WAAW,EAAE;AAHM,SAArB;AA+BA;;AACA,aAAA,IAAA,GAAc,CAAC,GAAD,EAAM,GAAN,CAAd,CA1B6C,CA4B7C;;AACA,aAAA,SAAA,GAAqB,IAArB;AACA,aAAA,SAAA,GAAqB,IAArB;AACA,aAAA,QAAA,GAAoB,IAApB;AACA,aAAA,UAAA,GAAsB,IAAtB;AACA,aAAA,cAAA,GAA0B,IAA1B;AACA,aAAA,UAAA,GAAqB,YAArB;AACA,aAAA,cAAA,GAA0B,IAA1B;AACA,aAAA,UAAA,GAAqB,aAArB;AACA,aAAA,WAAA,GAAsB,SAAtB;AAEA,aAAA,cAAA,GAAyB,gBAAzB;AACA,aAAA,cAAA,GAAyB,iBAAzB;AAEA,aAAA,WAAA,GAAc;AACZ,UAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB;AADI,SAAd;AA1CkD;;AAnBpD;AAAA;AAAA,mCAqBU;AACN,eAAK,OAAL,GAAe,KAAK,QAAL,CAAc,OAAd,CAAsB,KAAK,WAAL,CAAiB,OAAvC,CAAf;AACA,eAAK,qBAAL,GAFM,CAIN;AACD;AA1BH;AAAA;AAAA,gDA4BuB;AACnB,cAAI,OAAO,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAwB,UAAA,YAAY;AAAA,mBAAI,YAAY,CAAC,qBAAjB;AAAA,WAApC,CAAd;AACA,cAAI,SAAS,GAAG,CAAhB;AACA,UAAA,OAAO,CAAC,OAAR,CAAgB,UAAA,KAAK;AAAA,mBAAI,SAAS,IAAI,KAAjB;AAAA,WAArB;AACA,eAAK,QAAL,GAAgB,SAAS,GAAG,OAAO,CAAC,MAApC;AACA,eAAK,YAAL,GAAoB,KAAK,eAAL,EAApB;AACD;AAlCH;AAAA;AAAA,0CAoCiB;AACb,cAAG,KAAK,QAAL,IAAiB,EAApB,EAAwB,OAAO;AAAC,YAAA,MAAM,EAAE,GAAT;AAAa,YAAA,OAAO,EAAC,SAArB;AAA+B,YAAA,WAAW,EAAC;AAA3C,WAAP,CAAxB,KACK,IAAG,KAAK,QAAL,GAAgB,EAAhB,IAAsB,KAAK,QAAL,IAAiB,EAA1C,EAA8C,OAAO;AAAC,YAAA,MAAM,EAAE,GAAT;AAAa,YAAA,OAAO,EAAC,QAArB;AAA8B,YAAA,WAAW,EAAC;AAA1C,WAAP,CAA9C,KACA,IAAG,KAAK,QAAL,GAAgB,EAAhB,IAAsB,KAAK,QAAL,IAAiB,EAA1C,EAA8C,OAAO;AAAC,YAAA,MAAM,EAAE,GAAT;AAAa,YAAA,OAAO,EAAC,gBAArB;AAAsC,YAAA,WAAW,EAAC;AAAlD,WAAP,CAA9C,KACA,IAAG,KAAK,QAAL,GAAgB,EAAhB,IAAsB,KAAK,QAAL,IAAiB,EAA1C,EAA8C,OAAO;AAAC,YAAA,MAAM,EAAE,GAAT;AAAa,YAAA,OAAO,EAAC,aAArB;AAAmC,YAAA,WAAW,EAAC;AAA/C,WAAP,CAA9C,KACA,IAAG,KAAK,QAAL,GAAgB,EAAnB,EAAuB,OAAO;AAAC,YAAA,MAAM,EAAE,GAAT;AAAa,YAAA,OAAO,EAAC,iBAArB;AAAuC,YAAA,WAAW,EAAC;AAAnD,WAAP;AAC7B;AA1CH;AAAA;AAAA,iCAiEU,IAjEV,EAiEc;AACV,UAAA,OAAO,CAAC,GAAR,CAAY,cAAZ,EAA4B,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,IAAf,CAAX,CAA5B;AACD;AAnEH;AAAA;AAAA,mCAqEa,IArEb,EAqEiB;AACb,UAAA,OAAO,CAAC,GAAR,CAAY,UAAZ,EAAwB,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,IAAf,CAAX,CAAxB;AACD;AAvEH;AAAA;AAAA,qCAyEe,IAzEf,EAyEmB;AACf,UAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,IAAf,CAAX,CAA1B;AACD;AA3EH;;AAAA;AAAA,OAAA;;;;cAmBgC,wDAAA,CAAA,iBAAA;;;;AAjBrB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,kCAAA,E,aAAA,E,KAAkB,CAAlB;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,kCAAA,E,iBAAA,E,KAAsB,CAAtB;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,kCAAA,E,gBAAA,E,KAAqB,CAArB;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,kCAAA,E,WAAA,E,KAAgB,CAAhB;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,kCAAA,E,SAAA,E,KAAc,CAAd;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,kCAAA,E,QAAA,E,KAAgB,CAAhB;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,kCAAA,E,WAAA,E,KAAkB,CAAlB;AARE,IAAA,wBAAwB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJpC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,uBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kIAAA,CAAA,EAAA;AAFS,KAAV,CAIoC,CAAA,EAAxB,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEb,QAAa,iBAAb;AAAA;AAAA;AAUE,iCAAoB,QAApB,EACoB,SADpB,EAC2C;AAAA;;AADvB,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,SAAA,GAAA,SAAA;AARpB,aAAA,UAAA,GAAsB,EAAtB;AAIA,aAAA,SAAA,GAAsB,KAAtB;AAKE,aAAK,QAAL,GAAgB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC5B,UAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,EAA2C,KAAK,QAAL,CAAc,SAAzD,CAAnB,CADkB;AAE5B,UAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CAFsB;AAG5B,UAAA,UAAU,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CAHgB;AAI5B,UAAA,KAAK,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,EAA2C,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,oEAAX,CAAnB,CAA3C,CAAnB,CAJqB;AAK5B,UAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAnB,CALkB;AAM5B,UAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,EAA2C,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,EAArB,CAA3C,CAAnB,CANkB;AAO5B,UAAA,MAAM,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,CAPoB;AAQ5B,UAAA,UAAU,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,CARgB;AAS5B,UAAA,IAAI,EAAC,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAnB;AATuB,SAAd,CAAhB;AAWA,aAAK,QAAL,CAAc,GAAd,CAAkB,YAAlB,EAAgC,aAAhC,CAA8C,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,EAA2C,KAAK,WAAL,CAAiB,KAAK,QAAL,CAAc,GAAd,CAAkB,UAAlB,CAAjB,CAA3C,CAA9C;AACA,aAAK,OAAL,GAAe,KAAK,QAAL,CAAc,aAAd,EAAf;AACD;;AAzBH;AAAA;AAAA,oCA2Bc,YA3Bd,EA2B2C;AACvC,iBAAO,UAAC,OAAD,EAAmD;AACxD,gBAAM,KAAK,GAAQ,OAAO,CAAC,KAA3B;AACA,gBAAM,UAAU,GAAQ,YAAY,CAAC,KAArC;AACA,mBAAO,UAAU,KAAK,KAAf,GAAuB,IAAvB,GAA8B;AAAE,0BAAY;AAAE,gBAAA,KAAK,EAAL,KAAF;AAAS,gBAAA,UAAU,EAAV;AAAT;AAAd,aAArC;AACD,WAJD;AAKD;AAjCH;AAAA;AAAA,qCAmCY;AAAA;;AACR,eAAK,cAAL,GAAsB,sBAAtB;AACA,eAAK,SAAL,GAAiB,IAAjB;AACA,cAAI,IAAI,GAAG,KAAK,QAAL,CAAc,KAAzB;AACA,iBAAO,IAAI,CAAC,UAAZ;AACA,cAAG,IAAI,CAAC,IAAL,IAAa,aAAb,IAA8B,CAAC,IAAI,CAAC,MAAvC,EAA+C,OAAO,KAAK,CAAC,qEAAD,CAAZ,CAA/C,KACK,IAAG,IAAI,CAAC,IAAL,IAAa,aAAhB,EAA+B,OAAO,IAAI,CAAC,MAAZ;;AACpC,eAAK,QAAL,CAAc,UAAd,CAAyB,IAAzB,EAA+B,SAA/B,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,SAArB,EAA+B;AAC7B,cAAA,OAAI,CAAC,QAAL,CAAc,eAAd,CAA8B,IAA9B;;AACA,cAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,mCAApB,EAAwD,WAAxD,EAAoE;AAAC,gBAAA,QAAQ,EAAE;AAAX,eAApE;AACD;AACF,WAPH,EAOI,UAAA,KAAK,EAAG;AACR,YAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,6CAApB,EAAkE,WAAlE,EAA8E;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA9E;AACD,WAVH;AAYD;AAtDH;;AAAA;AAAA,OAAA;;;;cAUiC,wDAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,aAAA;;;;AAXrB,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ7B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,eADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,iHAAA,CAAA,EAAA;AAFS,KAAV,CAI6B,CAAA,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAa,kBAAb;AAAA;AAAA;AAcE,kCAAoB,QAApB,EACoB,eADpB,EAEoB,SAFpB,EAGoB,MAHpB,EAGsC;AAAA;;AAAA;;AAHlB,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,MAAA,GAAA,MAAA;AAXpB,aAAA,QAAA,GAAqB,KAArB;AAEA,aAAA,OAAA,GAAkB,KAAK,QAAL,CAAc,aAAd,EAAlB;AAEA,aAAA,SAAA,GAAqB,KAArB;;AASE,aAAK,eAAL,CAAqB,MAArB,CAA4B,SAA5B,CACE,UAAC,MAAD,EAAoB;AAClB,UAAA,OAAI,CAAC,IAAL,GAAY,OAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,MAAM,CAAC,EAA7B,CAAZ;;AACA,UAAA,OAAI,CAAC,eAAL;AACD,SAJH;AAQD;;AA3BH;AAAA;AAAA,qCA6BY;AAAA;;AACR,eAAK,cAAL,GAAsB,yBAAtB;AACA,eAAK,SAAL,GAAiB,IAAjB;AACA,cAAI,IAAI,GAAG,KAAK,QAAL,CAAc,KAAzB;AACA,cAAG,IAAI,CAAC,IAAL,IAAa,aAAb,IAA8B,CAAC,IAAI,CAAC,MAAvC,EAA+C,OAAO,KAAK,CAAC,qEAAD,CAAZ,CAA/C,KACK,IAAG,IAAI,CAAC,IAAL,IAAa,aAAhB,EAA+B,OAAO,IAAI,CAAC,MAAZ;;AACpC,eAAK,QAAL,CAAc,UAAd,CAAyB,IAAzB,EAA8B,KAAK,IAAL,CAAU,GAAxC,EAA6C,SAA7C,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAkB,SAArB,EAA+B;AAC7B,cAAA,OAAI,CAAC,IAAL,GAAY,MAAM,CAAC,IAAnB;;AACA,cAAA,OAAI,CAAC,eAAL;;AACA,cAAA,OAAI,CAAC,QAAL,GAAgB,KAAhB;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,OAAd;;AACA,cAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,oCAApB,EAAyD,WAAzD,EAAqE;AAAC,gBAAA,QAAQ,EAAE;AAAX,eAArE;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,eAAd,CAA8B,IAA9B;AACD;AACF,WAXH,EAWI,UAAA,KAAK,EAAG;AACR,YAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,6CAApB,EAAkE,WAAlE,EAA8E;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA9E;AACD,WAdH;AAgBD;AAnDH;AAAA;AAAA,iCAqDQ;AACJ,cAAG,OAAO,CAAC,sEAAD,CAAV,EAAoF;AAClF,iBAAK,QAAL,GAAgB,KAAhB;AACA,iBAAK,eAAL;AACA,iBAAK,QAAL,CAAc,OAAd;AACD;AACF;AA3DH;AAAA;AAAA,0CA6DiB;AACb,cAAI,MAAM,GAAY,EAAtB;AACA,cAAG,KAAK,IAAL,CAAU,IAAV,IAAkB,aAArB,EAAoC,MAAM,GAAG,KAAK,IAAL,CAAU,MAAV,CAAiB,GAA1B;AACpC,eAAK,QAAL,GAAgB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC5B,YAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,cAAA,KAAK,EAAE,KAAK,IAAL,CAAU,QAAlB;AAA4B,cAAA,QAAQ,EAAE;AAAtC,aAAhB,EAA4D,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAA5D,CADkB;AAE5B,YAAA,IAAI,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,cAAA,KAAK,EAAE,KAAK,IAAL,CAAU,IAAlB;AAAwB,cAAA,QAAQ,EAAE;AAAlC,aAAhB,EAAwD,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAAxD,CAFsB;AAG5B,YAAA,UAAU,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,cAAA,KAAK,EAAE,KAAK,IAAL,CAAU,UAAlB;AAA8B,cAAA,QAAQ,EAAE;AAAxC,aAAhB,EAA8D,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAA9D,CAHgB;AAI5B,YAAA,KAAK,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,cAAA,KAAK,EAAE,KAAK,IAAL,CAAU,KAAlB;AAAyB,cAAA,QAAQ,EAAE;AAAnC,aAAhB,EAAyD,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,EAA2C,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,IAAI,MAAJ,CAAW,oEAAX,CAAnB,CAA3C,CAAzD,CAJqB;AAK5B,YAAA,QAAQ,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,cAAA,KAAK,EAAE,KAAK,IAAL,CAAU,QAAlB;AAA4B,cAAA,QAAQ,EAAE;AAAtC,aAAhB,EAA4D,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAqB,KAAK,QAAL,CAAc,OAAnC,CAA5D,CALkB;AAM5B,YAAA,IAAI,EAAC,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,cAAA,KAAK,EAAE,KAAK,IAAL,CAAU,IAAlB;AAAwB,cAAA,QAAQ,EAAE;AAAlC,aAAhB,EAAwD,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,CAAxD,CANuB;AAO5B,YAAA,MAAM,EAAE,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,cAAA,KAAK,EAAE,MAAR;AAAgB,cAAA,QAAQ,EAAE;AAA1B,aAAhB;AAPoB,WAAd,CAAhB;AASD;AAzEH;AAAA;AAAA,yCA2EgB;AACZ,eAAK,QAAL,GAAgB,IAAhB;AACA,eAAK,QAAL,CAAc,MAAd;AACD;AA9EH;AAAA;AAAA,8CAgFqB;AAAA;;AACjB,cAAM,SAAS,GAAG,KAAK,MAAL,CAAY,IAAZ,CAAiB,yEAAA,CAAA,sBAAA,CAAjB,EAAuC;AACvD,YAAA,KAAK,EAAE,OADgD;AAEvD,YAAA,IAAI,EAAE;AAAC,cAAA,QAAQ,EAAE;AAAX;AAFiD,WAAvC,CAAlB;AAKA,UAAA,SAAS,CAAC,WAAV,GAAwB,SAAxB,CAAkC,UAAA,SAAS,EAAG;AAC5C,gBAAG,SAAH,EAAa;AACX;AACA,cAAA,OAAI,CAAC,cAAL,GAAsB,0BAAtB;AACA,cAAA,OAAI,CAAC,SAAL,GAAiB,IAAjB;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB;AAAC,gBAAA,QAAQ,EAAE,SAAS,CAAC;AAArB,eAAzB,EAAwD,OAAI,CAAC,IAAL,CAAU,GAAlE,EAAuE,SAAvE,CACE,UAAA,MAAM,EAAG;AACP,gBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,gBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,wCAApB,EAA6D,WAA7D,EAAyE;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAAzE;AACD,eAJH,EAII,UAAA,KAAK,EAAG;AACR,gBAAA,OAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,gBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,4CAApB,EAAiE,WAAjE,EAA6E;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAA7E;AACD,eAPH;AASD;AACF,WAfD;AAgBD;AAtGH;;AAAA;AAAA,OAAA;;;;cAciC,wDAAA,CAAA,iBAAA;;cACO,4CAAA,CAAA,gBAAA;;cACN,wDAAA,CAAA,aAAA;;cACH,qDAAA,CAAA,WAAA;;;;AAjBlB,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,gBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,mHAAA,CAAA,EAAA;AAFS,KAAV,CAI8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLb,QAAa,cAAb;AAAA;AAAA;AAQE,8BAAoB,QAApB,EAA8C;AAAA;;AAA1B,aAAA,QAAA,GAAA,QAAA;AANpB,aAAA,MAAA,GAAkB,MAAlB;AACA,aAAA,WAAA,GAAuB,EAAvB;AAME,aAAK,KAAL,GAAa,KAAK,QAAL,CAAc,WAAd,EAAb;AACA,aAAK,YAAL,GAAoB,KAAK,KAAzB;AACD;;AAXH;AAAA;AAAA,uCAac;AAAA;;AACV,cAAG,CAAC,KAAK,WAAL,CAAiB,IAAjB,EAAJ,EAA6B,OAAO,KAAK,YAAL,GAAoB,KAAK,KAAhC;AAC7B,eAAK,YAAL,GAAoB,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAA,IAAI;AAAA,mBAAI,IAAI,CAAC,OAAI,CAAC,MAAN,CAAJ,CAAkB,WAAlB,GAAgC,QAAhC,CAAyC,OAAI,CAAC,WAAL,CAAiB,IAAjB,GAAwB,WAAxB,EAAzC,CAAJ;AAAA,WAAtB,CAApB;AACD;AAhBH;AAAA;AAAA,qCAkBe,IAlBf,EAkBmB;AAAA;;AACf,cAAG,CAAC,IAAJ,EAAU,OAAO,KAAK,YAAL,GAAoB,KAAK,KAAhC;AACV,eAAK,YAAL,GAAoB,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAA,IAAI;AAAA,mBAAI,IAAI,CAAC,OAAI,CAAC,MAAN,CAAJ,IAAqB,IAAzB;AAAA,WAAtB,CAApB;AACD;AArBH;;AAAA;AAAA,OAAA;;;;cAQiC,wDAAA,CAAA,iBAAA;;;;AARpB,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ1B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,WADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,yGAAA,CAAA,EAAA;AAFS,KAAV,CAI0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAa,oBAAb;AAAA;AAAA;AAJA,sCAAA;AAAA;;AAMY,aAAA,IAAA,GAA4B,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAA5B;AACA,aAAA,MAAA,GAA8B,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAA9B;AAaX;;AAhBD;AAAA;AAAA,iCAOQ;AACJ,eAAK,IAAL,CAAU,IAAV;AACD;AATH;AAAA;AAAA,iCAWW,EAXX,EAWa;AACT,UAAA,EAAE,CAAC,cAAH;AACA,eAAK,MAAL,CAAY,IAAZ;AACD;AAdH;;AAAA;AAAA,OAAA;;AAEY,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,8BAAA,E,MAAA,E,KAA+C,CAA/C;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,8BAAA,E,QAAA,E,KAAiD,CAAjD;AAED,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,8BAAA,E,YAAA,E,KAAqB,CAArB;AALE,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,kBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kHAAA,CAAA,EAAA;AAFS,KAAV,CAIgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEb,QAAa,oBAAb;AAAA;AAAA;AAIE,oCAAoB,OAApB,EAAoC;AAAA;;AAAhB,aAAA,OAAA,GAAA,OAAA;AAAqB;;AAJ3C;AAAA;AAAA,iCAMQ;AACJ,cAAG,OAAO,CAAC,kEAAD,CAAV,EAAgF,KAAK,OAAL,CAAa,QAAb,CAAsB,CAAC,QAAQ,CAAC,QAAT,CAAkB,QAAlB,CAA2B,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAD,CAAtB;AACjF;AARH;;AAAA;AAAA,OAAA;;;;cAIgC,4CAAA,CAAA,QAAA;;;;AAFrB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,8BAAA,E,WAAA,E,KAAsB,CAAtB;AAFE,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,kBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kHAAA,CAAA,EAAA;AAFS,KAAV,CAIgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,QAAa,oBAAb;AAAA;AAAA,KAAA;;AAEW,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,8BAAA,E,SAAA,E,KAAiB,CAAjB;AAFE,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,kBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kHAAA,CAAA,EAAA;AAFS,KAAV,CAIgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAa,eAAb;AAAA;AAAA;AAEE,iCAAA;AAAA;AAAiB;;AAFnB;AAAA;AAAA,mCAIU,CACP;AALH;;AAAA;AAAA,OAAA;;AAAa,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,sGAAA,CAAA,EAAA;AAFS,KAAV,CAI2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEb,QAAa,mBAAb;AAAA;AAAA;AAaE,mCAAoB,OAApB,EAAoC;AAAA;;AAAhB,aAAA,OAAA,GAAA,OAAA;AAJV,aAAA,SAAA,GAAgC,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAhC;AAKT;;AAdH;AAAA;AAAA,+BAgBM;AACF,cAAG,KAAK,aAAR,EAAsB;AACpB,gBAAG,OAAO,CAAC,kEAAD,CAAV,EAAgF,KAAK,OAAL,CAAa,QAAb,CAAsB,CAAC,QAAQ,CAAC,QAAT,CAAkB,QAAlB,CAA2B,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAD,CAAtB;AACjF,WAFD,MAEM,KAAK,OAAL,CAAa,QAAb,CAAsB,CAAC,QAAQ,CAAC,QAAT,CAAkB,QAAlB,CAA2B,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAD,CAAtB;AACP;AApBH;AAAA;AAAA,+BAsBM;AACF,eAAK,SAAL,CAAe,IAAf;AACD;AAxBH;AAAA;AAAA,mCA0BU;AACN,cAAG,KAAK,OAAL,IAAgB,KAAK,OAAL,CAAa,MAAhC,EAAwC,KAAK,mBAAL,GAA2B,KAAK,OAAhC,CAAxC,KACK,KAAK,mBAAL,GAA2B,EAA3B;AACN;AA7BH;;AAAA;AAAA,OAAA;;;;cAagC,4CAAA,CAAA,QAAA;;;;AAXrB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,6BAAA,E,OAAA,E,KAAe,CAAf;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,6BAAA,E,YAAA,E,KAAqB,CAArB;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,6BAAA,E,WAAA,E,KAAoB,CAApB;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,6BAAA,E,YAAA,E,KAAW,CAAX;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,6BAAA,E,SAAA,E,KAA0B,CAA1B;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,6BAAA,E,eAAA,E,KAAwB,CAAxB;AAEC,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,6BAAA,E,WAAA,E,KAAmD,CAAnD;AATC,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL/B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,gHAAA,CAAA,EAAA,OAFS;;AAAA,KAAV,CAK+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAa,kBAAb;AAAA;AAAA;AAqBE,kCAAoB,QAApB,EACoB,SADpB,EAC2C;AAAA;;AADvB,aAAA,QAAA,GAAA,QAAA;AACA,aAAA,SAAA,GAAA,SAAA;AAhBpB,aAAA,YAAA,GAAyB,KAAzB;AAEA,aAAA,eAAA,GAA4B,IAA5B;AAEA,aAAA,OAAA,GAAqB,EAArB;AAEA,aAAA,SAAA,GAAuB,IAAI,QAAJ,EAAvB;AAIA,aAAA,QAAA,GAAyB,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,QAA9B,CAAzB;AACA,aAAA,aAAA,GAA4B,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AACxC,UAAA,IAAI,EAAE,KAAK;AAD6B,SAAd,CAA5B;AAMc,YAAI,MAAM,GAAG,QAAQ,CAAC,QAAT,CAAkB,QAAlB,CAA2B,KAA3B,CAAiC,GAAjC,EAAsC,CAAtC,CAAb;AACA,aAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB;AACD;;AAzBf;AAAA;AAAA,mCA2BU;AACN,cAAG,KAAK,kBAAR,EAA2B;AACzB,iBAAK,KAAL,GAAa,KAAK,kBAAlB;AACA,iBAAK,KAAL,CAAW,OAAX,CAAmB,UAAA,IAAI;AAAA,qBAAI,IAAI,CAAC,MAAL,GAAc,QAAlB;AAAA,aAAvB;AACD,WAHD,MAIK,KAAK,KAAL,GAAa,EAAb;;AACL,eAAK,OAAL,CAAa,IAAb,CAAkB,KAAK,iBAAvB;AACD;AAED;;AApCF;AAAA;AAAA,qCAqCe,KArCf,EAqCoB;AAChB,cAAG,KAAK,CAAC,MAAN,CAAa,KAAb,IAAsB,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,MAAnB,GAA4B,CAArD,EAAuD;AAErD,iBAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,MAAtC,EAA8C,CAAC,EAA/C,EAAkD;AAChD,kBAAI,IAAI,GAAG,KAAK,CAAC,MAAN,CAAa,KAAb,CAAmB,CAAnB,CAAX;AACA,kBAAI,IAAI,GAAG,IAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,GAAhB,CAAX;AACA,mBAAK,KAAL,CAAW,IAAX,CAAgB;AACd,gBAAA,IAAI,EAAE,IAAI,CAAC,CAAD,CADI;AAEd,gBAAA,MAAM,EAAE,KAAK,iBAFC;AAGd,gBAAA,IAAI,EAAE,IAAI,CAAC,IAHG;AAId,gBAAA,GAAG,EAAE,IAAI,CAAC,CAAD,CAJK;AAKd,gBAAA,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,CAAD,CAAL,CALN;AAMd,gBAAA,WAAW,EAAE,aANC;AAOd,gBAAA,MAAM,EAAE,WAPM;AAQd,gBAAA,MAAM,EAAE,WAAW,CAAC,IAAI,CAAC,IAAN,CARL;AASd,gBAAA,OAAO,EAAE;AATK,eAAhB;AAWA,mBAAK,eAAL,GAAuB,KAAvB;AAED;AACF;AACF;AA1DH;AAAA;AAAA,mCA4Dc,KA5Dd,EA4D4B;AAAA;;AACxB,cAAG,KAAK,KAAL,CAAW,KAAX,EAAkB,MAAlB,IAA4B,QAA/B,EAAwC;AACtC,gBAAG,OAAO,CAAC,kHAAD,CAAV,EAA+H;AAC7H,mBAAK,QAAL,CAAc,UAAd,CAAyB,KAAK,KAAL,CAAW,KAAX,EAAkB,GAA3C,EAAgD,SAAhD,CACE,UAAA,MAAM,EAAG;AACP,oBAAG,MAAM,CAAC,OAAP,IAAkB,IAArB,EAA0B;AACxB,sBAAI,aAAa,GAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,aAAxB,CAApB;AACA,kBAAA,aAAa,CAAC,OAAd,CAAsB,UAAC,YAAD,EAAc,CAAd,EAAmB;AACvC,wBAAG,YAAY,CAAC,GAAb,IAAoB,MAAM,CAAC,eAA9B,EAA8C;AAC5C,sBAAA,aAAa,CAAC,MAAd,CAAqB,CAArB,EAAuB,CAAvB;AACA,sBAAA,aAAa,CAAC,IAAd,CAAmB,MAAM,CAAC,YAA1B;AACD;AACF,mBALD;AAMA,kBAAA,YAAY,CAAC,OAAb,CAAqB,eAArB,EAAqC,IAAI,CAAC,SAAL,CAAe,aAAf,CAArC;;AACA,kBAAA,OAAI,CAAC,KAAL,CAAW,MAAX,CAAkB,KAAlB,EAAwB,CAAxB;;AACA,kBAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,6BAApB,EAAkD,WAAlD,EAA8D;AAAC,oBAAA,QAAQ,EAAE;AAAX,mBAA9D;AACD;AACF,eAdH,EAeE,UAAA,KAAK;AAAA,uBAAI,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,+BAApB,EAAoD,WAApD,EAAgE;AAAC,kBAAA,QAAQ,EAAE;AAAX,iBAAhE,CAAJ;AAAA,eAfP;AAiBD;AACF,WApBD,MAoBM,KAAK,KAAL,CAAW,MAAX,CAAkB,KAAlB,EAAwB,CAAxB;AACP;AAlFH;AAAA;AAAA,sCAoFa;AAAA;;AACT,eAAK,SAAL,GAAiB,IAAI,QAAJ,EAAjB;AACA,cAAI,OAAO,GAAG,EAAd;AACA,eAAK,KAAL,CAAW,OAAX,CAAmB,UAAA,IAAI,EAAG;AACxB,gBAAG,IAAI,CAAC,MAAL,IAAe,WAAlB,EAA8B;AAC5B,kBAAI,IAAI,aAAM,IAAI,CAAC,IAAL,CAAU,OAAV,CAAkB,IAAlB,EAAuB,GAAvB,CAAN,cAAqC,mCAAA,CAAA,KAAA,CAAA,EAArC,cAAqD,IAAI,CAAC,GAA1D,CAAR;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,aAAtB,EAAoC,IAAI,CAAC,OAAzC,EAAiD,IAAjD;;AACA,cAAA,OAAO,CAAC,IAAR,CAAa;AACX,gBAAA,IAAI,EAAE,IAAI,CAAC,IADA;AAEX,gBAAA,MAAM,EAAE,OAAI,CAAC,eAFF;AAGX,gBAAA,IAAI,EAAE,IAAI,CAAC,IAHA;AAIX,gBAAA,IAAI,EAAE,IAJK;AAKX,gBAAA,GAAG,EAAE,IAAI,CAAC,GALC;AAMX,gBAAA,IAAI,EAAE,IAAI,CAAC,MANA;AAOX,gBAAA,MAAM,EAAE;AAPG,eAAb;AASD;AACF,WAdD;AAeA,eAAK,SAAL,CAAe,MAAf,CAAsB,SAAtB,EAAgC,IAAI,CAAC,SAAL,CAAe,OAAf,CAAhC;AACA,eAAK,SAAL,CAAe,MAAf,CAAsB,QAAtB,EAA+B,cAA/B;AACA,eAAK,SAAL,CAAe,MAAf,CAAsB,IAAtB,EAA2B,KAAK,eAAhC;;AACA,eAAK,QAAL,CAAc,UAAd,CAAyB,KAAK,SAA9B,EAAyC,SAAzC,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,OAAP,IAAiB,IAApB,EAAyB;AACvB,cAAA,OAAI,CAAC,QAAL,CAAc,uBAAd,CAAsC,IAAtC;;AACA,cAAA,OAAI,CAAC,eAAL,GAAuB,IAAvB;AACA,kBAAI,OAAO,GAAG,CAAd;;AACA,cAAA,OAAI,CAAC,KAAL,CAAW,OAAX,CAAmB,UAAA,IAAI,EAAG;AACxB,oBAAG,IAAI,CAAC,MAAL,IAAe,WAAlB,EAA8B;AAC5B,kBAAA,IAAI,CAAC,GAAL,GAAW,MAAM,CAAC,SAAP,CAAiB,OAAjB,EAA0B,GAArC;AACA,kBAAA,IAAI,CAAC,MAAL,GAAc,QAAd;AACA,kBAAA,OAAO;AACR;AACF,eAND;;AAOA,cAAA,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,iCAApB,EAAsD,WAAtD,EAAkE;AAAC,gBAAA,QAAQ,EAAE;AAAX,eAAlE;AACD;AACF,WAfH,EAeI,UAAA,KAAK;AAAA,mBAAI,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,uBAApB,EAA4C,WAA5C,EAAwD;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAxD,CAAJ;AAAA,WAfT;AAiBD;AA1HH;;AAAA;AAAA,OAAA;;;;cAqBiC,wDAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,aAAA;;;;AApBvB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,4BAAA,E,mBAAA,E,KAA2B,CAA3B;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,4BAAA,E,iBAAA,E,KAAyB,CAAzB;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,4BAAA,E,oBAAA,E,KAA2B,CAA3B;AAJE,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,gBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,8GAAA,CAAA,EAAA;AAFS,KAAV,CAI8B,CAAA,EAAlB,kBAAkB,CAAlB;;AA2IN,aAAS,cAAT,CAAwB,GAAxB,EAAoC;AACzC,UAAG,GAAG,IAAI,KAAP,IAAgB,GAAG,IAAI,MAAvB,IAAiC,GAAG,IAAI,KAA3C,EAAkD,OAAO,QAAP,CAAlD,KACK,IAAG,GAAG,IAAI,KAAP,IAAgB,GAAG,IAAI,MAA1B,EAAkC,OAAO,MAAP,CAAlC,KACA,IAAG,GAAG,IAAI,MAAP,IAAiB,GAAG,IAAI,MAAxB,IAAkC,GAAG,IAAI,MAAzC,IAAmD,GAAG,IAAI,MAA1D,IAAoE,GAAG,IAAI,MAA3E,IAAqF,GAAG,IAAI,MAA/F,EAAuG,OAAO,OAAP,CAAvG,KACA,IAAG,GAAG,IAAI,KAAP,IAAgB,GAAG,IAAI,MAAvB,IAAiC,GAAG,IAAI,MAAxC,IAAkD,GAAG,IAAI,MAAzD,IAAmE,GAAG,IAAI,MAA1E,IAAoF,GAAG,IAAI,MAA3F,IAAqG,GAAG,IAAI,MAA5G,IAAsH,GAAG,IAAI,MAAhI,EAAwI,OAAO,aAAP,CAAxI,KACA,IAAG,GAAG,IAAI,KAAV,EAAiB,OAAO,KAAP;AACtB,aAAO,SAAP;AACD;;AAEM,aAAS,WAAT,CAAqB,IAArB,EAAyB;AAC9B,UAAG,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,EAAc,CAAd,CAAV,EAA4B,iBAAU,CAAC,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,EAAc,CAAd,CAAR,EAA0B,OAA1B,CAAkC,CAAlC,CAAV,SAA5B,KACK,IAAG,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,EAAc,CAAd,CAAV,EAA4B,iBAAU,CAAC,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,EAAc,CAAd,CAAR,EAA0B,OAA1B,CAAkC,CAAlC,CAAV,SAA5B,KACA,IAAG,IAAI,GAAG,IAAV,EAAgB,iBAAU,CAAC,IAAI,GAAG,IAAR,EAAc,OAAd,CAAsB,CAAtB,CAAV;AACrB,uBAAW,IAAD,CAAO,OAAP,CAAe,CAAf,CAAV;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1JD,QAAa,eAAb;AAAA;AAAA;AAOE,+BAAoB,WAApB,EACoB,SADpB,EAEoB,OAFpB,EAEoC;AAAA;;AAFhB,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,OAAA,GAAA,OAAA;AAPpB,aAAA,GAAA,GAAe,0BAAf;AAEA,aAAA,OAAA,GAAwB,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,0BAAe,kBAAhB;AAAmC,4CAA0B,YAAY,CAAC,KAAvC;AAAnC,SAAhB,CAAxB;AACA,aAAA,UAAA,GAA2B,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,4CAA0B,YAAY,CAAC,KAAvC;AAAD,SAAhB,CAA3B;AAI0C;AAE1C;;;AAXF;AAAA;AAAA,qCAYgB,IAZhB,EAYoB;AAChB,iBAAO,KAAK,WAAL,CAAiB,IAAjB,WAAyB,KAAK,GAA9B,kBAA+C,IAA/C,EAAoD;AAAC,YAAA,OAAO,EAAE,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,8BAAe;AAAhB,aAAhB;AAAV,WAApD,CAAP;AACD;AAED;;AAhBF;AAAA;AAAA,qCAiBY;AACR,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,eAA2C;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAA3C,CAAP;AACD;AAnBH;AAAA;AAAA,wCAoBe;AACX,cAAG,YAAY,CAAC,OAAb,CAAqB,SAArB,CAAH,EAAoC,OAAO,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,SAArB,CAAX,CAAP;AACpC,iBAAO,EAAP;AACD;AAvBH;AAAA;AAAA,kCAwBa,EAxBb,EAwBwB;AACpB,cAAI,OAAO,GAAW,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,SAArB,CAAX,CAAtB;AACA,iBAAO,OAAO,CAAC,MAAR,CAAe,UAAA,MAAM;AAAA,mBAAI,MAAM,CAAC,GAAP,IAAc,EAAlB;AAAA,WAArB,EAA2C,CAA3C,CAAP;AACD;AA3BH;AAAA;AAAA,qCA4BgB,MA5BhB,EA4B4B;AACxB,iBAAO,KAAK,WAAL,CAAiB,IAAjB,WAAyB,KAAK,GAA9B,eAA4C,MAA5C,EAAmD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAnD,CAAP;AACD;AA9BH;AAAA;AAAA,qCA+BgB,MA/BhB,EA+B6B,EA/B7B,EA+BwC;AACpC,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,qBAA2C,EAA3C,GAAgD,MAAhD,EAAuD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAvD,CAAP;AACD;AAjCH;AAAA;AAAA,0CAkCqB,QAlCrB,EAkC6B;AAAA;;AACzB,eAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,eAA2C;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAA3C,EAAuE,SAAvE,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,SAAD,CAAN,IAAqB,IAAxB,EAA6B;AAC3B,cAAA,YAAY,CAAC,OAAb,CAAqB,SAArB,EAA+B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,SAAD,CAArB,CAA/B;AACD,aAFD,MAEK;AACH,cAAA,YAAY,CAAC,OAAb,CAAqB,SAArB,EAA+B,IAA/B;AACD;;AACD,gBAAG,QAAH,EAAa,OAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,CAAC,UAAD,CAAtB;AACd,WARH,EASE,UAAA,KAAK;AAAA,mBAAI,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,mDAApB,EAAwE,WAAxE,EAAoF;AAAC,cAAA,QAAQ,EAAE;AAAX,aAApF,CAAJ;AAAA,WATP;AAUD;AA7CH;AAAA;AAAA,qCA8CgB,EA9ChB,EA8C2B;AACvB,iBAAO,KAAK,WAAL,CAAiB,MAAjB,WAA2B,KAAK,GAAhC,qBAA8C,EAA9C,GAAmD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAnD,CAAP;AACD;AAED;;AAlDF;AAAA;AAAA,2CAmDkB;AACd,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,qBAAiD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAjD,CAAP;AACD;AArDH;AAAA;AAAA,8CAsDqB;AACjB,cAAG,YAAY,CAAC,OAAb,CAAqB,eAArB,CAAH,EAA0C,OAAO,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,eAArB,CAAX,CAAP;AAC1C,iBAAO,EAAP;AACD;AAzDH;AAAA;AAAA,wCA0DmB,EA1DnB,EA0D8B;AAC1B,cAAI,aAAa,GAAW,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,eAArB,CAAX,CAA5B;AACA,iBAAO,aAAa,CAAC,MAAd,CAAqB,UAAA,YAAY;AAAA,mBAAI,YAAY,CAAC,GAAb,IAAoB,EAAxB;AAAA,WAAjC,EAA6D,CAA7D,CAAP;AACD;AA7DH;AAAA;AAAA,2CA8DsB,YA9DtB,EA8DwC;AACpC,iBAAO,KAAK,WAAL,CAAiB,IAAjB,WAAyB,KAAK,GAA9B,qBAAkD,YAAlD,EAA+D;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAA/D,CAAP;AACD;AAhEH;AAAA;AAAA,2CAiEsB,YAjEtB,EAiEyC,EAjEzC,EAiEoD;AAChD,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,2BAAiD,EAAjD,GAAsD,YAAtD,EAAmE;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAnE,CAAP;AACD;AAnEH;AAAA;AAAA,gDAoE2B,QApE3B,EAoEmC;AAAA;;AAC/B,eAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,qBAAiD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAjD,EAA6E,SAA7E,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,SAAD,CAAN,IAAqB,IAAxB,EAA6B;AAC3B,cAAA,YAAY,CAAC,OAAb,CAAqB,eAArB,EAAqC,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,eAAD,CAArB,CAArC;AACD,aAFD,MAEK;AACH,cAAA,YAAY,CAAC,OAAb,CAAqB,eAArB,EAAqC,IAArC;AACD;;AACD,gBAAG,QAAH,EAAa,OAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,CAAC,gBAAD,CAAtB;AACd,WARH,EASE,UAAA,KAAK;AAAA,mBAAI,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,oDAApB,EAAyE,WAAzE,EAAqF;AAAC,cAAA,QAAQ,EAAE;AAAX,aAArF,CAAJ;AAAA,WATP;AAUD;AA/EH;AAAA;AAAA,2CAgFsB,EAhFtB,EAgFiC;AAC7B,iBAAO,KAAK,WAAL,CAAiB,MAAjB,WAA2B,KAAK,GAAhC,2BAAoD,EAApD,GAAyD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAzD,CAAP;AACD;AAED;;AApFF;AAAA;AAAA,sCAqFa;AACT,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,gBAA4C;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAA5C,CAAP;AACD;AAvFH;AAAA;AAAA,yCAwFgB;AACZ,cAAG,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAH,EAAqC,OAAO,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAX,CAAP;AACrC,iBAAO,EAAP;AACD;AA3FH;AAAA;AAAA,mCA4Fc,EA5Fd,EA4FyB;AACrB,cAAI,SAAS,GAAW,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAX,CAAxB;AACA,iBAAO,SAAS,CAAC,MAAV,CAAiB,UAAA,OAAO;AAAA,mBAAI,OAAO,CAAC,GAAR,IAAe,EAAnB;AAAA,WAAxB,EAA+C,CAA/C,CAAP;AACD;AA/FH;AAAA;AAAA,sCAgGiB,OAhGjB,EAgG8B;AAC1B,iBAAO,KAAK,WAAL,CAAiB,IAAjB,WAAyB,KAAK,GAA9B,gBAA6C,OAA7C,EAAqD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAArD,CAAP;AACD;AAlGH;AAAA;AAAA,sCAmGiB,OAnGjB,EAmG+B,EAnG/B,EAmG0C;AACtC,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,sBAA4C,EAA5C,GAAiD,OAAjD,EAAyD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAzD,CAAP;AACD;AArGH;AAAA;AAAA,2CAsGsB,QAtGtB,EAsG8B;AAAA;;AAC1B,eAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,gBAA4C;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAA5C,EAAwE,SAAxE,CACE,UAAA,MAAM,EAAG;AACL,YAAA,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAgC,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,UAAD,CAArB,CAAhC;AACA,gBAAG,QAAH,EAAa,OAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,CAAC,WAAD,CAAtB;AAChB,WAJH,EAKE,UAAA,KAAK;AAAA,mBAAI,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,+CAApB,EAAoE,WAApE,EAAgF;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAhF,CAAJ;AAAA,WALP;AAMD;AA7GH;AAAA;AAAA,sCA8GiB,EA9GjB,EA8G4B;AACxB,iBAAO,KAAK,WAAL,CAAiB,MAAjB,WAA2B,KAAK,GAAhC,sBAA+C,EAA/C,GAAoD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAApD,CAAP;AACD;AAED;;AAlHF;AAAA;AAAA,wCAmHe;AACX,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,kBAA8C;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAA9C,CAAP;AACD;AArHH;AAAA;AAAA,2CAsHkB;AACd,cAAG,YAAY,CAAC,OAAb,CAAqB,YAArB,CAAH,EAAuC,OAAO,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,YAArB,CAAX,CAAP;AACvC,iBAAO,EAAP;AACD;AAzHH;AAAA;AAAA,qCA0HgB,EA1HhB,EA0H2B;AACvB,cAAI,UAAU,GAAW,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,YAArB,CAAX,CAAzB;AACA,iBAAO,UAAU,CAAC,MAAX,CAAkB,UAAA,SAAS;AAAA,mBAAI,SAAS,CAAC,GAAV,IAAiB,EAArB;AAAA,WAA3B,EAAoD,CAApD,CAAP;AACD;AA7HH;AAAA;AAAA,wCA8HmB,SA9HnB,EA8HkC;AAC9B,iBAAO,KAAK,WAAL,CAAiB,IAAjB,WAAyB,KAAK,GAA9B,kBAA+C,SAA/C,EAAyD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAzD,CAAP;AACD;AAhIH;AAAA;AAAA,wCAiImB,SAjInB,EAiImC,EAjInC,EAiI8C;AAC1C,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,wBAA8C,EAA9C,GAAmD,SAAnD,EAA6D;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAA7D,CAAP;AACD;AAnIH;AAAA;AAAA,6CAoIwB,QApIxB,EAoIgC;AAAA;;AAC5B,eAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,kBAA8C;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAA9C,EAA0E,SAA1E,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,SAAD,CAAN,IAAqB,IAAxB,EAA6B;AAC3B,cAAA,YAAY,CAAC,OAAb,CAAqB,YAArB,EAAkC,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,YAAD,CAArB,CAAlC;AACD,aAFD,MAEK;AACH,cAAA,YAAY,CAAC,OAAb,CAAqB,YAArB,EAAkC,IAAlC;AACD;;AACD,gBAAG,QAAH,EAAa,OAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,CAAC,aAAD,CAAtB;AACd,WARH,EASE,UAAA,KAAK;AAAA,mBAAI,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,iDAApB,EAAsE,WAAtE,EAAkF;AAAC,cAAA,QAAQ,EAAE;AAAX,aAAlF,CAAJ;AAAA,WATP;AAUD;AA/IH;AAAA;AAAA,wCAgJmB,EAhJnB,EAgJ8B;AAC1B,iBAAO,KAAK,WAAL,CAAiB,MAAjB,WAA2B,KAAK,GAAhC,wBAAiD,EAAjD,GAAsD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAtD,CAAP;AACD;AAED;;AApJF;AAAA;AAAA,oCAqJe,OArJf,EAqJmC;AAC/B,cAAG,CAAC,OAAO,CAAC,KAAZ,EAAmB,OAAO,IAAP;;AACnB,cAAG,YAAY,CAAC,OAAb,CAAqB,SAArB,CAAH,EAAoC;AAClC,gBAAI,OAAO,GAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,SAArB,CAAX,CAAd;AACA,gBAAI,MAAM,GAAG,OAAO,CAAC,MAAR,CAAe,UAAA,MAAM;AAAA,qBAAI,MAAM,CAAC,IAAP,CAAY,WAAZ,MAA6B,OAAO,CAAC,KAAR,CAAc,WAAd,EAAjC;AAAA,aAArB,CAAb;AACA,gBAAG,MAAM,CAAC,MAAV,EAAkB,OAAO;AAAC,cAAA,KAAK,EAAE;AAAR,aAAP;AACnB;;AACD,iBAAO,IAAP;AACD;AA7JH;AAAA;AAAA,0CA8JqB,OA9JrB,EA8JyC;AACrC,cAAG,YAAY,CAAC,OAAb,CAAqB,eAArB,CAAH,EAA0C;AACxC,gBAAI,aAAa,GAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,eAArB,CAAX,CAApB;AACA,gBAAI,MAAM,GAAG,aAAa,CAAC,MAAd,CAAqB,UAAA,YAAY;AAAA,qBAAI,YAAY,CAAC,IAAb,CAAkB,WAAlB,MAAmC,OAAO,CAAC,KAAR,CAAc,WAAd,EAAvC;AAAA,aAAjC,CAAb;AACA,gBAAG,MAAM,CAAC,MAAV,EAAkB,OAAO;AAAC,cAAA,KAAK,EAAE;AAAR,aAAP;AACnB;;AACD,iBAAO,IAAP;AACD;AArKH;AAAA;AAAA,qCAsKgB,OAtKhB,EAsKoC;AAChC,cAAG,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAH,EAAqC;AACnC,gBAAI,QAAQ,GAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAX,CAAf;AACA,gBAAI,MAAM,GAAG,QAAQ,CAAC,MAAT,CAAgB,UAAA,OAAO;AAAA,qBAAI,OAAO,CAAC,IAAR,CAAa,WAAb,MAA8B,OAAO,CAAC,KAAR,CAAc,WAAd,EAAlC;AAAA,aAAvB,CAAb;AACA,gBAAG,MAAM,CAAC,MAAV,EAAkB,OAAO;AAAC,cAAA,KAAK,EAAE;AAAR,aAAP;AACnB;;AACD,iBAAO,IAAP;AACD;AA7KH;AAAA;AAAA,kCA8Ka,OA9Kb,EA8KiC;AAC7B,cAAG,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAH,EAAkC;AAChC,gBAAI,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,gBAAI,MAAM,GAAG,KAAK,CAAC,MAAN,CAAa,UAAA,IAAI;AAAA,qBAAI,IAAI,CAAC,QAAL,CAAc,WAAd,MAA+B,OAAO,CAAC,KAAR,CAAc,WAAd,EAAnC;AAAA,aAAjB,CAAb;AACA,gBAAG,MAAM,CAAC,MAAV,EAAkB,OAAO;AAAC,cAAA,KAAK,EAAE;AAAR,aAAP;AACnB;;AACD,iBAAO,IAAP;AACD;AArLH;AAAA;AAAA,gCAsLW,OAtLX,EAsL+B;AAC3B,cAAG,CAAE,OAAO,CAAC,KAAR,CAAc,IAAd,EAAD,CAAuB,MAA3B,EAAmC,OAAO;AAAC,YAAA,OAAO,EAAE;AAAV,WAAP;AACnC,iBAAO,IAAP;AACD;AAED;;AA3LF;AAAA;AAAA,4CA4LuB,IA5LvB,EA4LiC;AAC7B,iBAAO,KAAK,WAAL,CAAiB,IAAjB,WAAyB,KAAK,GAA9B,2BAAwD,IAAxD,EAA6D;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAA7D,CAAP;AACD;AA9LH;AAAA;AAAA,mCA+Lc,IA/Ld,EA+LwB;AACpB,iBAAO,KAAK,WAAL,CAAiB,IAAjB,WAAyB,KAAK,GAA9B,oBAAiD,IAAjD,EAAsD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAtD,CAAP;AACD;AAjMH;AAAA;AAAA,6CAkMwB,EAlMxB,EAkMmC;AAC/B,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,kCAAwD,EAAxD,GAA6D;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAA7D,CAAP;AACD;AApMH;AAAA;AAAA,mCAqMc,EArMd,EAqMyB;AACrB,iBAAO,KAAK,WAAL,CAAiB,MAAjB,WAA2B,KAAK,GAAhC,oBAA6C,EAA7C,GAAkD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAlD,CAAP;AACD;AAED;;AAzMF;AAAA;AAAA,mCA0MU;AACN,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,aAAyC;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAzC,CAAP;AACD;AA5MH;AAAA;AAAA,sCA6Ma;AACT,cAAG,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAH,EAAkC,OAAO,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAX,CAAP;AAClC,iBAAO,EAAP;AACD;AAhNH;AAAA;AAAA,gCAiNW,EAjNX,EAiNsB;AAClB,cAAI,KAAK,GAAW,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAX,CAApB;AACA,iBAAO,KAAK,CAAC,MAAN,CAAa,UAAA,IAAI;AAAA,mBAAI,IAAI,CAAC,GAAL,IAAY,EAAhB;AAAA,WAAjB,EAAqC,CAArC,CAAP;AACD;AApNH;AAAA;AAAA,mCAqNc,IArNd,EAqNwB;AACpB,iBAAO,KAAK,WAAL,CAAiB,IAAjB,WAAyB,KAAK,GAA9B,aAA0C,IAA1C,EAA+C;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAA/C,CAAP;AACD;AAvNH;AAAA;AAAA,mCAwNc,IAxNd,EAwNyB,EAxNzB,EAwNoC;AAChC,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,mBAAyC,EAAzC,GAA8C,IAA9C,EAAmD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAnD,CAAP;AACD;AA1NH;AAAA;AAAA,wCA2NmB,QA3NnB,EA2N2B;AAAA;;AACvB,eAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,aAAyC;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAzC,EAAqE,SAArE,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,SAAD,CAAN,IAAqB,IAAxB,EAA6B;AAC3B,cAAA,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA6B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,OAAD,CAArB,CAA7B;AACD,aAFD,MAEM,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA6B,IAA7B;;AACN,gBAAG,QAAH,EAAa,OAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,CAAC,QAAD,CAAtB;AACd,WANH,EAOE,UAAA,KAAK;AAAA,mBAAI,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,8CAApB,EAAmE,WAAnE,EAA+E;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA/E,CAAJ;AAAA,WAPP;AAQD;AAED;;AAtOF;AAAA;AAAA,yCAuOgB;AACZ,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,oBAAgD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAhD,CAAP;AACD;AAzOH;AAAA;AAAA,wCA0Oe;AACX,cAAG,YAAY,CAAC,OAAb,CAAqB,SAArB,CAAH,EAAoC,OAAO,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,SAArB,CAAX,CAAP;AACpC,iBAAO,EAAP;AACD;AA7OH;AAAA;AAAA,sCA8Oa;AACT,cAAG,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAH,EAAkC,OAAO,IAAI,CAAC,KAAL,CAAW,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAX,CAAP;AAClC,iBAAO,EAAP;AACD;AAjPH;AAAA;AAAA,gDAkPuB;AAAA;;AACnB,eAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,oBAAgD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAhD,EAA4E,SAA5E,CACE,UAAA,MAAM,EAAG;AACP,gBAAG,MAAM,CAAC,SAAD,CAAN,IAAqB,IAAxB,EAA6B;AAC3B,cAAA,YAAY,CAAC,OAAb,CAAqB,SAArB,EAA+B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,aAAD,CAAN,CAAsB,aAAtB,CAAoC,OAAnD,CAA/B;AACA,cAAA,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA6B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,aAAD,CAAN,CAAsB,aAAtB,CAAoC,KAAnD,CAA7B;AACD,aAHD,MAGK;AACH,cAAA,YAAY,CAAC,OAAb,CAAqB,SAArB,EAA+B,IAA/B;AACA,cAAA,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA6B,IAA7B;AACD;AACF,WATH,EAUE,UAAA,KAAK;AAAA,mBAAI,OAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,8CAApB,EAAmE,WAAnE,EAA+E;AAAC,cAAA,QAAQ,EAAE;AAAX,aAA/E,CAAJ;AAAA,WAVP;AAWD;AA9PH;AAAA;AAAA,qDA+PgC,UA/PhC,EA+PgD;AAC5C,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,oBAAgD,UAAhD,EAA2D;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAA3D,CAAP;AACD;AAED;;AAnQF;AAAA;AAAA,iCAoQW,KApQX,EAoQyB;AACrB,cAAI,MAAJ;;AACA,kBAAO,KAAP;AACE,iBAAK,CAAL;AACE,cAAA,MAAM,GAAG,OAAT;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,MAAM,GAAG,SAAT;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,MAAM,GAAG,OAAT;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,MAAM,GAAG,OAAT;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,MAAM,GAAG,MAAT;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,MAAM,GAAG,OAAT;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,MAAM,GAAG,OAAT;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,MAAM,GAAG,QAAT;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,MAAM,GAAG,YAAT;AACA;;AACF,iBAAK,CAAL;AACE,cAAA,MAAM,GAAG,SAAT;AACA;;AACF,iBAAK,EAAL;AACE,cAAA,MAAM,GAAG,WAAT;AACA;;AACF,iBAAK,EAAL;AACE,cAAA,MAAM,GAAG,WAAT;AACA;;AACF;AACE;AAtCJ;;AAyCA,iBAAO,MAAP;AACD;AAhTH;;AAAA;AAAA,OAAA;;;;cAOoC,iDAAA,CAAA,YAAA;;cACF,wDAAA,CAAA,aAAA;;cACF,4CAAA,CAAA,QAAA;;;;AATnB,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH3B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,QAAa,wBAAb;AAAA;AAAA;AAME,wCAAoB,WAApB,EAA4C;AAAA;;AAAxB,aAAA,WAAA,GAAA,WAAA;AAJpB,aAAA,GAAA,GAAe,wCAAf;AAEA,aAAA,OAAA,GAAwB,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AAAC,4CAA0B,YAAY,CAAC,KAAvC;AAAD,SAAhB,CAAxB;AAEkD;;AANpD;AAAA;AAAA,+CAQ0B,EAR1B,EAQqC;AACjC,iBAAO,KAAK,WAAL,CAAiB,GAAjB,WAAwB,KAAK,GAA7B,uBAA6C,EAA7C,GAAkD;AAAC,YAAA,OAAO,EAAE,KAAK;AAAf,WAAlD,CAAP;AACD;AAVH;;AAAA;AAAA,OAAA;;;;cAMoC,iDAAA,CAAA,YAAA;;;;AANvB,IAAA,wBAAwB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHpC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGoC,CAAA,EAAxB,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACRb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,kCAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA,C,CAAA;AACA;AACA;;;AAEO,QAAM,WAAW,GAAG;AACzB,MAAA,UAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA,QAAI,sDAAA,CAAA,aAAA,CAAA,CAAY,UAAhB,EAA4B;AAC1B,MAAA,MAAA,CAAA,0CAAA,CAAA,gBAAA,CAAA,CAAA;AACD;;AAED,IAAA,MAAA,CAAA,8DAAA,CAAA,wBAAA,CAAA,CAAA,GAAyB,eAAzB,CAAyC,4CAAA,CAAA,WAAA,CAAzC,EACG,KADH,CACS,UAAA,GAAG;AAAA,aAAI,OAAO,CAAC,KAAR,CAAc,GAAd,CAAJ;AAAA,KADZ","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<div class=\\\"full-height full-width\\\" *ngIf=\\\"this.auth; else LoginView\\\">\\n  <mat-toolbar color=\\\"accent\\\" class=\\\"flex\\\">\\n    <div class=\\\"full-height p-2\\\">\\n      <img src=\\\"../assets/images/logo-sisi.svg\\\" class=\\\"full-height\\\" alt=\\\"\\\">\\n    </div>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button mat-button [matMenuTriggerFor]=\\\"menu\\\"> {{this.userData.name}} {{this.userData.last_names}} <mat-icon>arrow_drop_down</mat-icon></button>\\n    <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n      <button mat-menu-item>Mi Perfil</button>\\n      <button mat-menu-item (click)=\\\"logout()\\\">Cerrar Sesi√≥n</button>\\n    </mat-menu>\\n  </mat-toolbar>\\n  <mat-drawer-container>\\n    <mat-drawer mode=\\\"side\\\" opened>\\n        <mat-list>\\n          <!--li><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['dashboard']\\\">Dashboard</a></li-->\\n          <li *ngIf=\\\"this.userRole != 'Financiador'\\\"><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['funders']\\\">Financiadores</a></li>\\n          <li><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['organizations']\\\">Organizaciones</a></li>\\n          <li *ngIf=\\\"this.userRole != 'Financiador'\\\"><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['indicators']\\\">Indicadores</a></li>\\n          <li><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['projects']\\\">Proyectos</a></li>\\n          <li *ngIf=\\\"this.userRole != 'Financiador'\\\"><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['schemas']\\\">Fichas</a></li>\\n          <li><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['reports']\\\">Reportes</a></li>\\n          <li *ngIf=\\\"this.userRole != 'Financiador'\\\"><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['documents']\\\">Documentos</a></li>\\n          <li><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['institucionales']\\\">Institucionales</a></li>\\n          <li *ngIf=\\\"this.userRole == 'Administrador'\\\"><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['users']\\\">Usuarios</a></li>\\n          <!--li><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['settings']\\\">Configuraci√≥n</a></li-->\\n        </mat-list>\\n    </mat-drawer>\\n    <mat-drawer-content>\\n      <router-outlet></router-outlet>\\n    </mat-drawer-content>\\n  </mat-drawer-container>\\n</div>\\n<ng-template #LoginView>\\n  <app-login (authentication)=\\\"this.Authenticate($event)\\\" (isWorking)=\\\"this.loadingView($event)\\\"></app-login>\\n</ng-template>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"    <div mat-dialog-content>\\n      <h4 class=\\\"font-weight-lighter\\\">Vincular Financiadores al Proyecto</h4>\\n      <mat-divider></mat-divider>\\n      <div>\\n        <mat-selection-list class=\\\"projects-selection-list\\\">      \\n            <mat-list-option class=\\\"font-weight-lighter\\\" *ngFor=\\\"let funder of this.data.Funders\\\" [value]=\\\"funder._id\\\" (click)=\\\"OnFundersListChange(funder._id)\\\">{{funder.name}}</mat-list-option>\\n        </mat-selection-list>\\n    </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"flex\\\">\\n      <div class=\\\"fill-remaining-space\\\"></div>\\n      <button mat-button (click)=\\\"onNoClick()\\\">CANCELAR</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!this.data.seleccion.length\\\" [mat-dialog-close]=\\\"data.seleccion\\\" cdkFocusInitial>GUARDAR</button>\\n    </div>\"","export default \"\\n  <div *ngIf=\\\"this.data.preference == 'sectors'; else Type\\\">\\n    <div mat-dialog-content>\\n      <h4 class=\\\"font-weight-lighter\\\">A√±adir nuevo sector de organizaciones</h4>\\n      <mat-divider></mat-divider>\\n      <mat-form-field class=\\\"full-width mt-2\\\">\\n        <mat-label>Ingrese el nuevo sector</mat-label>\\n        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"data.sector\\\">\\n      </mat-form-field>\\n    </div>\\n    <div mat-dialog-actions class=\\\"flex\\\">\\n      <div class=\\\"fill-remaining-space\\\"></div>\\n      <button mat-button (click)=\\\"onNoClick()\\\">CANCELAR</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"this.data.sector == null\\\" [mat-dialog-close]=\\\"data.sector\\\" cdkFocusInitial>GUARDAR</button>\\n    </div>\\n  </div>\\n\\n  <ng-template #Type>\\n    <div mat-dialog-content>\\n      <h4 class=\\\"font-weight-lighter\\\">A√±adir nuevo tipo de organizaciones</h4>\\n      <mat-divider></mat-divider>\\n      <mat-form-field class=\\\"full-width mt-2\\\">\\n        <mat-label>Ingrese el nuevo valor tipo</mat-label>\\n        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"data.type\\\">\\n      </mat-form-field>\\n    </div>\\n    <div mat-dialog-actions class=\\\"flex\\\">\\n      <div class=\\\"fill-remaining-space\\\"></div>\\n      <button mat-button (click)=\\\"onNoClick()\\\">CANCELAR</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"this.data.type == null\\\" [mat-dialog-close]=\\\"data.type\\\" cdkFocusInitial>GUARDAR</button>\\n    </div>\\n  </ng-template>\"","export default \"    <div mat-dialog-content [formGroup]=\\\"this.PasswordForm\\\">\\n      <h4 class=\\\"font-weight-lighter\\\">Generar nueva contrase√±a</h4>\\n      <mat-divider></mat-divider>\\n      <mat-form-field class=\\\"full-width mt-2\\\">\\n        <mat-label>Ingrese una contrase√±a</mat-label>\\n        <input matInput type=\\\"password\\\" formControlName=\\\"password\\\">\\n        <mat-error *ngIf=\\\"this.PasswordForm.controls.password.errors?.required\\\">Este campo es obligatorio</mat-error>\\n        <mat-error *ngIf=\\\"this.PasswordForm.controls.password.errors?.minLength\\\">La contrase√±a debe tener al menos 10 caracteres.</mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width mt-2\\\">\\n        <mat-label>Repita la contrase√±a</mat-label>\\n        <input matInput type=\\\"password\\\" formControlName=\\\"repassword\\\">\\n        <mat-error *ngIf=\\\"this.PasswordForm.controls.repassword.errors?.required\\\">Este campo es obligatorio</mat-error>\\n        <mat-error *ngIf=\\\"this.PasswordForm.controls.repassword.errors?.noMatch\\\">Las contrase√±as no coinciden.</mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div mat-dialog-actions class=\\\"flex\\\">\\n      <div class=\\\"fill-remaining-space\\\"></div>\\n      <button mat-button (click)=\\\"onNoClick()\\\">CANCELAR</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"this.PasswordForm.invalid\\\" [mat-dialog-close]=\\\"this.PasswordForm.value\\\" cdkFocusInitial>GUARDAR</button>\\n    </div>\"","export default \"\\n  <div *ngIf=\\\"this.data.type == 'executed'; else UpdateBudget\\\">\\n    <div mat-dialog-content>\\n      <h4 class=\\\"font-weight-lighter\\\">Actualizaci√≥n de Presupuesto Ejecutado</h4>\\n      <mat-divider></mat-divider>\\n      <mat-form-field class=\\\"full-width mt-2\\\">\\n        <mat-label>Ingrese el valor del presupuesto ejecutado hasta la fecha actual</mat-label>\\n        <input matInput type=\\\"number\\\" [(ngModel)]=\\\"data.ejecutado\\\">\\n      </mat-form-field>\\n    </div>\\n    <div mat-dialog-actions class=\\\"flex\\\">\\n      <div class=\\\"fill-remaining-space\\\"></div>\\n      <button mat-button (click)=\\\"onNoClick()\\\">CANCELAR</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"this.data.ejecutado == null\\\" [mat-dialog-close]=\\\"data.ejecutado\\\" cdkFocusInitial>GUARDAR</button>\\n    </div>\\n  </div>\\n\\n  <ng-template #UpdateBudget>\\n    <div mat-dialog-content>\\n      <h4 class=\\\"font-weight-lighter\\\">Registrar nuevo Presupuesto</h4>\\n      <mat-divider></mat-divider>\\n      <mat-form-field class=\\\"full-width mt-2\\\">\\n        <mat-label>Ingrese el nuevo valor total para el presupuesto</mat-label>\\n        <input matInput type=\\\"number\\\" [(ngModel)]=\\\"data.final\\\">\\n      </mat-form-field>\\n    </div>\\n    <div mat-dialog-actions class=\\\"flex\\\">\\n      <div class=\\\"fill-remaining-space\\\"></div>\\n      <button mat-button (click)=\\\"onNoClick()\\\">CANCELAR</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"this.data.final == null\\\" [mat-dialog-close]=\\\"data.final\\\" cdkFocusInitial>GUARDAR</button>\\n    </div>\\n  </ng-template>\"","export default \"<p>dashboard works!</p>\\n\"","export default \"<app-sub-toolbar\\n    title=\\\"Fichas\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <mat-card>\\n        <mat-card-title class=\\\"font-weight-lighter\\\">Generar Ficha:</mat-card-title>\\n        <mat-divider></mat-divider>\\n        <mat-card-content>\\n            <div class=\\\"row pt-3\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Seleccione un proyecto</mat-label>\\n                        <mat-select (valueChange)=\\\"onProjectSelect($event)\\\" [(ngModel)]=\\\"this.selectedProject\\\">\\n                          <mat-option *ngFor=\\\"let project of this.Projects\\\" [value]=\\\"project._id\\\">\\n                            {{project.name}}\\n                          </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Seleccione un indicador</mat-label>\\n                        <mat-select (valueChange)=\\\"onIndicatorSelect($event)\\\" [(ngModel)]=\\\"this.selectedIndicator\\\"[disabled]=\\\"!this.Indicators\\\" >\\n                          <mat-option *ngFor=\\\"let indicator of this.Indicators\\\" [value]=\\\"indicator._id\\\">\\n                            {{indicator.name}}\\n                          </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" [disabled]=\\\"!this.selectedIndicator\\\" (click)=\\\"generateSchema()\\\">GENERAR</button>\\n                </div>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n\\n    <div class=\\\"mt-4\\\">\\n        <mat-card *ngIf=\\\"this.Status == 'loading'\\\">\\n            <div class=\\\"loading-box\\\">\\n                <div>\\n                    <img src=\\\"../../../../../assets/images/logo-sisi-only.svg\\\" alt=\\\"\\\">\\n                    <h4 class=\\\"font-weight-lighter text-center\\\">Cargando...</h4>\\n                </div>\\n            </div>\\n        </mat-card>\\n        <mat-card *ngIf=\\\"this.Status == 'ready'\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Ficha</mat-card-title>\\n            <mat-divider></mat-divider>\\n            <mat-card-content>\\n                <div>\\n                    <div class=\\\"pt-3 mb-3\\\">\\n                        <p>Proyecto: <span class=\\\"font-weight-lighter\\\">{{this.ProjectName}}</span></p>\\n                        <p>Indicador: <span class=\\\"font-weight-lighter\\\">{{this.Indicator.name}}</span></p>\\n                        <p>Periodo: <span class=\\\"font-weight-lighter\\\">{{this._service.getMonth(this.Period.getMonth())}} {{this.Period.getFullYear()}}</span></p>\\n                    </div>\\n                    <div class=\\\"table-container\\\">\\n                        <table class=\\\"baseline-table\\\">\\n                            <tr>\\n                                <th class=\\\"sticky\\\">ORGANIZACI√ìN</th>\\n                                <th *ngFor=\\\"let field of this.fieldsSchema\\\">{{field.name}}</th>\\n                            </tr>\\n                            <tr *ngFor=\\\"let organization of this.Organizations; let i = index\\\">\\n                                <td class=\\\"sticky\\\">{{organization.name}}</td>\\n                                <td *ngFor=\\\"let field of this.fieldsSchema; let j = index\\\">\\n                                    <input type=\\\"number\\\" [(ngModel)]=\\\"this.SchemaForm.records.rows[i].fields[j].value\\\" class=\\\"full-width font-weight-lighter\\\" placeholder=\\\"Ingrese un valor\\\">\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </mat-card-content>\\n            <mat-divider></mat-divider>\\n            <mat-card-actions>\\n                <div class=\\\"flex\\\">\\n                    <span class=\\\"fill-remaining-space\\\"></span>\\n                    <button mat-button type=\\\"button\\\" (click)=\\\"this.cancel()\\\">CANCELAR</button>\\n                    <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.save()\\\" >GUARDAR</button>\\n                </div>\\n            </mat-card-actions>\\n        </mat-card>\\n        <mat-card *ngIf=\\\"this.Status == 'already-filled'\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Esta Ficha ya ha sido llenada</mat-card-title>\\n            <mat-divider></mat-divider>\\n            <mat-card-content>\\n                <div>\\n                    <div class=\\\"pt-3 mb-3\\\">\\n                        <p>Proyecto: <span class=\\\"font-weight-lighter\\\">{{this.ProjectName}}</span></p>\\n                        <p>Indicador: <span class=\\\"font-weight-lighter\\\">{{this.Indicator.name}}</span></p>\\n                        <p>Periodo: <span class=\\\"font-weight-lighter\\\">{{this._service.getMonth(this.Period.getMonth())}} {{this.Period.getFullYear()}}</span></p>\\n                        <p>T√©cnico Responsable: <span class=\\\"font-weight-lighter\\\">{{this.UserResponsable}}</span></p>\\n                    </div>\\n                    <div class=\\\"table-container\\\">\\n                        <table class=\\\"baseline-table\\\">\\n                            <tr>\\n                                <th class=\\\"sticky\\\">ORGANIZACI√ìN</th>\\n                                <th *ngFor=\\\"let field of this.SchemaForm.records.rows[0].fields\\\">{{field.name}}</th>\\n                            </tr>\\n                            <tr *ngFor=\\\"let organization of this.Organizations; let i = index\\\">\\n                                <td class=\\\"sticky\\\">{{organization.name}}</td>\\n                                <td *ngFor=\\\"let field of this.SchemaForm.records.rows[i].fields; let j = index\\\">\\n                                    <div class=\\\"full-width font-weight-lighter text-center\\\">{{field.value}}</div>\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\\n\"","export default \"<app-sub-toolbar *ngIf=\\\"this.userRole == 'Administrador'\\\"\\n    [title]=\\\"this.Funder.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [buttons]=\\\"[this.DeleteBtn]\\\"\\n    [importantBack]=\\\"this.editMode\\\">\\n</app-sub-toolbar>\\n\\n<app-sub-toolbar *ngIf=\\\"this.userRole != 'Administrador'\\\"\\n    [title]=\\\"this.Funder.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <mat-card>\\n        <form [formGroup]=\\\"this.FunderFormGroup\\\">\\n            <div class=\\\"flex\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Datos Generales</mat-card-title>\\n                <span class=\\\"fill-remaining-space\\\"></span>\\n                <button mat-button *ngIf=\\\"this.userRole == 'Administrador' && !this.editMode\\\" (click)=\\\"this.edit()\\\"><mat-icon>edit</mat-icon> EDITAR</button>\\n            </div>\\n            <div class=\\\"row mb-4\\\">\\n                <div class=\\\"col-md-3\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre del Financiador\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"place\\\" placeholder=\\\"Ubicaci√≥n\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"website\\\" placeholder=\\\"Sitio Web\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>    \\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                    <mat-form-field disabled class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"coop_date\\\" placeholder=\\\"Fecha de Constituci√≥n\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>    \\n                </div>\\n            </div>\\n            <app-button-group *ngIf=\\\"this.editMode\\\" [formStatus]=\\\"this.FunderFormGroup.pristine\\\" (save)=\\\"this.save()\\\" (cancel)=\\\"this.cancel()\\\"></app-button-group>\\n        </form>\\n    </mat-card>\\n\\n    <div>\\n        <h2 class=\\\"mt-5 font-weight-lighter\\\">Proyectos asociados:</h2>\\n        <div *ngIf=\\\"this.Funder.projects.length; else NoProjects\\\" class=\\\"row row-cols-1 row-cols-md-3\\\">\\n            <div class=\\\"col mb-4\\\" *ngFor=\\\"let project of this.Funder.projects\\\">\\n                <mat-card>\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">{{project.name}}</mat-card-title>\\n                    <mat-divider></mat-divider>\\n                    <mat-card-content>\\n                        <mat-list>\\n                            <li class=\\\"pt-2\\\">\\n                                <span>\\n                                    Fecha de Inicio: <span class=\\\"font-weight-lighter\\\">{{project.start_date}}</span>\\n                                </span>\\n                            </li>\\n                            <li class=\\\"mt-2\\\">\\n                                <span>\\n                                    Ubicaci√≥n: <span class=\\\"font-weight-lighter\\\">{{project.ubication}}</span>\\n                                </span>\\n                            </li>\\n                            <li class=\\\"mt-2\\\">\\n                                <span>\\n                                    Duraci√≥n: <span class=\\\"font-weight-lighter\\\">{{project.duration}}</span>\\n                                </span>\\n                            </li>\\n                        </mat-list>\\n                    </mat-card-content>\\n                    <mat-card-actions>\\n                        <div class=\\\"flex\\\">\\n                            <span class=\\\"fill-remaining-space\\\"></span>\\n                            <a mat-button [routerLink]=\\\"['/projects',project._id]\\\">DETALLES</a>\\n                        </div>\\n                    </mat-card-actions>\\n                </mat-card>\\n            </div>\\n        </div>\\n        <ng-template #NoProjects>\\n            <div class=\\\"font-weight-lighter text-center mt-5\\\">\\n                Este Financiador no tiene ning√∫n proyecto asociado\\n            </div>\\n        </ng-template>\\n    </div>\\n\\n</div>\\n\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\\n\"","export default \"<app-sub-toolbar\\n    title=\\\"Financiadores\\\"\\n    [backButton]=\\\"false\\\"\\n    [addButton]=\\\"false\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <div class=\\\"container full-height\\\">\\n        <div class=\\\"row full-height\\\">\\n            <div [ngClass]=\\\"{'col-sm-6':this.userRole == 'Administrador','col-sm-12':this.userRole != 'Administrador'}\\\" *ngIf=\\\"this.funders.length; else NoFunders\\\">\\n                <h2 class=\\\"list-title full-width\\\">Financiadores Registrados</h2>\\n                <mat-list class=\\\"scroll-list-view bordered-list\\\">\\n                    <a mat-button *ngFor=\\\"let funder of this.funders\\\" [routerLink]=\\\"funder._id\\\" class=\\\"full-width text-left font-weight-lighter\\\">{{funder.name}} - {{funder.place}}</a>\\n                </mat-list>\\n            </div>\\n            <ng-template #NoFunders>\\n                <div [ngClass]=\\\"{'col-sm-6':this.userRole == 'Administrador','col-sm-12':this.userRole != 'Administrador'}\\\" class=\\\"full-height\\\">\\n                    <h3 class=\\\"font-weight-lighter mt-5 text-center\\\">No hay Financiadores registrados</h3>\\n                    <div class=\\\"font-weight-lighter full-width text-center\\\">Para agregar un financiador, use el formulario de la derecha.</div>\\n                </div>\\n            </ng-template> \\n            <div class=\\\"col-sm-6\\\" *ngIf=\\\"this.userRole == 'Administrador'\\\">\\n                <mat-card>\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Nuevo Financiador:</mat-card-title>\\n                    <form [formGroup]=\\\"this.fundersForm\\\" class=\\\"mt-3\\\" (ngSubmit)=\\\"saveFunder()\\\" novalidate>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre del Financiador:\\\">\\n                            <mat-error *ngIf=\\\"this.nameCtrl.errors?.required && this.nameCtrl.touched\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"this.nameCtrl.errors?.exist && this.nameCtrl.touched\\\">Ya existe un Financiador con ese nombre</mat-error>\\n                        </mat-form-field>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"place\\\" placeholder=\\\"Pa√≠s:\\\">\\n                            <mat-error *ngIf=\\\"this.ubicationCtrl.invalid && this.ubicationCtrl.touched\\\">Este campo es obligatorio</mat-error>\\n                        </mat-form-field>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"website\\\" placeholder=\\\"Sitio Web:\\\">\\n                        </mat-form-field>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"coop_date\\\" placeholder=\\\"Inicio de Trabajo en Conjunto\\\">\\n                            <mat-hint>Utilice el siguiente formato: <b>07/2019</b></mat-hint>\\n                            <mat-error *ngIf=\\\"this.fundersForm.controls['coop_date'].errors?.required && this.coop_dateCtrl.touched\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"this.fundersForm.controls['coop_date'].errors?.pattern && this.coop_dateCtrl.touched\\\">Ingrese una fecha con el formato v√°lido</mat-error>\\n                        </mat-form-field>\\n                        <div class=\\\"flex\\\">\\n                            <span class=\\\"fill-remaining-space\\\"></span>\\n                            <button mat-button class=\\\"mr-3\\\" (click)=\\\"this.reset()\\\" type=\\\"reset\\\">CANCELAR</button>\\n                            <button [disabled]=\\\"!this.fundersForm.valid\\\" type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">GUARDAR</button>\\n                        </div>\\n                    </form>\\n                </mat-card>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar *ngIf=\\\"this.userRole == 'Administrador'\\\"\\n    title=\\\"Indicador: {{this.Indicator.name}}\\\"\\n    [backButton]=\\\"true\\\"\\n    [editButton]=\\\"!editMode\\\"\\n    [buttons]=\\\"[this.DeleteBtn]\\\"\\n    (editClick)=\\\"setEditMode()\\\"\\n    [importantBack]=\\\"editMode\\\">\\n</app-sub-toolbar>\\n\\n<app-sub-toolbar *ngIf=\\\"this.userRole != 'Administrador'\\\"\\n    title=\\\"Indicador: {{this.Indicator.name}}\\\"\\n    [backButton]=\\\"true\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <div *ngIf=\\\"!this.editMode; else EditMode\\\">\\n        <mat-card class=\\\"pb-3\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Informaci√≥n General</mat-card-title>\\n            <div class=\\\"row mb-3\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div><small class=\\\"label\\\">Nombre del Indicador</small></div>\\n                    <div>{{this.Indicator.name}}</div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <div><small>Tipo de Indicador</small></div>\\n                    <div>{{this.Indicator.type}}</div>\\n                </div>\\n            </div>\\n            <mat-divider *ngIf=\\\"this.Indicator.type == 'Compuesto'\\\"></mat-divider>\\n            <div class=\\\"label\\\">\\n                <div *ngIf=\\\"this.Indicator.type == 'Compuesto' && this.Indicator.antiquity_diff\\\"><small>Este indicador <b>DIFERENCIA</b> entre organizaciones nuevas y antiguas</small></div>\\n                <ng-template>\\n                    <div><small>Este indicador <b>NO DIFERENCIA</b> entre organizaciones nuevas y antiguas</small></div>\\n                </ng-template>\\n            </div>\\n        </mat-card>\\n    \\n        <!--Par√°metros Indicador Simple-->\\n        <div class=\\\"mt-4\\\" *ngIf=\\\"this.Indicator.type == 'Simple'; else EsquemaCompuesto\\\">\\n            <mat-card>\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Descripci√≥n del Indicador</mat-card-title>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                        <div class=\\\"label\\\">{{this.Indicator.description}}</div>\\n                    </div>\\n                </div>\\n            </mat-card>\\n            <mat-card class=\\\"mt-4 mb-4\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                <div class=\\\"row mb-2\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Frecuencia</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{this.Indicator.parameters_schema[0].name}}</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{this.Indicator.parameters_schema[0].frequency}}</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{this.Indicator.parameters_schema[0].isAcum}}</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{this.Indicator.parameters_schema[0].unit}}</div>\\n                    </div>\\n                </div>\\n            </mat-card>\\n        </div>\\n    \\n        <!--Esquema Indicador Compuesto-->\\n        <ng-template #EsquemaCompuesto>\\n            <mat-card class=\\\"mt-4\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Esquema de la Ficha</mat-card-title>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Frecuencia</div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                    </div>\\n                </div>\\n                <div *ngFor=\\\"let field of this.Indicator.record_schema\\\">\\n                    <div class=\\\"row mb-3\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{field.name}}</div>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{field.frequency}}</div>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{field.unit}}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-card>\\n    \\n            <!--Par√°metros Indicador Compuesto Sin Diferenciaci√≥n-->\\n            <mat-card class=\\\"mt-4\\\" *ngIf=\\\"!this.Indicator.antiquity_diff; else ConDiferenciacion\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                <div class=\\\"row mb-2\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Ponderaci√≥n (%)</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"mb-1\\\" *ngFor=\\\"let parameter of this.Indicator.parameters_schema\\\">\\n                    <div class=\\\"row mb-3\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.name}}</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.weighing[0].weight}}</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.isAcum}}</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.unit}}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-card>\\n    \\n            <ng-template #ConDiferenciacion>\\n                <mat-card class=\\\"mt-4\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                    <div class=\\\"row mb-2\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Ponderaci√≥n (%)</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mb-1\\\"*ngFor=\\\"let parameter of this.Indicator.parameters_schema\\\">\\n                        <div class=\\\"row mb-3\\\">\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.name}}</div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.weighing[0].older}}</div>\\n                                    </div>\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.weighing[0].newer}}</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.isAcum}}</div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.unit}}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-3\\\"></div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"font-weight-lighter full-width text-center\\\">Antigua</div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"font-weight-lighter full-width text-center\\\">Nueva</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\"></div>\\n                        <div class=\\\"col-sm-3\\\"></div>\\n                    </div>\\n                </mat-card>\\n            </ng-template>\\n    \\n            <!--Definici√≥n de los Par√°metros-->\\n            <mat-card class=\\\"mt-4 mb-4\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Definici√≥n de los Par√°metros</mat-card-title>\\n                <div class=\\\"definition-box mt-2 mb-4\\\">\\n                    <mat-list> \\n                        <span class=\\\"definition-column-label\\\">Par√°metro</span>\\n                        <li *ngFor=\\\"let parameter of this.Indicator.parameters_schema; let i = index\\\">\\n                            <button mat-flat-button type=\\\"button\\\" *ngIf=\\\"this.ParameterSelected != null && i == this.ParameterSelected; else NoSelected\\\" (click)=\\\"this.ParameterSelected = i\\\" class=\\\"font-weight-lighter selected-parameter full-width\\\">{{parameter.name}}</button>\\n                            <ng-template #NoSelected>\\n                                <button mat-flat-button type=\\\"button\\\" (click)=\\\"this.ParameterSelected = i\\\" class=\\\"font-weight-lighter full-width\\\">{{parameter.name}}</button>\\n                            </ng-template>\\n                        </li>\\n                    </mat-list>\\n                    <mat-list>\\n                        <span class=\\\"definition-column-label\\\">Campos de la Ficha:</span>\\n                        <div *ngIf=\\\"this.ParameterSelected != null\\\">\\n                            <button mat-button type=\\\"button\\\" class=\\\"font-weight-lighter full-width\\\" *ngFor=\\\"let field of this.Indicator.record_schema\\\">{{field.name}}</button>\\n                        </div>\\n                    </mat-list>\\n                    <mat-list class=\\\"definition-column\\\">\\n                        <span class=\\\"definition-column-label\\\">Definici√≥n del Par√°metro</span>\\n                        <div class=\\\"definition-space\\\">\\n                            <div *ngIf=\\\"this.ParameterSelected != null\\\">\\n                                <label class=\\\"p-1 font-weight-lighter\\\" *ngFor=\\\"let field of this.Indicator.parameters_schema[this.ParameterSelected].definition\\\">\\n                                    {{field}}\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </mat-list>\\n                </div>\\n            </mat-card>\\n    \\n        </ng-template>\\n    </div>\\n\\n    <ng-template #EditMode>\\n        <form [formGroup]=\\\"this.IndicatorForm\\\" (ngSubmit)=\\\"saveIndicator()\\\">\\n            <mat-card class=\\\"pb-3\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Informaci√≥n General</mat-card-title>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre del Indicador\\\">\\n                            <mat-error *ngIf=\\\"this.IndicatorForm.controls.name.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                            <mat-error *ngIf=\\\"!this.IndicatorForm.controls.name.errors?.required && this.IndicatorForm.controls.name.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <mat-label>Tipo de Indicador</mat-label>\\n                            <mat-select formControlName=\\\"type\\\" disabled>\\n                                <mat-option value=\\\"Simple\\\">Simple</mat-option>\\n                                <mat-option value=\\\"Compuesto\\\">Compuesto</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"flex mt-3 justify-content-center\\\">\\n                    <mat-checkbox *ngIf=\\\"this.Indicator.type == 'Compuesto'\\\" formControlName=\\\"antiquity_diff\\\">Diferenciar entre organizaciones nuevas y antiguas</mat-checkbox>\\n                </div>\\n            </mat-card>\\n        \\n            <!--Par√°metros Indicador Simple-->\\n            <div class=\\\"mt-4\\\" *ngIf=\\\"this.Indicator.type == 'Simple'; else EsquemaCompuesto\\\">\\n                <mat-card>\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Descripci√≥n del Indicador</mat-card-title>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <mat-form-field class=\\\"full-width\\\">\\n                                <textarea matInput #input formControlName=\\\"description\\\" maxlength=\\\"250\\\" placeholder=\\\"Escriba una breve descripci√≥n del Indicador Simple aqu√≠...\\\"></textarea>\\n                                <mat-error *ngIf=\\\"this.IndicatorForm.controls.description.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                                <mat-error *ngIf=\\\"!this.IndicatorForm.controls.description.errors?.required && this.IndicatorForm.controls.description.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                                <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/250</mat-hint>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n                </mat-card>\\n                <mat-card class=\\\"mt-4 mb-4\\\" formArrayName=\\\"parameters_schema\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                    <div class=\\\"row mb-2\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Frecuencia</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" [formGroupName]=\\\"0\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"frequency\\\">\\n                                <mat-option value=\\\"Mensual\\\">Mensual</mat-option>\\n                                <mat-option value=\\\"Trimestral\\\">Trimestral</mat-option>\\n                                <mat-option value=\\\"Semestral\\\">Semestral</mat-option>\\n                            </mat-select>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"isAcum\\\">\\n                                <mat-option value=\\\"Si\\\">Si</mat-option>\\n                                <mat-option value=\\\"No\\\">No</mat-option>\\n                            </mat-select>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"unit\\\">\\n                                <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                </mat-card>\\n            </div>\\n        \\n            <!--Esquema Indicador Compuesto-->\\n            <ng-template #EsquemaCompuesto>\\n                <mat-card class=\\\"mt-4\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Esquema de la Ficha</mat-card-title>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Frecuencia</div>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                        </div>\\n                    </div>\\n                    <div formArrayName=\\\"record_schema\\\" *ngFor=\\\"let field of this.IndicatorForm.controls.record_schema['controls']; let i = index\\\">\\n                        <div class=\\\"row mb-3\\\" [formGroupName]=\\\"i\\\">\\n                            <div class=\\\"col-sm-4\\\">\\n                                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                            </div>\\n                            <div class=\\\"col-sm-4\\\">\\n                                <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"frequency\\\">\\n                                    <mat-option value=\\\"Mensual\\\">Mensual</mat-option>\\n                                    <mat-option value=\\\"Trimestral\\\">Trimestral</mat-option>\\n                                    <mat-option value=\\\"Semestral\\\">Semestral</mat-option>\\n                                </mat-select>\\n                            </div>\\n                            <div class=\\\"col-sm-4\\\">\\n                                <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"unit\\\">\\n                                    <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                    <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                    <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                                </mat-select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <mat-card-actions>\\n                        <div class=\\\"flex mb-4\\\">\\n                            <span class=\\\"fill-remaining-space\\\"></span>\\n                            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addField()\\\"><mat-icon>add</mat-icon> AGREGAR</button>\\n                        </div>\\n                    </mat-card-actions>\\n                </mat-card>\\n        \\n                <!--Par√°metros Indicador Compuesto Sin Diferenciaci√≥n-->\\n                <mat-card class=\\\"mt-4\\\" *ngIf=\\\"!this.IndicatorForm.controls.antiquity_diff.value; else ConDiferenciacion\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                    <div class=\\\"row mb-2\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Ponderaci√≥n (%)</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mb-1\\\" formArrayName=\\\"parameters_schema\\\" *ngFor=\\\"let parameter of this.IndicatorForm.controls.parameters_schema['controls']; let i = index\\\">\\n                        <div class=\\\"row mb-3\\\" [formGroupName]=\\\"i\\\">\\n                            <div class=\\\"col-sm-3\\\">\\n                                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\" formArrayName=\\\"weighing\\\">\\n                                <div [formGroupName]=\\\"0\\\">\\n                                    <input type=\\\"number\\\" formControlName=\\\"weight\\\" class=\\\"schema-input full-width\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <mat-select formControlName=\\\"isAcum\\\" class=\\\"schema-input full-width\\\">\\n                                    <mat-option value=\\\"Si\\\">S√≠</mat-option>\\n                                    <mat-option value=\\\"No\\\">No</mat-option>\\n                                </mat-select>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <mat-select formControlName=\\\"unit\\\" class=\\\"schema-input full-width\\\">\\n                                    <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                    <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                    <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                                </mat-select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <mat-card-actions>\\n                        <div class=\\\"flex mb-4 mt-4\\\">\\n                            <span class=\\\"fill-remaining-space\\\"></span>\\n                            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addParameter()\\\"><mat-icon>add</mat-icon> AGREGAR</button>\\n                        </div>\\n                    </mat-card-actions>\\n                </mat-card>\\n        \\n                <ng-template #ConDiferenciacion>\\n                    <mat-card class=\\\"mt-4\\\">\\n                        <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                        <div class=\\\"row mb-2\\\">\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"full-width text-sm-center\\\">Ponderaci√≥n (%)</div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"mb-1\\\" formArrayName=\\\"parameters_schema\\\" *ngFor=\\\"let parameter of this.IndicatorForm.controls.parameters_schema['controls']; let i = index\\\">\\n                            <div class=\\\"row mb-3\\\" [formGroupName]=\\\"i\\\">\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                                </div>\\n                                <div class=\\\"col-sm-3\\\" formArrayName=\\\"weighing\\\">\\n                                    <div class=\\\"row\\\" [formGroupName]=\\\"0\\\">\\n                                        <div class=\\\"col-sm-6\\\">\\n                                            <input type=\\\"number\\\" formControlName=\\\"older\\\" class=\\\"schema-input full-width\\\">\\n                                        </div>\\n                                        <div class=\\\"col-sm-6\\\">\\n                                            <input type=\\\"number\\\" formControlName=\\\"newer\\\" class=\\\"schema-input full-width\\\">\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <mat-select formControlName=\\\"isAcum\\\" class=\\\"schema-input full-width\\\">\\n                                        <mat-option value=\\\"Si\\\">S√≠</mat-option>\\n                                        <mat-option value=\\\"No\\\">No</mat-option>\\n                                    </mat-select>\\n                                </div>\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <mat-select formControlName=\\\"unit\\\" class=\\\"schema-input full-width\\\">\\n                                        <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                        <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                        <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                                    </mat-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-3\\\"></div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"font-weight-lighter full-width text-center\\\">Antigua</div>\\n                                    </div>\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"font-weight-lighter full-width text-center\\\">Nueva</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\"></div>\\n                            <div class=\\\"col-sm-3\\\"></div>\\n                        </div>\\n                        <mat-card-actions>\\n                            <div class=\\\"flex mb-4 mt-4\\\">\\n                                <span class=\\\"fill-remaining-space\\\"></span>\\n                                <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addParameter()\\\"><mat-icon>add</mat-icon> AGREGAR</button>\\n                            </div>\\n                        </mat-card-actions>\\n                    </mat-card>\\n                </ng-template>\\n        \\n                <!--Definici√≥n de los Par√°metros-->\\n                <mat-card class=\\\"mt-4 mb-4\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Definici√≥n de los Par√°metros</mat-card-title>\\n                    <div class=\\\"definition-box mt-2 mb-4\\\">\\n                        <mat-list> \\n                            <span class=\\\"definition-column-label\\\">Par√°metro</span>\\n                            <li *ngFor=\\\"let parameter of this.IndicatorForm.controls.parameters_schema['controls']; let i = index\\\">\\n                                <button mat-flat-button type=\\\"button\\\" *ngIf=\\\"this.ParameterSelected && i == this.ParameterSelected; else NoSelected\\\" (click)=\\\"this.ParameterSelected = i\\\" class=\\\"font-weight-lighter selected-parameter full-width\\\">{{parameter['controls'].name.value}}</button>\\n                                <ng-template #NoSelected>\\n                                    <button mat-flat-button type=\\\"button\\\" (click)=\\\"this.ParameterSelected = i\\\" class=\\\"font-weight-lighter full-width\\\">{{parameter['controls'].name.value}}</button>\\n                                </ng-template>\\n                            </li>\\n                        </mat-list>\\n                        <mat-list>\\n                            <span class=\\\"definition-column-label\\\">Campos de la Ficha:</span>\\n                            <div *ngIf=\\\"this.ParameterSelected != null\\\">\\n                                <button mat-button type=\\\"button\\\" class=\\\"font-weight-lighter full-width\\\" (dblclick)=\\\"addFieldToDefinition(field['controls'].name.value)\\\" *ngFor=\\\"let field of this.IndicatorForm.controls.record_schema['controls']\\\">{{field['controls'].name.value}}</button>\\n                            </div>\\n                        </mat-list>\\n                        <mat-list class=\\\"definition-column\\\">\\n                            <span class=\\\"definition-column-label\\\">Definici√≥n del Par√°metro</span>\\n                            <div class=\\\"definition-space\\\">\\n                                <mat-chip-list *ngIf=\\\"this.ParameterSelected != null\\\" #chipList aria-label=\\\"Fields selection\\\">\\n                                    <mat-chip *ngFor=\\\"let field of this.IndicatorForm.controls.parameters_schema['controls'][this.ParameterSelected].controls.definition.controls; let i = index\\\" [selectable]=\\\"true\\\" [removable]=\\\"true\\\" (removed)=\\\"remove(i)\\\">\\n                                        {{field.value}}<mat-icon matChipRemove *ngIf=\\\"true\\\">cancel</mat-icon>\\n                                    </mat-chip>\\n                                </mat-chip-list>\\n                            </div>\\n                            <div class=\\\"botonera flex justify-content-center\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator('+')\\\" class=\\\"botonera-btn mr-1\\\">+</button>\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator('-')\\\" class=\\\"botonera-btn mr-1\\\">-</button>\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator('*')\\\" class=\\\"botonera-btn mr-1\\\">*</button>\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator('/')\\\" class=\\\"botonera-btn mr-1\\\">/</button>\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator('(')\\\" class=\\\"botonera-btn mr-1\\\">(</button>\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator(')')\\\" class=\\\"botonera-btn mr-1\\\">)</button>\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator('*100%')\\\" class=\\\"botonera-btn\\\">*100%</button>\\n                            </div>\\n                        </mat-list>\\n                    </div>\\n                </mat-card>\\n        \\n            </ng-template>\\n        \\n            <app-button-group class=\\\"mt-4\\\" [formStatus]=\\\"false\\\" (cancel)=\\\"cancel()\\\" (save)=\\\"saveIndicator()\\\"></app-button-group>\\n        \\n        </form>\\n    </ng-template>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar\\n    title=\\\"Indicadores\\\"\\n    [backButton]=\\\"false\\\"\\n    [addButton]=\\\"this.userRole == 'Administrador' || this.userRole == 'Coordinador'\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\" *ngIf=\\\"this.Indicators.length; else NoIndicators\\\">\\n    <div class=\\\"container full-height\\\">\\n        <div class=\\\"row full-height\\\">\\n            <div class=\\\"col-sm-6 flex\\\">\\n                <mat-card class=\\\"align-self-center full-width\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Buscar:</mat-card-title>\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"search\\\" (keyup)=\\\"filter()\\\" [(ngModel)]=\\\"this.search_term\\\" placeholder=\\\"Nombre\\\">\\n                    </mat-form-field>\\n                </mat-card>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <h2 class=\\\"list-title full-width\\\">Indicadores Registrados</h2>\\n                <mat-list class=\\\"scroll-list-view bordered-list\\\">\\n                    <a mat-button *ngFor=\\\"let indicator of this.filteredList\\\" [routerLink]=\\\"[indicator._id]\\\" class=\\\"full-width text-left font-weight-lighter\\\">{{indicator.name}}</a>\\n                </mat-list>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #NoIndicators>\\n    <div class=\\\"page-content flex justify-content-center align-items-center\\\">\\n        <div>\\n            <h2 class=\\\"text-center font-weight-lighter\\\">No hay Indicadores registrados</h2>\\n            <div class=\\\"font-weight-lighter\\\">\\n                Para agregar indicadores dale click al boton \\\"Agregar\\\" de la esquina superior derecha.\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\"","export default \"<app-sub-toolbar\\n    title=\\\"Nuevo Indicador\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [importantBack]=\\\"true\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <form [formGroup]=\\\"this.indicatorForm\\\" (ngSubmit)=\\\"saveIndicator()\\\">\\n        <mat-card class=\\\"pb-3\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Informaci√≥n General</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre del Indicador\\\">\\n                        <mat-error *ngIf=\\\"this.nameCtrl.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"!this.nameCtrl.errors?.required && this.nameCtrl.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Tipo de Indicador</mat-label>\\n                        <mat-select formControlName=\\\"type\\\" (valueChange)=\\\"changeType($event)\\\">\\n                            <mat-option value=\\\"Simple\\\">Simple</mat-option>\\n                            <mat-option value=\\\"Compuesto\\\">Compuesto</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"flex mt-3 justify-content-center\\\">\\n                <mat-checkbox *ngIf=\\\"this.typeCtrl.value == 'Compuesto'\\\" formControlName=\\\"antiquity_diff\\\">Diferenciar entre organizaciones nuevas y antiguas</mat-checkbox>\\n            </div>\\n        </mat-card>\\n\\n        <!--Par√°metros Indicador Simple-->\\n        <div class=\\\"mt-4\\\" *ngIf=\\\"this.typeCtrl.value == 'Simple'; else EsquemaCompuesto\\\">\\n            <mat-card>\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Descripci√≥n del Indicador</mat-card-title>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <textarea matInput #input [formControl]=\\\"this.descriptionCtrl\\\" maxlength=\\\"250\\\" placeholder=\\\"Escriba una breve descripci√≥n del Indicador Simple aqu√≠...\\\"></textarea>\\n                            <mat-error *ngIf=\\\"this.descriptionCtrl.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                            <mat-error *ngIf=\\\"!this.descriptionCtrl.errors?.required && this.descriptionCtrl.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/250</mat-hint>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </mat-card>\\n            <mat-card class=\\\"mt-4 mb-4\\\" formGroupName=\\\"parameters_schema\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                <div class=\\\"row mb-2\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Frecuencia</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"frequency\\\">\\n                            <mat-option value=\\\"Mensual\\\">Mensual</mat-option>\\n                            <mat-option value=\\\"Trimestral\\\">Trimestral</mat-option>\\n                            <mat-option value=\\\"Semestral\\\">Semestral</mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"isAcum\\\">\\n                            <mat-option value=\\\"Si\\\">Si</mat-option>\\n                            <mat-option value=\\\"No\\\">No</mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\" (click)=\\\"showData()\\\">\\n                        <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"unit\\\">\\n                            <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                            <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                            <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                        </mat-select>\\n                    </div>\\n                </div>\\n            </mat-card>\\n        </div>\\n\\n        <!--Esquema Indicador Compuesto-->\\n        <ng-template #EsquemaCompuesto>\\n            <mat-card class=\\\"mt-4\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Esquema de la Ficha</mat-card-title>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Frecuencia</div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                    </div>\\n                </div>\\n                <div formArrayName=\\\"record_schema\\\" *ngFor=\\\"let field of this.record_schemaCtrl.controls; let i = index\\\">\\n                    <div class=\\\"row mb-3\\\" [formGroupName]=\\\"i\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"frequency\\\">\\n                                <mat-option value=\\\"Mensual\\\">Mensual</mat-option>\\n                                <mat-option value=\\\"Trimestral\\\">Trimestral</mat-option>\\n                                <mat-option value=\\\"Semestral\\\">Semestral</mat-option>\\n                            </mat-select>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"unit\\\">\\n                                <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <mat-card-actions>\\n                    <div class=\\\"flex mb-4\\\">\\n                        <span class=\\\"fill-remaining-space\\\"></span>\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addField()\\\"><mat-icon>add</mat-icon> AGREGAR</button>\\n                    </div>\\n                </mat-card-actions>\\n            </mat-card>\\n\\n            <!--Par√°metros Indicador Compuesto Sin Diferenciaci√≥n-->\\n            <mat-card class=\\\"mt-4\\\" *ngIf=\\\"!this.antiquity_diffCtrl.value; else ConDiferenciacion\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                <div class=\\\"row mb-2\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Ponderaci√≥n (%)</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"mb-1\\\" formArrayName=\\\"parameters_schema\\\" *ngFor=\\\"let parameter of this.parameterCompuesto.controls; let i = index\\\">\\n                    <div class=\\\"row mb-3\\\" [formGroupName]=\\\"i\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\" formGroupName=\\\"weighing\\\">\\n                            <input type=\\\"number\\\" formControlName=\\\"weight\\\" class=\\\"schema-input full-width\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <mat-select formControlName=\\\"isAcum\\\" class=\\\"schema-input full-width\\\">\\n                                <mat-option value=\\\"S√≠\\\">S√≠</mat-option>\\n                                <mat-option value=\\\"No\\\">No</mat-option>\\n                            </mat-select>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <mat-select formControlName=\\\"unit\\\" class=\\\"schema-input full-width\\\">\\n                                <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <mat-card-actions>\\n                    <div class=\\\"flex mb-4 mt-4\\\">\\n                        <span class=\\\"fill-remaining-space\\\"></span>\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addParameter()\\\"><mat-icon>add</mat-icon> AGREGAR</button>\\n                    </div>\\n                </mat-card-actions>\\n            </mat-card>\\n\\n            <ng-template #ConDiferenciacion>\\n                <mat-card class=\\\"mt-4\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                    <div class=\\\"row mb-2\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Ponderaci√≥n (%)</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mb-1\\\" formArrayName=\\\"parameters_schema\\\" *ngFor=\\\"let parameter of this.parameterCompuesto.controls; let i = index\\\">\\n                        <div class=\\\"row mb-3\\\" [formGroupName]=\\\"i\\\">\\n                            <div class=\\\"col-sm-3\\\">\\n                                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"row\\\" formGroupName=\\\"weighing\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <input type=\\\"number\\\" formControlName=\\\"older\\\" class=\\\"schema-input full-width\\\">\\n                                    </div>\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <input type=\\\"number\\\" formControlName=\\\"newer\\\" class=\\\"schema-input full-width\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <mat-select formControlName=\\\"isAcum\\\" class=\\\"schema-input full-width\\\">\\n                                    <mat-option value=\\\"Si\\\">S√≠</mat-option>\\n                                    <mat-option value=\\\"No\\\">No</mat-option>\\n                                </mat-select>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <mat-select formControlName=\\\"unit\\\" class=\\\"schema-input full-width\\\">\\n                                    <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                    <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                    <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                                </mat-select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-3\\\"></div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"font-weight-lighter full-width text-center\\\">Antigua</div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"font-weight-lighter full-width text-center\\\">Nueva</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\"></div>\\n                        <div class=\\\"col-sm-3\\\"></div>\\n                    </div>\\n                    <mat-card-actions>\\n                        <div class=\\\"flex mb-4 mt-4\\\">\\n                            <span class=\\\"fill-remaining-space\\\"></span>\\n                            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addParameter()\\\"><mat-icon>add</mat-icon> AGREGAR</button>\\n                        </div>\\n                    </mat-card-actions>\\n                </mat-card>\\n            </ng-template>\\n\\n            <!--Definici√≥n de los Par√°metros-->\\n            <mat-card class=\\\"mt-4 mb-4\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Definici√≥n de los Par√°metros</mat-card-title>\\n                <div class=\\\"definition-box mt-2 mb-4\\\">\\n                    <mat-list> \\n                        <span class=\\\"definition-column-label\\\">Par√°metro</span>\\n                        <li *ngFor=\\\"let parameter of this.parameterCompuesto.controls; let i = index\\\">\\n                            <button mat-flat-button type=\\\"button\\\" *ngIf=\\\"this.parameterSelected && i == this.parameterSelected; else NoSelected\\\" (click)=\\\"this.parameterSelected = i\\\" class=\\\"font-weight-lighter selected-parameter full-width\\\">{{parameter['controls'].name.value}}</button>\\n                            <ng-template #NoSelected>\\n                                <button mat-flat-button type=\\\"button\\\" (click)=\\\"this.parameterSelected = i\\\" class=\\\"font-weight-lighter full-width\\\">{{parameter['controls'].name.value}}</button>\\n                            </ng-template>\\n                        </li>\\n                    </mat-list>\\n                    <mat-list>\\n                        <span class=\\\"definition-column-label\\\">Campos de la Ficha:</span>\\n                        <div *ngIf=\\\"this.parameterSelected != null\\\">\\n                            <button mat-button type=\\\"button\\\" class=\\\"font-weight-lighter full-width\\\" (dblclick)=\\\"addFieldToDefinition(field['controls'].name.value)\\\" *ngFor=\\\"let field of this.record_schemaCtrl.controls\\\">{{field['controls'].name.value}}</button>\\n                        </div>\\n                    </mat-list>\\n                    <mat-list class=\\\"definition-column\\\">\\n                        <span class=\\\"definition-column-label\\\">Definici√≥n del Par√°metro</span>\\n                        <div class=\\\"definition-space\\\">\\n                            <mat-chip-list *ngIf=\\\"this.parameterSelected != null\\\" #chipList aria-label=\\\"Fields selection\\\">\\n                                <mat-chip *ngFor=\\\"let field of this.parameterCompuesto.controls[this.parameterSelected].controls.definition.controls; let i = index\\\" [selectable]=\\\"true\\\" [removable]=\\\"true\\\" (removed)=\\\"remove(i)\\\">\\n                                    {{field.value}}<mat-icon matChipRemove *ngIf=\\\"true\\\">cancel</mat-icon>\\n                                </mat-chip>\\n                            </mat-chip-list>\\n                        </div>\\n                        <div class=\\\"botonera flex justify-content-center\\\">\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator('+')\\\" class=\\\"botonera-btn mr-1\\\">+</button>\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator('-')\\\" class=\\\"botonera-btn mr-1\\\">-</button>\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator('*')\\\" class=\\\"botonera-btn mr-1\\\">*</button>\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator('/')\\\" class=\\\"botonera-btn mr-1\\\">/</button>\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator('(')\\\" class=\\\"botonera-btn mr-1\\\">(</button>\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator(')')\\\" class=\\\"botonera-btn mr-1\\\">)</button>\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator('*100%')\\\" class=\\\"botonera-btn\\\">*100%</button>\\n                        </div>\\n                    </mat-list>\\n                </div>\\n            </mat-card>\\n\\n        </ng-template>\\n\\n        <app-button-group class=\\\"mt-4\\\" [formStatus]=\\\"false\\\" (cancel)=\\\"cancel()\\\" (save)=\\\"saveIndicator()\\\"></app-button-group>\\n\\n    </form>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<div class=\\\"flex justify-content-center full-width full-height\\\">\\n    <div class=\\\"align-self-center border border-radius\\\">\\n        <div class=\\\"card p-4\\\" id=\\\"login-box\\\">\\n            <img src=\\\"../../../../assets/images/logo-sisi-only.svg\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\">\\n            <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title text-center\\\">Inicio de Sesi√≥n</h5>\\n            </div>\\n            <form [formGroup]=\\\"this.LoginForm\\\" (ngSubmit)=\\\"login()\\\">\\n                <label class=\\\"sr-only\\\" for=\\\"Username\\\">Nombre de Usuario</label>\\n                <div class=\\\"mb-3 mr-sm-2\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <div class=\\\"input-group-text\\\" [ngClass]=\\\"{'invalidate-input': this.LoginForm.controls['username'].touched && this.LoginForm.controls['username'].invalid}\\\"><mat-icon>person</mat-icon></div>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'invalidate-input': this.LoginForm.controls['username'].touched && this.LoginForm.controls['username'].invalid}\\\" formControlName=\\\"username\\\" id=\\\"Username\\\" placeholder=\\\"Nombre de Usuario\\\">\\n                    </div>\\n                    <small class=\\\"validate-msg\\\" *ngIf=\\\"this.LoginForm.controls['username'].touched && this.LoginForm.controls['username'].invalid\\\">Este campo es obligatorio</small>\\n                </div>\\n                <label class=\\\"sr-only\\\" for=\\\"Password\\\">Contrase√±a</label>\\n                <div class=\\\"mb-4 mr-sm-2\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <div class=\\\"input-group-text\\\" [ngClass]=\\\"{'invalidate-input': this.LoginForm.controls['password'].touched && this.LoginForm.controls['password'].invalid}\\\"><mat-icon>lock</mat-icon></div>\\n                        </div>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'invalidate-input': this.LoginForm.controls['password'].touched && this.LoginForm.controls['password'].invalid}\\\" formControlName=\\\"password\\\" id=\\\"Password\\\" placeholder=\\\"Contrase√±a\\\">\\n                    </div>\\n                    <small class=\\\"validate-msg\\\" *ngIf=\\\"this.LoginForm.controls['password'].touched && this.LoginForm.controls['password'].errors?.required\\\">Este campo es obligatorio</small>\\n                    <small class=\\\"validate-msg\\\" *ngIf=\\\"this.LoginForm.controls['password'].errors?.minlength\\\">La contrase√±a debe tener al menos {{this.LoginForm.controls['password'].errors.minlength.requiredLength}} caracteres</small>\\n                </div>\\n                <div class=\\\"flex justify-content-center mt-4\\\">\\n                    <div>\\n                        <button mat-button-raised class=\\\"d-block full-width btn btn-primary align-content-center\\\" type=\\\"submit\\\" [disabled]=\\\"this.LoginForm.invalid\\\">INGRESAR</button>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","export default \"<app-sub-toolbar\\n    title=\\\"Nueva Organizaci√≥n\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [importantBack]=\\\"true\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <form [formGroup]=\\\"this.organizationForm\\\" (ngSubmit)=\\\"this.saveOrganization()\\\">\\n        <mat-card>\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Datos Generales</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre de la Organizaci√≥n\\\">\\n                        <mat-error *ngIf=\\\"this.nameCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                        <mat-error *ngIf=\\\"this.nameCtrl.errors?.exist\\\">Ya existe una organizaci√≥n con ese nombre</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" (blur)=\\\"setOlder($event)\\\" formControlName=\\\"foundation_date\\\" placeholder=\\\"Fecha de Constituci√≥n\\\">\\n                        <mat-hint>Ingrese la fecha en formato: <b>01/01/2019</b></mat-hint>\\n                        <mat-error *ngIf=\\\"this.foundation_dateCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                        <mat-error *ngIf=\\\"this.foundation_dateCtrl.errors?.pattern\\\">Ingrese una fecha v√°lida</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Sector:</mat-label>\\n                        <mat-select formControlName=\\\"sector\\\">\\n                          <mat-option *ngFor=\\\"let sector of this.Sectors\\\" [value]=\\\"sector\\\">\\n                              {{sector}}\\n                          </mat-option>\\n                          <button *ngIf=\\\"!this.newSector\\\" mat-button class=\\\"full-width\\\" (click)=\\\"this.addNewSector()\\\"><mat-icon>add</mat-icon> A√±adir nuevo...</button>\\n                        </mat-select>\\n                    </mat-form-field>    \\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Tipo de Organizaci√≥n:</mat-label>\\n                        <mat-select formControlName=\\\"type\\\">\\n                            <mat-option *ngFor=\\\"let type of this.Types\\\" [value]=\\\"type\\\">\\n                                {{type}}\\n                            </mat-option>\\n                            <button mat-button class=\\\"full-width\\\" (click)=\\\"this.addNewType()\\\"><mat-icon>add</mat-icon> A√±adir nuevo...</button>\\n                        </mat-select>\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>    \\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Legalizada:</mat-label>\\n                        <mat-select formControlName=\\\"legalized\\\">\\n                            <mat-option value=\\\"Si\\\">\\n                                S√≠\\n                            </mat-option>\\n                            <mat-option value=\\\"No\\\">\\n                                No\\n                            </mat-option>\\n                        </mat-select>\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>    \\n                </div>\\n            </div>\\n        </mat-card>\\n        <!--Parte de Localizaci√≥n-->\\n        <mat-card class=\\\"mt-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Localidad</mat-card-title>\\n            <div class=\\\"row\\\" formGroupName=\\\"ubication\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"canton\\\" placeholder=\\\"Cant√≥n\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"parroquia\\\" placeholder=\\\"Parroquia\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"recinto\\\" placeholder=\\\"Recinto\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card>\\n        <!--Parte de Beneficiarios-->\\n        <mat-card class=\\\"mt-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Socios y Baneficiarios</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-8\\\">\\n                    <div class=\\\"row\\\" formGroupName=\\\"partners\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <mat-form-field class=\\\"full-width\\\">\\n                                <input matInput type=\\\"text\\\" formControlName=\\\"mens\\\" placeholder=\\\"Socios Hombres\\\">\\n                                <mat-hint>Ingrese un n√∫mero, por favor.</mat-hint>\\n                                <mat-error *ngIf=\\\"this.mensCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                <mat-error *ngIf=\\\" this.mensCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica</mat-error>\\n                            </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <mat-form-field class=\\\"full-width\\\">\\n                                <input matInput type=\\\"text\\\" formControlName=\\\"womens\\\" placeholder=\\\"Socios Mujeres\\\">\\n                                <mat-hint>Ingrese un n√∫mero, por favor.</mat-hint>\\n                                <mat-error *ngIf=\\\"this.womensCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                <mat-error *ngIf=\\\"this.womensCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica</mat-error>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"beneficiaries\\\" placeholder=\\\"Beneficiarios\\\">\\n                        <mat-hint>Ingrese un n√∫mero, por favor.</mat-hint>\\n                        <mat-error *ngIf=\\\"this.organizationForm.controls['beneficiaries'].errors?.required\\\">Este campo es obligatorio</mat-error>\\n                        <mat-error *ngIf=\\\"this.organizationForm.controls['beneficiaries'].errors?.pattern\\\">Debe ingresar una cantidad num√©rica</mat-error>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card>\\n        <!--Clasificaci√≥n de la Organizaci√≥n en Nueva o Antigua-->\\n        <div class=\\\"text-center p-4 m-4\\\">\\n            La organizaci√≥n clasifica como <b *ngIf=\\\"!this.isOlder; else AntiguaTemplate\\\">Nueva</b><ng-template #AntiguaTemplate><b>Antigua</b></ng-template>\\n        </div>\\n\\n        <app-form-buttons [formGroup]=\\\"this.organizationForm\\\"></app-form-buttons>\\n\\n    </form>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar *ngIf=\\\"this.userRole == 'Administrador'\\\"\\n    [title]=\\\"this.Organization.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [buttons]=\\\"this.buttons\\\"\\n    [importantBack]=\\\"this.editMode\\\"\\n    [editButton]=\\\"!this.editMode\\\" (editClick)=\\\"this.edit()\\\">\\n</app-sub-toolbar>\\n\\n<app-sub-toolbar *ngIf=\\\"this.userRole == 'Coordinador'\\\"\\n    [title]=\\\"this.Organization.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [buttons]=\\\"[this.buttons[0]]\\\"\\n    [importantBack]=\\\"this.editMode\\\"\\n    [editButton]=\\\"!this.editMode\\\" (editClick)=\\\"this.edit()\\\">\\n</app-sub-toolbar>\\n\\n<app-sub-toolbar *ngIf=\\\"this.userRole != 'Administrador' && this.userRole != 'Coordinador'\\\"\\n    [title]=\\\"this.Organization.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [buttons]=\\\"[this.buttons[0]]\\\">\\n</app-sub-toolbar>\\n\\n    <div>\\n        <mat-tab-group mat-stretch-tabs class=\\\"full-height\\\"> \\n            <mat-tab label=\\\"Infomaci√≥n General\\\">\\n                <div class=\\\"container pb-3 pt-3 border-box\\\">\\n                    <form [formGroup]=\\\"this.organizationForm\\\" (ngSubmit)=\\\"this.updateOrganization()\\\">\\n                        <mat-card>\\n                            <mat-card-title class=\\\"font-weight-lighter\\\">Datos Generales</mat-card-title>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre de la Organizaci√≥n\\\">\\n                                        <mat-error *ngIf=\\\"this.nameCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <input matInput type=\\\"text\\\" (blur)=\\\"setOlder($event)\\\" formControlName=\\\"foundation_date\\\" placeholder=\\\"Fecha de Constituci√≥n\\\">\\n                                        <mat-hint>Ingrese la fecha en formato: <b>01/01/2019</b></mat-hint>\\n                                        <mat-error *ngIf=\\\"this.foundation_dateCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                        <mat-error *ngIf=\\\"this.foundation_dateCtrl.errors?.pattern\\\">Ingrese una fecha v√°lida</mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <mat-label>Sector:</mat-label>\\n                                        <mat-select formControlName=\\\"sector\\\">\\n                                        <mat-option value=\\\"Cacao\\\">\\n                                            Cacao\\n                                        </mat-option>\\n                                        <mat-option value=\\\"Agricultura\\\">\\n                                            Agricultura\\n                                        </mat-option>\\n                                        <mat-option value=\\\"Turismo\\\">\\n                                            Turismo\\n                                        </mat-option>\\n                                        <button mat-button><mat-icon>add</mat-icon> A√±adir nuevo...</button>\\n                                        </mat-select>\\n                                    </mat-form-field>    \\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <mat-label>Tipo de Organizaci√≥n:</mat-label>\\n                                        <mat-select formControlName=\\\"type\\\">\\n                                            <mat-option value=\\\"SFL\\\">\\n                                                SFL\\n                                            </mat-option>\\n                                            <mat-option value=\\\"Empresa\\\">\\n                                                Empresa\\n                                            </mat-option>\\n                                            <mat-option value=\\\"Asociaci√≥n\\\">\\n                                                Asociaci√≥n\\n                                            </mat-option>\\n                                            <button mat-button><mat-icon>add</mat-icon> A√±adir nuevo...</button>\\n                                        </mat-select>\\n                                        <mat-error>Este campo es obligatorio</mat-error>\\n                                    </mat-form-field>    \\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <mat-label>Legalizada:</mat-label>\\n                                        <mat-select formControlName=\\\"legalized\\\">\\n                                            <mat-option value=\\\"Si\\\">\\n                                                S√≠\\n                                            </mat-option>\\n                                            <mat-option value=\\\"No\\\">\\n                                                No\\n                                            </mat-option>\\n                                        </mat-select>\\n                                        <mat-error>Este campo es obligatorio</mat-error>\\n                                    </mat-form-field>    \\n                                </div>\\n                            </div>\\n                        </mat-card>\\n                        <!--Parte de Localizaci√≥n-->\\n                        <mat-card class=\\\"mt-4\\\">\\n                            <mat-card-title class=\\\"font-weight-lighter\\\">Localidad</mat-card-title>\\n                            <div class=\\\"row\\\" formGroupName=\\\"ubication\\\">\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <input matInput type=\\\"text\\\" formControlName=\\\"canton\\\" placeholder=\\\"Cant√≥n\\\">\\n                                        <mat-error>Este campo es obligatorio</mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <input matInput type=\\\"text\\\" formControlName=\\\"parroquia\\\" placeholder=\\\"Parroquia\\\">\\n                                        <mat-error>Este campo es obligatorio</mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <input matInput type=\\\"text\\\" formControlName=\\\"recinto\\\" placeholder=\\\"Recinto\\\">\\n                                        <mat-error>Este campo es obligatorio</mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                        </mat-card>\\n                        <!--Parte de Beneficiarios-->\\n                        <mat-card class=\\\"mt-4\\\">\\n                            <mat-card-title class=\\\"font-weight-lighter\\\">Socios y Baneficiarios</mat-card-title>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <div class=\\\"row\\\" formGroupName=\\\"partners\\\">\\n                                        <div class=\\\"col-sm-6\\\">\\n                                            <mat-form-field class=\\\"full-width\\\">\\n                                                <input matInput type=\\\"text\\\" formControlName=\\\"mens\\\" placeholder=\\\"Socios Hombres\\\">\\n                                                <mat-hint>Ingrese un n√∫mero, por favor.</mat-hint>\\n                                                <mat-error *ngIf=\\\"this.mensCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                                <mat-error *ngIf=\\\" this.mensCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica</mat-error>\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"col-sm-6\\\">\\n                                            <mat-form-field class=\\\"full-width\\\">\\n                                                <input matInput type=\\\"text\\\" formControlName=\\\"womens\\\" placeholder=\\\"Socios Mujeres\\\">\\n                                                <mat-hint>Ingrese un n√∫mero, por favor.</mat-hint>\\n                                                <mat-error *ngIf=\\\"this.womensCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                                <mat-error *ngIf=\\\"this.womensCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica</mat-error>\\n                                            </mat-form-field>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <input matInput type=\\\"text\\\" formControlName=\\\"beneficiaries\\\" placeholder=\\\"Beneficiarios\\\">\\n                                        <mat-hint>Ingrese un n√∫mero, por favor.</mat-hint>\\n                                        <mat-error *ngIf=\\\"this.organizationForm.controls['beneficiaries'].errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                        <mat-error *ngIf=\\\"this.organizationForm.controls['beneficiaries'].errors?.pattern\\\">Debe ingresar una cantidad num√©rica</mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                        </mat-card>\\n                        <!--Clasificaci√≥n de la Organizaci√≥n en Nueva o Antigua-->\\n                        <div class=\\\"text-center p-4 m-4\\\">\\n                            La organizaci√≥n clasifica como <b *ngIf=\\\"!this.isOlder; else AntiguaTemplate\\\">Nueva</b><ng-template #AntiguaTemplate><b>Antigua</b></ng-template>\\n                        </div>\\n                        \\n                        <app-button-group *ngIf=\\\"this.editMode\\\" [formStatus]=\\\"this.organizationForm.pristine\\\" (save)=\\\"updateOrganization()\\\" (cancel)=\\\"onCancel()\\\" [formGroup]=\\\"this.organizationForm\\\"></app-button-group>\\n                        \\n                    </form>                    \\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"Proyectos Asociados\\\">\\n                <div class=\\\"container pb-3 pt-3 border-box\\\">\\n                    \\n                        <!--Secci√≥n de los Proyectos-->\\n                        <div class=\\\"row\\\" *ngIf=\\\"this.Organization.projects.length; else NoProjects\\\">\\n                            <div class=\\\"col-sm-4 mb-4\\\" *ngFor=\\\"let project of this.Organization.projects\\\">\\n                                <mat-card>\\n                                    <mat-card-title class=\\\"font-weight-lighter\\\">{{project.name}}</mat-card-title>\\n                                    <mat-divider></mat-divider>\\n                                    <mat-card-content>\\n                                        <mat-list>\\n                                            <li class=\\\"pt-2\\\">\\n                                                <span>\\n                                                    Fecha de Inicio: <span class=\\\"font-weight-lighter\\\">{{project.start_date}}</span>\\n                                                </span>\\n                                            </li>\\n                                            <li class=\\\"mt-2\\\">\\n                                                <span>\\n                                                    Ubicaci√≥n: <span class=\\\"font-weight-lighter\\\">{{project.ubication}}</span>\\n                                                </span>\\n                                            </li>\\n                                            <li class=\\\"mt-2\\\">\\n                                                <span>\\n                                                    Duraci√≥n: <span class=\\\"font-weight-lighter\\\">{{project.duration}} meses</span>\\n                                                </span>\\n                                            </li>\\n                                        </mat-list>\\n                                    </mat-card-content>\\n                                    <mat-card-actions>\\n                                        <div class=\\\"flex\\\">\\n                                            <span class=\\\"fill-remaining-space\\\"></span>\\n                                            <a mat-button [routerLink]=\\\"['/projects',project._id]\\\">DETALLES</a>\\n                                        </div>\\n                                    </mat-card-actions>\\n                                </mat-card>\\n                            </div>\\n                        </div>\\n                    \\n                        <ng-template #NoProjects>\\n                            <div class=\\\"full-height full-width flex justify-content-center align-items-center\\\">\\n                                <div>\\n                                    <h2 class=\\\"text-center font-weight-lighter\\\">No hay Proyectos registrados</h2>\\n                                    <div class=\\\"font-weight-lighter\\\">\\n                                        Para agregar un nuevo proyecto dale click al boton \\\"Agregar\\\" de la esquina superior derecha.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </ng-template>\\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"Documentos\\\">\\n                <div class=\\\"container pb-3 pt-3 border-box\\\">\\n                    <app-upload-box [organization_files]=\\\"this.Organization.files\\\" [organization_id]=\\\"this.Organization._id\\\" [organization_name]=\\\"this.Organization.name\\\"></app-upload-box>\\n                </div>\\n            </mat-tab>\\n        </mat-tab-group>\\n    </div>\\n\\n    <app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar\\n    title=\\\"Organizaciones\\\"\\n    [addButton]=\\\"(this.userRole == 'T√©cnico' || this.userRole == 'Coordinador' || this.userRole == 'Administrador')\\\"\\n    [backButton]=\\\"false\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"this.Organizations.length; else NoOrganizations\\\">\\n        <div class=\\\"mb-4 col-sm-4\\\" *ngFor=\\\"let organization of this.Organizations\\\">\\n            <mat-card>\\n                <mat-card-title class=\\\"font-weight-lighter\\\">{{organization.name}}</mat-card-title>\\n                <mat-card-subtitle>{{organization.type}}</mat-card-subtitle>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <mat-list>\\n                        <li class=\\\"pt-2\\\">\\n                            <span>\\n                                Sector: <span class=\\\"font-weight-lighter\\\">{{organization.sector}}</span>\\n                            </span>\\n                        </li>\\n                        <li class=\\\"mt-2\\\">\\n                            <span>\\n                                Ubicaci√≥n: <span class=\\\"font-weight-lighter\\\">{{organization.ubication.parroquia}}, {{organization.ubication.canton}}</span>\\n                            </span>\\n                        </li>\\n                        <li class=\\\"mt-2\\\">\\n                            <span>\\n                                Fecha de constituci√≥n: <span class=\\\"font-weight-lighter\\\">{{organization.foundation_date}}</span>\\n                            </span>\\n                        </li>\\n                    </mat-list>\\n                </mat-card-content>\\n                <div class=\\\"flex\\\">\\n                    <span class=\\\"fill-remaining-space\\\"></span>\\n                    <button mat-button [routerLink]=\\\"[organization._id,'partners']\\\">SOCIOS</button>\\n                    <button mat-button [routerLink]=\\\"[organization._id]\\\">DETALLES</button>\\n                </div>\\n            </mat-card>\\n        </div>\\n    </div>\\n\\n    <ng-template #NoOrganizations>\\n        <div class=\\\"full-height full-width flex justify-content-center align-items-center\\\">\\n            <div>\\n                <h2 class=\\\"text-center font-weight-lighter\\\">No hay Organizaciones registradas</h2>\\n                <div class=\\\"font-weight-lighter\\\">\\n                    Para agregar organizaciones dale click al boton \\\"Agregar\\\" de la esquina superior derecha.\\n                </div>\\n            </div>\\n        </div>\\n    </ng-template>\\n\\n</div>\\n\"","export default \"<app-sub-toolbar\\n    title=\\\"{{this.Organization.name}}: Hist√≥rico de Socios\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\">\\n</app-sub-toolbar>\\n\\n<div id=\\\"partners-historic\\\">\\n    <mat-tab-group mat-align-tabs=\\\"center\\\" class=\\\"full-width\\\">\\n        <mat-tab label=\\\"Gr√°fico\\\">\\n            <!--Graphic of Partner's Evolution-->\\n            <div id=\\\"graphic\\\" class=\\\"mt-307032017\\\">\\n                <div class=\\\"flex justify-content-center\\\">\\n                    <ngx-charts-line-chart *ngIf=\\\"this.multi\\\"\\n                        [view]=\\\"view\\\"\\n                        [scheme]=\\\"colorScheme\\\"\\n                        [legend]=\\\"legend\\\"\\n                        [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                        [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                        [xAxis]=\\\"xAxis\\\"\\n                        [yAxis]=\\\"yAxis\\\"\\n                        [xAxisLabel]=\\\"xAxisLabel\\\"\\n                        [yAxisLabel]=\\\"yAxisLabel\\\"\\n                        [timeline]=\\\"timeline\\\"\\n                        [results]=\\\"multi\\\"\\n                        (select)=\\\"onSelect($event)\\\"\\n                        (activate)=\\\"onActivate($event)\\\"\\n                        (deactivate)=\\\"onDeactivate($event)\\\">\\n                    </ngx-charts-line-chart>\\n                </div>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Tabla\\\" class=\\\"full-width\\\">\\n            <!--Table-->\\n            <div class=\\\"mat-elevation-z8 full-width\\\">\\n                <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"full-width\\\">\\n              \\n                  <!-- Position Column -->\\n                  <ng-container matColumnDef=\\\"number\\\">\\n                    <th mat-header-cell *matHeaderCellDef> No. </th>\\n                    <td mat-cell *matCellDef=\\\"let registry\\\"> {{registry.number}} </td>\\n                  </ng-container>\\n              \\n                  <!-- Name Column -->\\n                  <ng-container matColumnDef=\\\"period\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Periodo </th>\\n                    <td mat-cell *matCellDef=\\\"let registry\\\"> {{registry.period}} </td>\\n                  </ng-container>\\n              \\n                  <!-- Weight Column -->\\n                  <ng-container matColumnDef=\\\"mens\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Socios Hombres </th>\\n                    <td mat-cell *matCellDef=\\\"let registry\\\"> {{registry.mens}} </td>\\n                  </ng-container>\\n              \\n                  <!-- Symbol Column -->\\n                  <ng-container matColumnDef=\\\"womens\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Socios Mujeres </th>\\n                    <td mat-cell *matCellDef=\\\"let registry\\\"> {{registry.womens}} </td>\\n                  </ng-container>\\n\\n                  <ng-container matColumnDef=\\\"total\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Total Socios </th>\\n                    <td mat-cell *matCellDef=\\\"let registry\\\"> {{registry.total}} </td>\\n                  </ng-container>\\n              \\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                </table>\\n              \\n                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n              </div>\\n              \\n        </mat-tab>\\n    </mat-tab-group>\\n</div>\"","export default \"<app-sub-toolbar\\n    title=\\\"{{this.Organization.name}}: Socios\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [buttons]=\\\"this.buttons\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n\\n    <div>\\n        <mat-card>\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Socios Iniciales</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput disabled [ngModel]=\\\"this.Organization.partners.mens\\\" type=\\\"text\\\" placeholder=\\\"Socios Hombres\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput disabled [ngModel]=\\\"this.Organization.partners.womens\\\" type=\\\"text\\\" placeholder=\\\"Socios Mujeres\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput disabled [ngModel]=\\\"this.Organization.partners.mens + this.Organization.partners.womens\\\" type=\\\"text\\\" placeholder=\\\"Total Socios\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <mat-divider></mat-divider>\\n            <mat-card-title class=\\\"font-weight-lighter mt-2\\\">Socios Actuales</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput disabled [ngModel]=\\\"this.ActualPartners.mens\\\" type=\\\"text\\\" placeholder=\\\"Socios Hombres\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput disabled [ngModel]=\\\"this.ActualPartners.womens\\\" type=\\\"text\\\" placeholder=\\\"Socios Mujeres\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput disabled [ngModel]=\\\"this.ActualPartners.total\\\" type=\\\"text\\\" placeholder=\\\"Total Socios\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card>\\n        <mat-card class=\\\"mt-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter mt-2\\\">Nuevo Registro</mat-card-title>\\n            <form [formGroup]=\\\"this.PartnerForm\\\" (ngSubmit)=\\\"this.save()\\\" novalidate>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"mens\\\" placeholder=\\\"Socios Hombres\\\">\\n                            <mat-error *ngIf=\\\"this.mensCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"this.mensCtrl.errors?.pattern\\\">Ingrese una cantidad v√°lida, por favor.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"womens\\\" placeholder=\\\"Socios Mujeres\\\">\\n                            <mat-error *ngIf=\\\"this.womensCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"this.womensCtrl.errors?.pattern\\\">Ingrese una cantidad v√°lida, por favor.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input disabled matInput type=\\\"text\\\" value=\\\"{{this.toNumber(this.mensCtrl.value) + this.toNumber(this.womensCtrl.value)}}\\\" placeholder=\\\"Total Socios\\\">\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <app-form-buttons (cancel)=\\\"this.cancel()\\\" [formGroup]=\\\"this.PartnerForm\\\"></app-form-buttons>\\n            </form>\\n        </mat-card>\\n    </div>\\n\\n</div>\"","export default \"<app-sub-toolbar\\n    title=\\\"Nuevo Proyecto\\\"\\n    [addButton]=\\\"false\\\"\\n    [backButton]=\\\"true\\\"\\n    [importantBack]=\\\"true\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <form [formGroup]=\\\"ProjectFormGroup\\\">\\n        <mat-card>\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Datos Generales</mat-card-title> \\n            <div class=\\\"row pb-1\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre del Proyecto\\\">\\n                        <mat-error *ngIf=\\\"this.nameCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                        <mat-error *ngIf=\\\"this.nameCtrl.errors?.exist\\\">Ya existe un proyecto con ese nombre</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"start_date\\\" placeholder=\\\"Fecha de Inicio\\\">\\n                        <mat-hint>Ingrese la fecha en formato: <b>01/01/2019</b></mat-hint>\\n                        <mat-error *ngIf=\\\"this.start_dateCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                        <mat-error *ngIf=\\\"this.start_dateCtrl.errors?.pattern\\\">Ingrese una fecha v√°lida</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"duration\\\" placeholder=\\\"Duraci√≥n\\\">\\n                        <mat-hint>Ingrese la duraci√≥n del proyecto en meses.</mat-hint>\\n                        <mat-error *ngIf=\\\"this.durationCtrl.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"this.durationCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica.</mat-error>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card>                    \\n        \\n        <mat-card class=\\\"mt-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Presupuesto, Localidad y Beneficiarios</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <div formGroupName=\\\"budgets\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"total_inicial\\\" placeholder=\\\"Presupuesto Total Inicial\\\">\\n                            <mat-error *ngIf=\\\"this.budgetCtrl.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"this.budgetCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"ubication\\\" placeholder=\\\"Ubicaci√≥n (Cant√≥n)\\\">\\n                        <mat-error *ngIf=\\\"this.ubicationCtrl.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"!this.ubicationCtrl.errors?.required && this.ubicationCtrl.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <div formGroupName=\\\"beneficiaries\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"number\\\" placeholder=\\\"N√∫mero de Beneficiarios\\\">\\n                            <mat-error *ngIf=\\\"this.beneficiariesNumberCtrl.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"this.beneficiariesNumberCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </div>\\n        </mat-card>\\n        \\n        <mat-card class=\\\"mt-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Objetivos y Resultados</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <textarea matInput type=\\\"text\\\" formControlName=\\\"gen_objective\\\" placeholder=\\\"Objetivo General\\\"></textarea>\\n                        <mat-error *ngIf=\\\"this.objGeneralCtrl.errors?.required\\\">El Objetivo General es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"!this.objGeneralCtrl.errors?.required && this.objGeneralCtrl.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <mat-form-field class=\\\"full-width\\\" formArrayName=\\\"esp_objectives\\\" *ngFor=\\\"let objetivo of this.objEspeCtrl.controls; let i = index\\\">\\n                        <div *ngIf=\\\"i != 0\\\" class=\\\"form-control-equis\\\">\\n                            <mat-icon (click)=\\\"this.deleteObjective(i)\\\">clear</mat-icon>\\n                        </div>\\n                        <textarea matInput type=\\\"text\\\" [formControlName]=\\\"i\\\" placeholder=\\\"Objetivo Espec√≠fico\\\"></textarea>\\n                        <mat-error *ngIf=\\\"this.objEspeCtrl.controls[i].errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"!this.objEspeCtrl.controls[i].errors?.required && this.objEspeCtrl.controls[i].errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                    </mat-form-field>\\n                    <div class=\\\"flex\\\">\\n                        <span class=\\\"fill-remaining-space\\\"></span>\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addObjective()\\\">A√±adir Objetivo</button>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <mat-form-field class=\\\"full-width\\\" formArrayName=\\\"results\\\" *ngFor=\\\"let resultado of this.resultsCtrl.controls; let i = index\\\">\\n                        <div *ngIf=\\\"i != 0\\\" class=\\\"form-control-equis\\\">\\n                            <mat-icon (click)=\\\"this.deleteResult(i)\\\">clear</mat-icon>\\n                        </div>\\n                        <textarea matInput type=\\\"text\\\" [formControlName]=\\\"i\\\" placeholder=\\\"Resultado\\\"></textarea>\\n                        <mat-error *ngIf=\\\"this.resultsCtrl.controls[i].errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"!this.resultsCtrl.controls[i].errors?.required && this.resultsCtrl.controls[i].errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                    </mat-form-field>\\n                    <div class=\\\"flex\\\">\\n                        <span class=\\\"fill-remaining-space\\\"></span>\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addResult()\\\">A√±adir Resultado</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </mat-card>\\n                \\n        <mat-card class=\\\"mt-4\\\">\\n\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Financiadores, Indicadores y Organizaciones</mat-card-title>\\n            <div class=\\\"row mt-3\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <div>\\n                        <div class=\\\"project-list-title\\\">\\n                            Financiadores\\n                        </div>\\n                        <mat-selection-list class=\\\"projects-selection-list\\\">      \\n                            <mat-list-option class=\\\"font-weight-lighter\\\" *ngFor=\\\"let funder of this.Funders\\\" [value]=\\\"funder._id\\\" (click)=\\\"OnFundersListChange(funder._id)\\\">{{funder.name}}</mat-list-option>\\n                        </mat-selection-list>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <div>\\n                        <div class=\\\"project-list-title\\\">\\n                            Indicadores\\n                        </div>\\n                        <mat-selection-list class=\\\"projects-selection-list\\\" #IndicatorsList>\\n                            <mat-list-option class=\\\"font-weight-lighter\\\" *ngFor=\\\"let indicator of this.Indicators\\\" [value]=\\\"indicator._id\\\" (click)=\\\"OnIndicatorsListChange(indicator._id,IndicatorsList)\\\">{{indicator.name}}</mat-list-option>  \\n                        </mat-selection-list>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <div>\\n                        <div class=\\\"project-list-title\\\">\\n                            Organizaciones\\n                        </div>\\n                        <mat-selection-list class=\\\"projects-selection-list\\\" #OrganizationsList>\\n                            <mat-list-option class=\\\"font-weight-lighter\\\" *ngFor=\\\"let organization of this.Organizations\\\" [value]=\\\"organization._id\\\" (click)=\\\"OnOrganizationsListChange(organization._id,OrganizationsList)\\\">{{organization.name}}</mat-list-option>\\n                        </mat-selection-list>\\n                    </div>\\n                </div>\\n            </div>\\n        </mat-card>\\n                \\n        <mat-card class=\\\"mt-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">L√≠nea Base y Metas</mat-card-title>\\n            <mat-card-content>\\n                <div *ngIf=\\\"!this.goalsCtrl.length; else LineaBaseSchema\\\" class=\\\"col-sm-12 mt-3 mb-3 font-weight-lighter text-center\\\">No ha seleccionado ning√∫n Indicador ni Organizaci√≥n</div>\\n                <ng-template #LineaBaseSchema>\\n                    <div class=\\\"mt-3 mb-3 full-width font-weight-lighter\\\">\\n                        <div formArrayName=\\\"goals\\\" *ngFor=\\\"let indicator of this.goalsCtrl.controls; let i = index\\\">\\n                            <h5 [ngClass]=\\\"{'pt-3': i}\\\" class=\\\"font-weight-lighter\\\">{{indicator.get('indicator').value}}</h5>\\n                            <div [formGroupName]=\\\"i\\\">\\n                                <div formArrayName=\\\"organizations\\\" class=\\\"mb-2\\\" *ngFor=\\\"let organization of indicator.get('organizations')['controls']; let j = index\\\">\\n                                    <h6 class=\\\"mt-3\\\">{{organization.get('organization').value}}</h6>\\n                                    <div class=\\\"table-container\\\" [formGroupName]=\\\"j\\\">\\n                                        <table class=\\\"baseline-table\\\">\\n                                            <tr>\\n                                                <th class=\\\"sticky\\\"></th>\\n                                                <th *ngFor=\\\"let parameter of this.indicatorsSelected[i].parameters\\\">{{parameter.name}}</th>\\n                                            </tr>\\n                                            <tr>\\n                                                <td class=\\\"sticky\\\">\\n                                                    <div>L√≠nea Base</div>\\n                                                    <div>Meta (1er a√±o)</div>\\n                                                </td>\\n                                                <td formArrayName=\\\"parameters\\\" *ngFor=\\\"let parameter of organization.get('parameters')['controls']; let k = index\\\">\\n                                                    <div [formGroupName]=\\\"k\\\">\\n                                                        <input type=\\\"text\\\" class=\\\"full-width font-weight-lighter\\\" formControlName=\\\"baseline\\\" placeholder=\\\"L√≠nea Base\\\">\\n                                                        <input type=\\\"text\\\" class=\\\"full-width font-weight-lighter\\\" formControlName=\\\"goal\\\" placeholder=\\\"Meta Anual\\\">\\n                                                    </div>\\n                                                </td>\\n                                            </tr>\\n                                        </table>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <mat-divider *ngIf=\\\"i != this.goalsCtrl.length - 1\\\"></mat-divider>\\n                        </div>\\n                    </div>\\n                </ng-template>\\n            </mat-card-content>\\n        </mat-card>\\n        \\n        <mat-card class=\\\"mt-4 mb-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Lista de Beneficiarios</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <input type=\\\"file\\\" placeholder=\\\"Elegir Archivo\\\" (change)=\\\"prepareBeneficiariesList($event)\\\" class=\\\"form-control-file\\\">\\n                </div>\\n            </div>\\n        </mat-card>\\n\\n        <app-button-group (cancel)=\\\"true\\\" (save)=\\\"createProject()\\\" [formStatus]=\\\"false\\\"></app-button-group>\\n                   \\n    </form>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar *ngIf=\\\"this.userRole == 'Administrador'\\\"\\n    [title]=\\\"this.Project.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [buttons]=\\\"[this.DeleteBtn]\\\"\\n    [addButton]=\\\"false\\\">\\n</app-sub-toolbar>\\n\\n<app-sub-toolbar *ngIf=\\\"this.userRole != 'Administrador'\\\"\\n    [title]=\\\"this.Project.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"full-height\\\">\\n    <mat-tab-group mat-stretch-tabs class=\\\"full-height\\\"> \\n        <mat-tab label=\\\"Infomaci√≥n General\\\">\\n            <div class=\\\"container pb-3 pt-3 border-box\\\">\\n                <mat-card>\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Generales</mat-card-title>\\n                    <mat-divider></mat-divider>\\n                    <div class=\\\"mt-3 mb-3 row\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Nombre:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.name}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Fecha de Inicio:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.start_date}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Ubicaci√≥n (cant√≥n):</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.ubication}}</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mb-3 row\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Duraci√≥n del Proyecto:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.duration}} meses</span>\\n                        </div>\\n                    </div>\\n                    <mat-divider></mat-divider>\\n                    <div class=\\\"pt-3\\\">\\n                        <small class=\\\"d-block full-width\\\">Objetivo General:</small>\\n                        <p class=\\\"font-weight-lighter\\\">{{this.Project.gen_objective}}</p>\\n                    </div>\\n                    <div class=\\\"mt-3 mb-3\\\" *ngFor=\\\"let objetive of this.Project.esp_objectives; let i = index\\\">\\n                        <small class=\\\"d-block full-width\\\">Objetivo Espec√≠fico {{i+1}}:</small>\\n                        <span class=\\\"font-weight-lighter\\\">{{objetive}}</span>\\n                    </div>\\n                    <mat-divider></mat-divider>\\n                    <div class=\\\"pt-3\\\">\\n                        <div class=\\\"mb-3\\\" *ngFor=\\\"let result of this.Project.results; let i = index\\\">\\n                            <small class=\\\"d-block full-width\\\">Resultado {{i+1}}:</small>\\n                            <p class=\\\"font-weight-lighter\\\">{{result}}</p>\\n                        </div>\\n                    </div>\\n                    <mat-divider></mat-divider>\\n                    <div class=\\\"row pt-3\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <small class=\\\"d-block full-width\\\">N√∫mero de Beneficiarios:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.beneficiaries.number}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <small class=\\\"d-block full-width\\\">Listado de Beneficiarios:</small>\\n                            <div *ngIf=\\\"this.File == undefined; else IfThereFile\\\">\\n                                <img src=\\\"../../../../../assets/images/logo-sisi-only.svg\\\" width=\\\"50px\\\">\\n                                Cargando...\\n                            </div>\\n                            <ng-template #IfThereFile>\\n                                <a [href]=\\\"'http://64.227.8.162:3000/'+ this.File.file\\\" target=\\\"blank\\\" [download]=\\\"this.File.name+this.File.ext\\\" mat-raised-button color=\\\"primary\\\" class=\\\"font-weight-lighter\\\">DESCARGAR</a>\\n                            </ng-template>\\n                        </div>\\n                    </div>\\n                </mat-card>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Presupuesto\\\">\\n            <div class=\\\"container pb-3 border-box pt-3 \\\">\\n                <mat-card>\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Presupuesto</mat-card-title>\\n                    <mat-divider></mat-divider>\\n                    <div class=\\\"mt-3 mb-3 row\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Presupuesto Total Inicial:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.budgets.total_inicial | currency}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Presupuesto Total Final:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.budgets.total_final | currency}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Presupuesto Ejecutado:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.executed_budget.value | currency}}</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mt-3 flex\\\" *ngIf=\\\"this.userRole == 'Administrador'\\\">\\n                        <div class=\\\"fill-remaining-space\\\"></div>\\n                        <button mat-raised-button color=\\\"primary\\\" class=\\\"font-weight-lighter mr-2\\\" (click)=\\\"this.updateBudget()\\\">Registrar cambio en presupuesto</button>\\n                        <button mat-raised-button color=\\\"primary\\\" class=\\\"font-weight-lighter\\\" (click)=\\\"this.updateExecuted()\\\">Actualizar presupuesto ejecutado</button>\\n                    </div>\\n                </mat-card>\\n                <mat-card class=\\\"mt-4\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter text-center\\\">Progreso</mat-card-title>\\n                \\n                    <div id=\\\"graphic\\\">\\n                        <div class=\\\"flex justify-content-center\\\">\\n                            <ngx-charts-line-chart *ngIf=\\\"this.multi\\\"\\n                                [view]=\\\"view\\\"\\n                                [scheme]=\\\"colorScheme\\\"\\n                                [legend]=\\\"legend\\\"\\n                                [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                                [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                                [xAxis]=\\\"xAxis\\\"\\n                                [yAxis]=\\\"yAxis\\\"\\n                                [xAxisLabel]=\\\"xAxisLabel\\\"\\n                                [yAxisLabel]=\\\"yAxisLabel\\\"\\n                                [timeline]=\\\"timeline\\\"\\n                                [results]=\\\"multi\\\"\\n                                (select)=\\\"onSelect($event)\\\"\\n                                (activate)=\\\"onActivate($event)\\\"\\n                                (deactivate)=\\\"onDeactivate($event)\\\">\\n                            </ngx-charts-line-chart>\\n                        </div>\\n                    </div>\\n\\n                </mat-card>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Organizaciones\\\">\\n            <div class=\\\"container pb-3 pt-3 border-box\\\">\\n                <div class=\\\"row\\\" *ngIf=\\\"this.Project.organizations.length; else NoOrganizations\\\">\\n                    <div class=\\\"mb-4 col-sm-4\\\" *ngFor=\\\"let organization of this.Project.organizations\\\">\\n                        <mat-card>\\n                            <mat-card-title class=\\\"font-weight-lighter\\\">{{organization.name}}</mat-card-title>\\n                            <mat-card-subtitle>{{organization.type}}</mat-card-subtitle>\\n                            <mat-divider></mat-divider>\\n                            <mat-card-content>\\n                                <mat-list>\\n                                    <li class=\\\"pt-2\\\">\\n                                        <span>\\n                                            Sector: <span class=\\\"font-weight-lighter\\\">{{organization.sector}}</span>\\n                                        </span>\\n                                    </li>\\n                                    <li class=\\\"mt-2\\\">\\n                                        <span>\\n                                            Ubicaci√≥n: <span class=\\\"font-weight-lighter\\\">{{organization.ubication.parroquia}}, {{organization.ubication.canton}}</span>\\n                                        </span>\\n                                    </li>\\n                                    <li class=\\\"mt-2\\\">\\n                                        <span>\\n                                            Fecha de constituci√≥n: <span class=\\\"font-weight-lighter\\\">{{organization.foundation_date}}</span>\\n                                        </span>\\n                                    </li>\\n                                </mat-list>\\n                            </mat-card-content>\\n                            <div class=\\\"flex\\\">\\n                                <span class=\\\"fill-remaining-space\\\"></span>\\n                                <button mat-button [routerLink]=\\\"['/organizations',organization._id,'partners']\\\">SOCIOS</button>\\n                                <button mat-button [routerLink]=\\\"['/organizations',organization._id]\\\">DETALLES</button>\\n                            </div>\\n                        </mat-card>\\n                    </div>\\n                </div>\\n\\n                <ng-template #NoOrganizations>\\n                    <div class=\\\"full-height full-width flex justify-content-center align-items-center\\\">\\n                        <div>\\n                            <h2 class=\\\"text-center font-weight-lighter\\\">No hay Organizaciones vinculadas con este proyecto.</h2>\\n                        </div>\\n                    </div>\\n                </ng-template>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Financiadores\\\" id=\\\"financiadores-box\\\" class=\\\"full-height\\\">\\n            <div class=\\\"container pb-3 pt-3 border-box full-height\\\">\\n                <div class=\\\"row full-height\\\" *ngIf=\\\"this.Project.funders.length; else NoFunders\\\">\\n                    <div class=\\\"col-sm-12 full-height\\\">\\n                        <mat-card class=\\\"full-height\\\">\\n                            <div class=\\\"flex flex-align-vertical\\\">\\n                                <mat-card-title class=\\\"font-weight-lighter\\\">Financiadores Vinculados</mat-card-title>\\n                                <span class=\\\"fill-remaining-space\\\"></span>\\n                                <button *ngIf=\\\"this.userRole == 'Administrador'\\\" mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.linkFunders()\\\">Vincular Financiador</button>\\n                            </div>\\n                            <mat-divider></mat-divider>\\n                            <mat-card-content class=\\\"full-height\\\">\\n                                <div class=\\\"pt-3 full-height\\\">\\n                                    <mat-list class=\\\"scroll-list-view full-height bordered-list\\\">\\n                                        <a mat-button *ngFor=\\\"let funder of this.Project.funders\\\" [routerLink]=\\\"['/funders',funder._id]\\\" class=\\\"full-width text-left font-weight-lighter\\\">{{funder.name}} - {{funder.place}}</a>\\n                                        <mat-divider></mat-divider>\\n                                    </mat-list>\\n                                </div>\\n                            </mat-card-content>\\n                        </mat-card>\\n                    </div>\\n                </div>\\n                <ng-template #NoFunders>\\n                    <div class=\\\"row full-height\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <h3 class=\\\"full-width font-weight-lighter mt-5 text-center\\\">No hay Financiadores Vinculados con este proyecto.</h3>\\n                            <div class=\\\"flex flex-center\\\">\\n                                <button *ngIf=\\\"this.userRole == 'Administrador'\\\" mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.linkFunders()\\\">Vincular Financiador</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </ng-template>\\n            </div>\\n        </mat-tab>\\n    </mat-tab-group>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar\\n    title=\\\"Proyectos\\\"\\n    [addButton]=\\\"this.userRole == 'Administrador' || this.userRole == 'Coordinador'\\\"\\n    [backButton]=\\\"false\\\">\\n</app-sub-toolbar> \\n\\n<div class=\\\"page-content\\\">\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"this.projects.length; else NoProjects\\\">\\n        <div class=\\\"col-sm-4 mb-4\\\" *ngFor=\\\"let project of this.projects\\\">\\n            <mat-card>\\n                <mat-card-title class=\\\"font-weight-lighter\\\">{{project.name}}</mat-card-title>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <mat-list>\\n                        <li class=\\\"pt-2\\\">\\n                            <span>\\n                                Fecha de Inicio: <span class=\\\"font-weight-lighter\\\">{{project.start_date}}</span>\\n                            </span>\\n                        </li>\\n                        <li class=\\\"mt-2\\\">\\n                            <span>\\n                                Ubicaci√≥n: <span class=\\\"font-weight-lighter\\\">{{project.ubication}}</span>\\n                            </span>\\n                        </li>\\n                        <li class=\\\"mt-2\\\">\\n                            <span>\\n                                Duraci√≥n: <span class=\\\"font-weight-lighter\\\">{{project.duration}} meses</span>\\n                            </span>\\n                        </li>\\n                    </mat-list>\\n                </mat-card-content>\\n                <mat-card-actions>\\n                    <div class=\\\"flex\\\">\\n                        <span class=\\\"fill-remaining-space\\\"></span>\\n                        <a mat-button [routerLink]=\\\"[project._id]\\\">DETALLES</a>\\n                    </div>\\n                </mat-card-actions>\\n            </mat-card>\\n        </div>\\n    </div>\\n\\n    <ng-template #NoProjects>\\n        <div class=\\\"full-height full-width flex justify-content-center align-items-center\\\">\\n            <div>\\n                <h2 class=\\\"text-center font-weight-lighter\\\">No hay Proyectos registrados</h2>\\n                <div class=\\\"font-weight-lighter\\\">\\n                    Para agregar un nuevo proyecto dale click al boton \\\"Agregar\\\" de la esquina superior derecha.\\n                </div>\\n            </div>\\n        </div>\\n    </ng-template>\\n\\n</div>\\n\"","export default \"<app-sub-toolbar\\n    title=\\\"Reporte\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <mat-card class=\\\"margin-bottom-50\\\">\\n        <mat-card-title class=\\\"font-weight-lighter\\\">Generar Reporte:</mat-card-title>\\n        <mat-divider></mat-divider>\\n        <mat-card-content>\\n            <div class=\\\"row pt-3\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Proyectos</mat-label>\\n                        <mat-select [(ngModel)]=\\\"this.selectedProject\\\" matNativeControl (valueChange)=\\\"onProjectSelected($event)\\\">\\n                            <mat-option *ngFor=\\\"let project of this.Projects\\\" [value]=\\\"project._id\\\">{{project.name}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Indicadores</mat-label>\\n                        <mat-select [disabled]=\\\"!this.selectedProject\\\" [(ngModel)]=\\\"this.selectedIndicator\\\" (valueChange)=\\\"onIndicatorSelected($event)\\\" matNativeControl>\\n                            <mat-option *ngFor=\\\"let indicator of this.Indicators\\\" [value]=\\\"indicator._id\\\">{{indicator.name}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Per√≠odo</mat-label>\\n                        <mat-select [disabled]=\\\"!this.PeriodSelectAvailable\\\" [(ngModel)]=\\\"this.selectedPeriod\\\" (valueChange)=\\\"onPeriodSelected($event)\\\" matNativeControl>\\n                            <mat-option *ngIf=\\\"this.AvailablePeriods && !this.AvailablePeriods.length\\\" value=\\\"none\\\">No existen registros</mat-option>\\n                            <mat-option *ngFor=\\\"let periodo of this.AvailablePeriods\\\" [value]=\\\"periodo\\\">{{periodo}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n\\n    <mat-card class=\\\"mt-4\\\" *ngIf=\\\"this.Status == 'loading'\\\">\\n        <div class=\\\"loading-box\\\">\\n            <div>\\n                <img src=\\\"../../../../../assets/images/logo-sisi-only.svg\\\" alt=\\\"\\\">\\n                <h4 class=\\\"font-weight-lighter text-center\\\">Cargando...</h4>\\n            </div>\\n        </div>\\n    </mat-card>\\n    \\n    <app-table-and-graphic *ngIf=\\\"this.SchemaTable\\\" [IndicatorTable]=\\\"this.IndicatorTable\\\" [ChartData]=\\\"this.ChartData\\\" [Project]=\\\"this.Project\\\" [Period]=\\\"this.selectedPeriod\\\" [ParametersTable]=\\\"this.ParametersTable\\\" [SchemaTable]=\\\"this.SchemaTable\\\" [Indicator]=\\\"this.Indicator\\\"></app-table-and-graphic>\\n\\n</div>\\n\"","export default \"<mat-card class=\\\"mt-4 report-box\\\">\\n    <mat-tab-group mat-stretch-tabs class=\\\"full-height\\\">\\n        <mat-tab label=\\\"Tablas\\\"> \\n            <mat-card class=\\\"report-mat-card\\\" *ngIf=\\\"this.SchemaTable\\\">\\n                <mat-card-title class=\\\"font-weight-lighter pt-2\\\">Ficha</mat-card-title>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <div class=\\\"pt-3\\\">\\n                        <p>Proyecto: <span class=\\\"font-weight-lighter\\\">{{this.SchemaTable.projectName}}</span></p>\\n                        <p>Indicador: <span class=\\\"font-weight-lighter\\\">{{this.Indicator.name}}</span></p>\\n                        <p>Periodo: <span class=\\\"font-weight-lighter\\\">{{this.Period}}</span></p>\\n                        <p>T√©cnico Responsable: <span class=\\\"font-weight-lighter\\\">{{this.Technic.name}} {{this.Technic.last_names}} - {{this.Technic.position}}</span></p>\\n                    </div>\\n                    <div class=\\\"table-container pt-3 pb-2\\\">\\n                        <table class=\\\"baseline-table\\\">\\n                            <tr>\\n                                <th class=\\\"sticky\\\"></th>\\n                                <th *ngFor=\\\"let field of this.SchemaTable.schema[0].fields\\\">{{field.name}}</th>\\n                            </tr>\\n                            <tr *ngFor=\\\"let organization of this.SchemaTable.schema\\\">\\n                                <td class=\\\"sticky\\\">{{organization.name}}</td>\\n                                <td *ngFor=\\\"let field of organization.fields\\\">\\n                                    <div class=\\\"full-width font-weight-lighter text-center table-box\\\">\\n                                        {{field.value}}\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>        \\n                </mat-card-content>\\n            </mat-card>\\n\\n            <mat-card class=\\\"report-mat-card\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">C√°lculo de los Par√°metros</mat-card-title>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <div class=\\\"table-container pt-3 pb-2\\\">\\n                        <table class=\\\"baseline-table\\\">\\n                            <tr>\\n                                <th class=\\\"sticky\\\"></th>\\n                                <th [matTooltip]=\\\"this.ParametersTable[0].parameters[i].definition\\\" matTooltipPosition=\\\"above\\\" *ngFor=\\\"let parameter of this.ParametersTable[0].parameters; let i = index\\\">{{parameter.name}}</th>\\n                            </tr>\\n                            <tr *ngFor=\\\"let organization of this.ParametersTable\\\">\\n                                <td class=\\\"sticky\\\">{{organization.name}}</td>\\n                                <td *ngFor=\\\"let parameter of organization.parameters\\\">\\n                                    <div *ngIf=\\\"parameter.unit == 'N√∫mero'\\\" class=\\\"full-width font-weight-lighter text-center table-box\\\">\\n                                        {{parameter.value}}\\n                                    </div>\\n                                    <div *ngIf=\\\"parameter.unit == 'Moneda'\\\" class=\\\"full-width font-weight-lighter text-center table-box\\\">\\n                                        {{parameter.value | currency}}\\n                                    </div>\\n                                    <div *ngIf=\\\"parameter.unit == 'Porcentaje'\\\" class=\\\"full-width font-weight-lighter text-center table-box\\\">\\n                                        {{parameter.value}}%\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>        \\n                </mat-card-content>\\n            </mat-card>\\n\\n            <mat-card class=\\\"report-mat-card\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">C√°lculo de Indicador</mat-card-title>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <div class=\\\"table-container pt-3 pb-2\\\">\\n                        <table class=\\\"baseline-table\\\">\\n                            <tr>\\n                                <th class=\\\"sticky\\\"></th>\\n                                <th *ngFor=\\\"let parameter of this.ParametersTable[0].parameters\\\">{{parameter.name}}</th>\\n                                <th>Total Indicador</th>\\n                            </tr>\\n                            <tr>\\n                                <th></th>\\n                                <th></th>\\n                            </tr>\\n                            <tr *ngFor=\\\"let organization of this.IndicatorTable; let i = index\\\">\\n                                <td class=\\\"sticky\\\">{{organization.name}}</td>\\n                                <td *ngFor=\\\"let parameter of this.IndicatorTable[i].parameters\\\">\\n                                    <div class=\\\"full-width font-weight-lighter text-center table-box\\\">\\n                                        {{parameter.ponderacion.medido}}% de {{parameter.ponderacion.establecido}}%\\n                                    </div>\\n                                </td>\\n                                <td>\\n                                    <div class=\\\"full-width font-weight-lighter text-center table-box\\\">\\n                                        {{organization.total_indicator_value}}%\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>        \\n                </mat-card-content>\\n            </mat-card>\\n\\n            <mat-card class=\\\"report-mat-card\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Resultados Indicador</mat-card-title>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <div class=\\\"columns-2 pt-3 pb-2\\\">\\n                        <div class=\\\"flex flex-align-vertical\\\">\\n                            <span>Valor Promedio del Indicador: <span class=\\\"font-weight-lighter\\\">{{this.Promedio}}%</span></span>\\n                        </div>\\n                        <div class=\\\"flex flex-center flex-align-vertical\\\">\\n                            <div *ngIf=\\\"this.Promedio >= 80\\\" class=\\\"calification-detail\\\">\\n                                <div class=\\\"circulo green flex flex-align-vertical flex-center\\\">\\n                                    <span class=\\\"calification-letter\\\">{{this.Calificacion.letter}}</span>\\n                                </div>\\n                                <div class=\\\"flex flex-align-vertical ml-1\\\">\\n                                    <div>\\n                                        <span>{{this.Calificacion.message}}</span><br/>\\n                                        <span class=\\\"font-weight-lighter\\\">{{this.Calificacion.description}}</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div *ngIf=\\\"this.Promedio < 80 && this.Promedio >= 50\\\" class=\\\"calification-detail\\\">\\n                                <div class=\\\"circulo yellow flex flex-align-vertical flex-center\\\">\\n                                    <span class=\\\"calification-letter\\\">{{this.Calificacion.letter}}</span>\\n                                </div>\\n                                <div class=\\\"flex flex-align-vertical margin-left-10\\\">\\n                                    <div>\\n                                        <span>{{this.Calificacion.message}}</span><br/>\\n                                        <span class=\\\"font-weight-lighter\\\">{{this.Calificacion.description}}</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div *ngIf=\\\"this.Promedio < 50\\\" class=\\\"calification-detail\\\">\\n                                <div class=\\\"circulo red flex flex-align-vertical flex-center\\\">\\n                                    <span class=\\\"calification-letter\\\">{{this.Calificacion.letter}}</span>\\n                                </div>\\n                                <div class=\\\"flex flex-align-vertical margin-left-10\\\">\\n                                    <div>\\n                                        <span>{{this.Calificacion.message}}</span><br/>\\n                                        <span class=\\\"font-weight-lighter\\\">{{this.Calificacion.description}}</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </mat-card-content>\\n            </mat-card>\\n        </mat-tab>\\n\\n        <mat-tab label=\\\"Gr√°ficos\\\">\\n            <mat-card class=\\\"full-width\\\" *ngFor=\\\"let chart of this.ChartData; let i = index\\\">\\n                <mat-card-title *ngIf=\\\"i != this.ChartData.length - 1; else LastChartTitle\\\" class=\\\"font-weight-lighter\\\">Organizaci√≥n: {{chart.name}}</mat-card-title>\\n                <ng-template #LastChartTitle>\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Gr√°fico comparativo entre Organizaciones</mat-card-title>    \\n                </ng-template>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <div class=\\\"pt-3 pb-2\\\">\\n                        <ngx-charts-bar-vertical-2d *ngIf=\\\"i != this.ChartData.length - 1; else LastChart\\\"\\n                            [view]=\\\"view\\\"\\n                            [scheme]=\\\"colorScheme\\\"\\n                            [results]=\\\"chart.multi\\\"\\n                            [gradient]=\\\"gradient\\\"\\n                            [xAxis]=\\\"showXAxis\\\"\\n                            [yAxis]=\\\"showYAxis\\\"\\n                            [legend]=\\\"showLegend\\\"\\n                            [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                            [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                            [xAxisLabel]=\\\"xAxisLabel\\\"\\n                            [yAxisLabel]=\\\"yAxisLabel\\\"\\n                            [legendTitle]=\\\"legendTitle\\\"\\n                            (select)=\\\"onSelect($event)\\\"\\n                            (activate)=\\\"onActivate($event)\\\"\\n                            (deactivate)=\\\"onDeactivate($event)\\\">\\n                        </ngx-charts-bar-vertical-2d>\\n                        <ng-template #LastChart>\\n                            <ngx-charts-bar-vertical\\n                                [view]=\\\"view\\\"\\n                                [scheme]=\\\"colorScheme\\\"\\n                                [results]=\\\"chart.single\\\"\\n                                [gradient]=\\\"gradient\\\"\\n                                [xAxis]=\\\"showXAxis\\\"\\n                                [yAxis]=\\\"showYAxis\\\"\\n                                [legend]=\\\"showLegend\\\"\\n                                [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                                [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                                [xAxisLabel]=\\\"xAxisLabelLast\\\"\\n                                [yAxisLabel]=\\\"yAxisLabelLast\\\"\\n                                (select)=\\\"onSelect($event)\\\">\\n                            </ngx-charts-bar-vertical>\\n                        </ng-template>\\n                    </div>\\n                </mat-card-content>\\n            </mat-card>\\n        </mat-tab>\\n    </mat-tab-group>\\n</mat-card>\"","export default \"<app-sub-toolbar\\n    title=\\\"Nuevo Usuario\\\"\\n    [backButton]=\\\"true\\\"\\n    [importantBack]=\\\"true\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <form [formGroup]=\\\"this.UserForm\\\" (ngSubmit)=\\\"createUser()\\\">\\n        <mat-card>\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Informaci√≥n General</mat-card-title>\\n            <mat-divider></mat-divider>\\n            <mat-card-content>\\n                <div class=\\\"pt-3 row\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Nombres\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.name.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.name.errors?.required && this.UserForm.controls.name.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"last_names\\\" placeholder=\\\"Apellidos\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.last_names.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.last_names.errors?.required && this.UserForm.controls.last_names.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"username\\\" placeholder=\\\"Nombre de Usuario\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.username.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.username.errors?.required && this.UserForm.controls.username.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.username.errors?.required && this.UserForm.controls.username.errors?.exists\\\">El nombre de usuario ingresado no est√° disponible.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"email\\\" placeholder=\\\"Correo Electr√≥nico\\\" type=\\\"email\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.email.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.email.errors?.required && this.UserForm.controls.email.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.email.errors?.required && !this.UserForm.controls.email.errors?.isBlank && this.UserForm.controls.email.errors?.pattern\\\">Ingrese una direcci√≥n de correo v√°lida.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"position\\\" placeholder=\\\"Puesto de Trabajo\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.position.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.position.errors?.required && this.UserForm.controls.position.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"this.UserForm.controls.role.value == 'Financiador' \\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <mat-label>Representa a</mat-label>\\n                            <mat-select formControlName=\\\"funder\\\">\\n                                <mat-option *ngFor=\\\"let funder of this.Funders\\\" [value]=\\\"funder._id\\\">{{funder.name}} - {{funder.place}}</mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.position.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.position.errors?.required && this.UserForm.controls.position.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n        <mat-card class=\\\"mt-4 mb-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Permisos y Seguridad</mat-card-title>\\n            <mat-divider></mat-divider>\\n            <mat-card-content>\\n                <div class=\\\"pt-3 row\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Ingresa una contrase√±a\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.password.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.password.errors?.required && this.UserForm.controls.password.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.password.errors?.minLength\\\">La contrase√±a debe tener al menos 10 caracteres.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"password\\\" formControlName=\\\"repassword\\\" placeholder=\\\"Repite la Contrase√±a\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.repassword.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.repassword.errors?.required && this.UserForm.controls.repassword.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.repassword.errors?.noMatch\\\">Las contrase√±as no coinciden.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <mat-label>Rol del Usuario</mat-label>\\n                            <mat-select formControlName=\\\"role\\\">\\n                                <mat-option value=\\\"T√©cnico\\\">T√©cnico</mat-option>\\n                                <mat-option value=\\\"Coordinador\\\">Coordinador</mat-option>\\n                                <mat-option value=\\\"Financiador\\\">Financiador</mat-option>\\n                                <mat-option value=\\\"Administrador\\\">Administrador</mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.role.errors?.required\\\">Debe seleccionar un rol de usuario</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n        <app-form-buttons [formGroup]=\\\"this.UserForm\\\"></app-form-buttons>\\n    </form>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar\\n    title=\\\"Usuario: {{this.User.name}} {{this.User.last_names}}\\\"\\n    [backButton]=\\\"true\\\"\\n    [importantBack]=\\\"this.EditMode\\\"\\n    [editButton]=\\\"!this.EditMode\\\"\\n    (editClick)=\\\"turnToEditMode()\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <form [formGroup]=\\\"this.UserForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n        <mat-card>\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Informaci√≥n General</mat-card-title>\\n            <mat-divider></mat-divider>\\n            <mat-card-content>\\n                <div class=\\\"pt-3 row\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Nombres\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.name.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.name.errors?.required && this.UserForm.controls.name.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"last_names\\\" placeholder=\\\"Apellidos\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.last_names.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.last_names.errors?.required && this.UserForm.controls.last_names.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"username\\\" placeholder=\\\"Nombre de Usuario\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.username.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.username.errors?.required && this.UserForm.controls.username.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.username.errors?.required && this.UserForm.controls.username.errors?.exists\\\">El nombre de usuario ingresado no est√° disponible.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"email\\\" placeholder=\\\"Correo Electr√≥nico\\\" type=\\\"email\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.email.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.email.errors?.required && this.UserForm.controls.email.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.email.errors?.required && !this.UserForm.controls.email.errors?.isBlank && this.UserForm.controls.email.errors?.pattern\\\">Ingrese una direcci√≥n de correo v√°lida.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"position\\\" placeholder=\\\"Puesto de Trabajo\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.position.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.position.errors?.required && this.UserForm.controls.position.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <mat-label>Rol del Usuario</mat-label>\\n                            <mat-select formControlName=\\\"role\\\">\\n                                <mat-option value=\\\"T√©cnico\\\">T√©cnico</mat-option>\\n                                <mat-option value=\\\"Coordinador\\\">Coordinador</mat-option>\\n                                <mat-option value=\\\"Financiador\\\">Financiador</mat-option>\\n                                <mat-option value=\\\"Administrador\\\">Administrador</mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.role.errors?.required\\\">Debe seleccionar un rol de usuario</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"this.UserForm.controls.role.value == 'Financiador' \\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <mat-label>Representa a</mat-label>\\n                            <mat-select formControlName=\\\"funder\\\">\\n                                <mat-option *ngFor=\\\"let funder of this.Funders\\\" [value]=\\\"funder._id\\\">{{funder.name}} - {{funder.place}}</mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.position.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.position.errors?.required && this.UserForm.controls.position.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n        <div class=\\\"mt-4 mb-4\\\">\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.generateNewPassword()\\\">Generar Nueva Contrase√±a</button>\\n        </div>\\n        <app-button-group *ngIf=\\\"this.EditMode\\\" (cancel)=\\\"this.cancel()\\\" (save)=\\\"this.updateUser()\\\" [formStatus]=\\\"this.UserForm.invalid\\\"></app-button-group>\\n    </form>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar\\n    title=\\\"Usuarios\\\"\\n    [addButton]=\\\"true\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <mat-card class=\\\"mb-4\\\">\\n        <mat-card-title class=\\\"font-weight-lighter\\\">Buscar</mat-card-title>\\n        <mat-divider></mat-divider>\\n        <mat-card-content>\\n            <div class=\\\"pt-3 row\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Buscar Por:</mat-label>\\n                        <mat-select [(ngModel)]=\\\"this.filter\\\">\\n                            <mat-option value=\\\"name\\\">Nombre</mat-option>\\n                            <mat-option value=\\\"last_names\\\">Apellido</mat-option>\\n                            <mat-option value=\\\"role\\\">Rol</mat-option>\\n                            <mat-option value=\\\"position\\\">Cargo</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                    <mat-form-field class=\\\"full-width\\\" *ngIf=\\\"this.filter == 'name' || this.filter == 'last_names' || this.filter == 'position'\\\">\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"this.search_term\\\" (keyup)=\\\"filterByTerm()\\\" placeholder=\\\"Ingrese el t√©rmino a buscar...\\\">\\n                    </mat-form-field>\\n                    <mat-form-field class=\\\"full-width\\\" *ngIf=\\\"this.filter == 'role'\\\">\\n                        <mat-label>Seleccione el Rol de Usuario</mat-label>\\n                        <mat-select (valueChange)=\\\"filterByRole($event)\\\">\\n                            <mat-option value=\\\"T√©cnico\\\">T√©cnico</mat-option>\\n                            <mat-option value=\\\"Coordinador\\\">Coordinador</mat-option>\\n                            <mat-option value=\\\"Financiador\\\">Financiador</mat-option>\\n                            <mat-option value=\\\"Administrador\\\">Administrador</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n    <mat-card>\\n        <mat-card-title class=\\\"font-weight-lighter\\\">Lista de Usuarios</mat-card-title>\\n        <mat-divider></mat-divider>\\n        <mat-card-content>\\n            <div class=\\\"pt-3\\\">\\n                <mat-list>\\n                    <li class=\\\"full-width text-left font-weight-lighter\\\" *ngFor=\\\"let user of this.filteredList\\\">\\n                        <div class=\\\"flex flex-align-vertical\\\">\\n                            <div>\\n                                {{user.name}} {{user.last_names}} - {{user.position}}\\n                            </div>\\n                            <span class=\\\"fill-remaining-space\\\"></span>\\n                            <a [routerLink]=\\\"user._id\\\" mat-button class=\\\"font-weight-lighter\\\"><mat-icon>remove_red_eye</mat-icon> DETALLES</a>\\n                            <button mat-button class=\\\"font-weight-lighter\\\"><mat-icon>delete</mat-icon>ELIMINAR</button>\\n                        </div>\\n                        <mat-divider></mat-divider>\\n                    </li>\\n                </mat-list>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n</div>\\n\"","export default \"<div class=\\\"flex\\\">\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button mat-button (click)=\\\"onCancel($event)\\\" type=\\\"reset\\\" class=\\\"mr-2\\\">CANCELAR</button>\\n    <button mat-raised-button [disabled]=\\\"this.formStatus\\\" color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"onSave()\\\">GUARDAR</button>\\n</div>\\n\"","export default \"<div class=\\\"flex\\\">\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button mat-button class=\\\"mr-3\\\" type=\\\"button\\\" (click)=\\\"this.cancel()\\\">CANCELAR</button>\\n    <button mat-raised-button [disabled]=\\\"this.formGroup.invalid\\\" color=\\\"primary\\\" type=\\\"submit\\\">GUARDAR</button>\\n</div>\"","export default \"<div class=\\\"full-height full-width flex justify-content-center align-items-center fadeIn\\\" id=\\\"loading-view\\\">\\n\\n    <div>\\n        <div class=\\\"full-width\\\">\\n            <img src=\\\"../../../../assets/images/logo-solo-white.svg\\\" class=\\\"mb-3\\\">\\n        </div>\\n        <h2 class=\\\"text-center font-weight-lighter\\\">{{this.message}}</h2>\\n    </div>\\n\\n</div>\"","export default \"<p>modals works!</p>\\n\"","export default \"<mat-toolbar>\\n    <button *ngIf=\\\"this.backButton\\\" mat-icon-button (click)=\\\"this.back()\\\"><mat-icon>arrow_back</mat-icon></button>\\n    <div>\\n        {{this.title}}\\n    </div>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button mat-raised-button class=\\\"mr-2\\\" *ngFor=\\\"let button of this.personalizedButtons\\\" (click)=\\\"button.handler()\\\"><mat-icon *ngIf=\\\"button.hasIcon\\\">{{button.icon}}</mat-icon>{{button.message}}</button>\\n    <button *ngIf=\\\"this.editButton\\\" (click)=\\\"this.edit()\\\" mat-raised-button><mat-icon>edit</mat-icon> EDITAR</button>\\n    <a [routerLink]=\\\"['add']\\\" *ngIf=\\\"this.addButton\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>add</mat-icon> AGREGAR</a>\\n</mat-toolbar> \"","export default \"<mat-card>\\n    <div class=\\\"flex\\\" id=\\\"upload-box-header\\\">\\n        <mat-card-title class=\\\"font-weight-lighter\\\">Documentos subidos</mat-card-title>\\n        <span class=\\\"fill-remaining-space\\\"></span>\\n        \\n        <input type=\\\"file\\\" (change)=\\\"onAddNewFile($event)\\\" multiple name=\\\"add-file\\\" id=\\\"add-file\\\" class=\\\"invisible\\\">\\n        <label for=\\\"add-file\\\"><i class=\\\"fas fa-file-upload\\\"></i> Seleccionar Archivo</label>\\n\\n    </div>\\n    <div id=\\\"upload-box\\\">\\n    \\n      <div id=\\\"upload-route-box\\\" class=\\\"p-1 flex align-items-center\\\">\\n        <div><span *ngFor=\\\"let path of this.fileDir; let i = index\\\"> {{path}} <i *ngIf=\\\"i != this.fileDir.length - 1\\\" class=\\\"fas fa-caret-right\\\"></i> </span> </div>\\n      </div> \\n\\n      <div id=\\\"file-grid\\\" class=\\\"p-2\\\">\\n        <div class=\\\"full-width\\\" *ngFor=\\\"let file of this.files; let i = index\\\">\\n          <i class=\\\"close-btn fas fa-times\\\" (click)=\\\"deleteFile(i)\\\"></i>\\n          <i *ngIf=\\\"file.type == 'Imagen'\\\" class=\\\"fas fa-file-image color-cyan\\\"></i>\\n          <i *ngIf=\\\"file.type == 'Word'\\\" class=\\\"fas fa-file-word color-blue\\\"></i>\\n          <i *ngIf=\\\"file.type == 'Excel'\\\" class=\\\"fas fa-file-excel color-green\\\"></i>\\n          <i *ngIf=\\\"file.type == 'Power Point'\\\" class=\\\"fas fa-file-powerpoint color-orange\\\"></i>\\n          <i *ngIf=\\\"file.type == 'PDF'\\\" class=\\\"fas fa-file-pdf color-red\\\"></i>\\n          <p class=\\\"file-name pt-2\\\">{{file.name}}</p>\\n          <p class=\\\"file-status\\\">{{file.status}}</p>\\n        </div>\\n      </div>\\n    \\n    </div>\\n    <div id=\\\"upload-buttons\\\" class=\\\"flex mt-3\\\">\\n      <span class=\\\"fill-remaining-space\\\"></span>\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"uploadFiles()\\\" [disabled]=\\\"this.isFilesPristine\\\">Subir Archivos</button>\\n    </div>\\n</mat-card>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReportComponent } from './components/pages/report/report/report.component';\nimport { FichasComponent } from './components/pages/fichas/fichas/fichas.component';\nimport { FundersComponent } from './components/pages/funders/funders/funders.component';\nimport { ProjectsComponent } from './components/pages/projects/projects/projects.component';\nimport { PartnersComponent } from './components/pages/organization/partners/partners.component';\nimport { DashboardComponent } from './components/pages/dashboard/dashboard.component';\nimport { IndicatorsComponent } from './components/pages/indicators/indicators/indicators.component';\nimport { NewProjectComponent } from './components/pages/projects/new-project/new-project.component';\nimport { FunderViewComponent } from './components/pages/funders/funder-view/funder-view.component';\nimport { ProjectViewComponent } from './components/pages/projects/project-view/project-view.component';\nimport { NewIndicatorComponent } from './components/pages/indicators/new-indicator/new-indicator.component';\nimport { OrganizationsComponent } from './components/pages/organization/organizations/organizations.component';\nimport { NewOrganizationComponent } from './components/pages/organization/new-organization/new-organization.component';\nimport { OrganizationViewComponent } from './components/pages/organization/organization-view/organization-view.component';\nimport { PartnersHistoricComponent } from './components/pages/organization/partners-historic/partners-historic.component';\nimport { IndicatorViewComponent } from './components/pages/indicators/indicator-view/indicator-view.component';\nimport { UsersComponent } from './components/pages/users/users/users.component';\nimport { NewUsersComponent } from './components/pages/users/new-users/new-users.component';\nimport { UsersViewComponent } from './components/pages/users/users-view/users-view.component';\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: 'dashboard'},\n  {path: 'dashboard', component: DashboardComponent},\n  {path: 'funders', component: FundersComponent},\n  {path: 'funders/:id', component: FunderViewComponent},\n  {path: 'organizations', component: OrganizationsComponent},\n  {path: 'organizations/add', component: NewOrganizationComponent},\n  {path: 'organizations/:id', component: OrganizationViewComponent},\n  {path: 'organizations/:id/partners', component: PartnersComponent},\n  {path: 'organizations/:id/partners/historic', component: PartnersHistoricComponent},\n  {path: 'indicators', component: IndicatorsComponent},\n  {path: 'indicators/add', component: NewIndicatorComponent},\n  {path: 'indicators/:id', component: IndicatorViewComponent},\n  {path: 'projects', component: ProjectsComponent},\n  {path: 'projects/add', component: NewProjectComponent},\n  {path: 'projects/:id', component: ProjectViewComponent},\n  {path: 'schemas', component: FichasComponent},\n  {path: 'reports', component: ReportComponent},\n  {path: 'documents', component: DashboardComponent},\n  {path: 'institucionales', component: DashboardComponent},\n  {path: 'users', component: UsersComponent},\n  {path: 'users/add', component: NewUsersComponent},\n  {path: 'users/:id', component: UsersViewComponent},\n  {path: 'settings', component: DashboardComponent},\n  {path: '**', pathMatch: 'full', redirectTo: 'dashboard'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component } from '@angular/core';\nimport { SisiCoreService } from './services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  \n  title = 'sisiapp';\n  \n  auth : boolean = false;\n\n  userData : any;\n\n  loadingMessage : string;\n\n  isWorking : boolean = false;\n\n  userRole : string = localStorage.getItem('userRole');\n\n  constructor(private _service : SisiCoreService,\n              private _snackBar : MatSnackBar,\n              private _Router : Router){\n    if(localStorage.getItem('authenticated') == 'true'){\n      this.userData = JSON.parse(localStorage.getItem('user'));\n      this.auth = true;\n      this._service.getFunders().subscribe(\n        result => {\n          if(result.message == 'OK') localStorage.setItem('funders',JSON.stringify(result.funders));\n        },error => this._snackBar.open('Error recuperando los financiadores.','ENTENDIDO',{duration: 3000})\n      );\n      this._service.getOrganizations().subscribe(\n        result => {\n          if(result.message == 'OK') localStorage.setItem('organizations',JSON.stringify(result.organizations));\n        },error => this._snackBar.open('Error recuperando las organizaciones.','ENTENDIDO',{duration: 3000})\n      );\n      this._service.getProjects().subscribe(\n        result => {\n          if(result.message == 'OK') localStorage.setItem('projects',JSON.stringify(result.projects));\n          else localStorage.setItem('projects','[]');\n        },error => this._snackBar.open('Error recuperando los proyectos.','ENTENDIDO',{duration: 3000})\n      );\n      this._service.getIndicators().subscribe(\n        result => {\n          if(result.message == 'OK') localStorage.setItem('indicators',JSON.stringify(result.indicators));\n        },error => this._snackBar.open('Error recuperando los indicadores.','ENTENDIDO',{duration: 3000})\n      );\n      this._service.getUsers().subscribe(\n        result => {\n          if(result.message == 'OK') localStorage.setItem('users',JSON.stringify(result.users));\n        },error => this._snackBar.open('Error recuperando los usuarios.','ENTENDIDO',{duration: 3000})\n      );\n      this._service.getPreferences().subscribe(\n        result => {\n          if(result.message == 'OK') {\n            localStorage.setItem('sectors',JSON.stringify(result.preferences.Organizations.Sectors));\n            localStorage.setItem('types',JSON.stringify(result.preferences.Organizations.Types));\n          } \n        },error => this._snackBar.open('Error recuperando los usuarios.','ENTENDIDO',{duration: 3000})\n      );\n    }\n  }\n\n  Authenticate(){\n    this._Router.navigate(['dashboard']);\n    this.userData = JSON.parse(localStorage.getItem('user')); \n    localStorage.setItem('authenticated','true');\n    localStorage.setItem('userID',this.userData._id);\n    localStorage.setItem('userRole',this.userData.role);\n    this.auth = true;\n    this.isWorking = true;\n    this.userRole = localStorage.getItem('userRole');\n    this.loadingMessage = 'Estamos cargando la informaci√≥n...';\n    this._service.getFunders().subscribe(\n      result => {\n        if(result.message == 'OK') localStorage.setItem('funders',JSON.stringify(result.funders));\n      },error => this._snackBar.open('Error recuperando los financiadores.','ENTENDIDO',{duration: 3000})\n    );\n    this._service.getOrganizations().subscribe(\n      result => {\n        if(result.message == 'OK') localStorage.setItem('organizations',JSON.stringify(result.organizations));\n      },error => this._snackBar.open('Error recuperando las organizaciones.','ENTENDIDO',{duration: 3000})\n    );\n    this._service.getProjects().subscribe(\n      result => {\n        if(result.message == 'OK') localStorage.setItem('projects',JSON.stringify(result.projects));\n        else localStorage.setItem('projects','[]');\n      },error => this._snackBar.open('Error recuperando los proyectos.','ENTENDIDO',{duration: 3000})\n    );\n    this._service.getIndicators().subscribe(\n      result => {\n        if(result.message == 'OK') localStorage.setItem('indicators',JSON.stringify(result.indicators));\n      },error => this._snackBar.open('Error recuperando los indicadores.','ENTENDIDO',{duration: 3000})\n    );\n    this._service.getUsers().subscribe(\n      result => {\n        if(result.message == 'OK') localStorage.setItem('users',JSON.stringify(result.users));\n      },error => this._snackBar.open('Error recuperando los usuarios.','ENTENDIDO',{duration: 3000})\n    );\n    this._service.getPreferences().subscribe(\n      result => {\n        if(result.message == 'OK') {\n          localStorage.setItem('sectors',JSON.stringify(result.preferences.Organizations.Sectors));\n          localStorage.setItem('types',JSON.stringify(result.preferences.Organizations.Types));\n        } \n      },error => this._snackBar.open('Error recuperando los usuarios.','ENTENDIDO',{duration: 3000})\n    );\n  }\n  \n  loadingView(options : any){\n    this.isWorking = options.isWorking;\n    this.loadingMessage = options.message;\n  }\n\n  logout(){\n    localStorage.removeItem('user');\n    localStorage.removeItem('funders');\n    localStorage.removeItem('projects');\n    localStorage.removeItem('organizations');\n    localStorage.removeItem('indicators');\n    this.userData = null;\n    this.auth = false;\n    localStorage.setItem('authenticated','false');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { ModalsComponent } from './components/shared/modals/modals.component';\nimport { FundersComponent } from './components/pages/funders/funders/funders.component';\nimport { ProjectsComponent } from './components/pages/projects/projects/projects.component';\nimport { PartnersComponent } from './components/pages/organization/partners/partners.component';\nimport { DashboardComponent } from './components/pages/dashboard/dashboard.component';\nimport { UploadBoxComponent } from './components/shared/upload-box/upload-box.component';\nimport { IndicatorsComponent } from './components/pages/indicators/indicators/indicators.component';\nimport { SubToolbarComponent } from './components/shared/sub-toolbar/sub-toolbar.component';\nimport { NewProjectComponent } from './components/pages/projects/new-project/new-project.component';\nimport { FunderViewComponent } from './components/pages/funders/funder-view/funder-view.component';\nimport { ButtonGroupComponent } from './components/shared/button-group/button-group.component';\nimport { ProjectViewComponent } from './components/pages/projects/project-view/project-view.component';\nimport { LoadingViewComponent } from './components/shared/loading-view/loading-view.component';\nimport { FormButtonsComponent } from './components/shared/form-buttons/form-buttons.component';\nimport { NewIndicatorComponent } from './components/pages/indicators/new-indicator/new-indicator.component';\nimport { OrganizationsComponent } from './components/pages/organization/organizations/organizations.component';\nimport { UpdateExecutedComponent } from './components/dialogs/update-executed/update-executed.component';\nimport { NewOrganizationComponent } from './components/pages/organization/new-organization/new-organization.component';\nimport { OrganizationViewComponent } from './components/pages/organization/organization-view/organization-view.component';\nimport { PartnersHistoricComponent } from './components/pages/organization/partners-historic/partners-historic.component';\n\n/**\n * Material Imports\n */\n\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatChipsModule } from '@angular/material/chips'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FichasComponent } from './components/pages/fichas/fichas/fichas.component';\nimport { ReportComponent } from './components/pages/report/report/report.component';\nimport { TableAndGraphicComponent } from './components/pages/report/table-and-graphic/table-and-graphic.component';\nimport { IndicatorViewComponent } from './components/pages/indicators/indicator-view/indicator-view.component';\nimport { FundersLinkComponent } from './components/dialogs/funders-link/funders-link.component';\nimport { UsersComponent } from './components/pages/users/users/users.component';\nimport { NewUsersComponent } from './components/pages/users/new-users/new-users.component';\nimport { UsersViewComponent } from './components/pages/users/users-view/users-view.component';\nimport { NewPasswordComponent } from './components/dialogs/new-password/new-password.component';\nimport { NewOrganizationPreferenceComponent } from './components/dialogs/new-organization-preference/new-organization-preference.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    FundersComponent,\n    ProjectsComponent,\n    PartnersComponent,\n    UploadBoxComponent,\n    DashboardComponent,\n    NewProjectComponent,\n    IndicatorsComponent,\n    SubToolbarComponent,\n    FunderViewComponent,\n    ButtonGroupComponent,\n    LoadingViewComponent,\n    FormButtonsComponent,\n    NewIndicatorComponent,\n    OrganizationsComponent,\n    NewOrganizationComponent,\n    OrganizationViewComponent,\n    PartnersHistoricComponent,\n    ModalsComponent,\n    ProjectViewComponent,\n    UpdateExecutedComponent,\n    FichasComponent,\n    ReportComponent,\n    TableAndGraphicComponent,\n    IndicatorViewComponent,\n    FundersLinkComponent,\n    UsersComponent,\n    NewUsersComponent,\n    UsersViewComponent,\n    NewPasswordComponent,\n    NewOrganizationPreferenceComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    MatListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatChipsModule,\n    MatTableModule,\n    MatInputModule,\n    NgxChartsModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSelectModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatSidenavModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatToolbarModule,\n    MatDividerModule,\n    MatCheckboxModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule\n  ],\n  entryComponents: [\n    UpdateExecutedComponent,\n    FundersLinkComponent,\n    NewPasswordComponent,\n    NewOrganizationPreferenceComponent\n  ],\n  providers: [\n    {provide: MAT_DATE_LOCALE, useValue: 'es-EC'},\n    {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: false}}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-funders-link',\n  templateUrl: './funders-link.component.html'\n})\nexport class FundersLinkComponent {\n  \n  constructor(\n    public dialogRef: MatDialogRef<FundersLinkComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.data.seleccion = [];\n      for(let i = 0; i < this.data.actualFunders.length; i++){\n        for(let j = 0; j < this.data.Funders.length; j++){\n          if(this.data.actualFunders[i]._id == this.data.Funders[j]._id){\n            this.data.Funders.splice(j,1);\n            break;\n          }\n        }\n      }\n\n    }\n\n  onNoClick(msg : string) : void {\n    this.dialogRef.close(msg);\n  }\n\n  OnFundersListChange(id : string){\n    this.data.seleccion.push(id);\n  }\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-new-organization-preference',\n  templateUrl: './new-organization-preference.component.html'\n})\nexport class NewOrganizationPreferenceComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<NewOrganizationPreferenceComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n      \n    }\n\n  onNoClick(msg : string) : void {\n    this.dialogRef.close(msg);\n  }\n  \n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators, AbstractControl, ValidatorFn } from '@angular/forms';\n\n@Component({\n  selector: 'app-new-password',\n  templateUrl: './new-password.component.html'\n})\nexport class NewPasswordComponent {\n\n  repassword : string = '';\n\n  PasswordForm : FormGroup;\n\n  constructor(public dialogRef: MatDialogRef<NewPasswordComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n\n    this.PasswordForm = new FormGroup({\n      password: new FormControl('',[Validators.required,Validators.minLength(10)]),\n      repassword: new FormControl('')\n    });\n\n    this.PasswordForm.get('repassword').setValidators([Validators.required,this.ComparePass(this.PasswordForm.get('password'))]);\n  \n  }\n\n  ComparePass(otherControl: AbstractControl): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} => {\n      const value: any = control.value;\n      const otherValue: any = otherControl.value;\n      return otherValue === value ? null : { 'notMatch': { value, otherValue } };\n    };\n  }\n\n  onNoClick(msg : string) : void {\n    this.dialogRef.close(msg);\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-update-executed',\n  templateUrl: './update-executed.component.html'\n})\nexport class UpdateExecutedComponent  {\n\n  constructor(\n    public dialogRef: MatDialogRef<UpdateExecutedComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n\n    }\n\n  onNoClick(msg : string) : void {\n    this.dialogRef.close(msg);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.sass']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-fichas',\n  templateUrl: './fichas.component.html'\n})\nexport class FichasComponent {\n\n  ProjectRecords : any[];\n  Projects : any[];\n  ProjectName : string;\n  selectedProject : string;\n\n  selectedIndicator : string;\n  Indicator : any;\n  Indicators : any[];\n\n  Organizations : any[]; \n\n  fieldsSchema : any[];\n\n  UserResponsable : any;\n\n  SchemaForm : any; \n\n  Period : Date = new Date();\n\n  Status : string = 'none';\n\n  isWorking : boolean = false;\n  loadingMessage : string;\n\n  constructor(public _service : SisiCoreService,\n              private _snackBar : MatSnackBar) { \n    this.Projects = this._service.getProjectsOff().map(project => this.formatProjects(project));\n  }\n\n  formatProjects(project : any){\n    return {\n      name: project.name,\n      _id: project._id\n    }\n  }\n\n  generateSchema(){\n    this.loadingMessage = 'Generando la Ficha...';\n    this.isWorking = true;\n    this.Status = 'loading';\n    setTimeout(this.makeSchema.bind(this),1500);\n  }\n\n  makeSchema(){\n    this.SchemaForm = null;\n    if(this.ProjectRecords.length){\n      let now = new Date();\n      for(let i = 0; i < this.ProjectRecords.length; i++){\n        let record_date = new Date(this.ProjectRecords[i].period);\n        if(this.ProjectRecords[i].records.indicator == this.selectedIndicator && now.getMonth() == record_date.getMonth() && now.getFullYear() == record_date.getFullYear()){\n          this.SchemaForm = this.ProjectRecords[i];\n          let user = this._service.getUser(this.SchemaForm.created_by);\n          this.UserResponsable = `${user.name} ${user.last_names} - ${user.position}`\n          this.Status = 'already-filled';\n          this.isWorking = false;\n          break;\n        }else{\n          this.Status = 'ready';\n        }\n      }\n      if(this.Status == 'ready') this.makeSchemaForm.call(this);\n    }else{\n      this.makeSchemaForm.call(this);\n      this.Status = 'ready';\n    }\n  }\n\n  makeSchemaForm(){\n    if(this.Indicator.type == 'Simple'){\n      this.fieldsSchema = this.Indicator.parameters_schema;\n    }else{\n      this.fieldsSchema = this.Indicator.record_schema;\n    }\n\n    this.SchemaForm = {\n      period: this.Period,\n      records: {\n        indicator: this.selectedIndicator,\n        rows: []\n      }\n    }\n\n    this.Organizations.forEach((organization,index) => {\n      this.SchemaForm.records.rows.push({\n        organization: organization._id,\n        fields: []\n      });\n      this.fieldsSchema.forEach(field => {\n        this.SchemaForm.records.rows[index].fields.push({\n          name: field.name,\n          value: ''\n        });\n      });\n    });\n    this.isWorking = false;\n  }\n\n  onProjectSelect(ev){\n    let project = this._service.getProject(ev);\n    this.ProjectRecords = project.records;\n    this.ProjectName = project.name;\n    this.Indicators = project.indicators;\n    this.Organizations = project.organizations;\n    this.Status = 'none';\n  }\n\n  onIndicatorSelect(ev){\n    this.Indicator = this._service.getIndicator(ev);\n    this.Status = 'none';\n  }\n\n  cancel(){\n\n  }\n\n  save(){\n    let isValid = true;\n    for(let i = 0; i < this.SchemaForm.records.rows.length; i++){\n      for(let j = 0; j < this.SchemaForm.records.rows[i].fields.length; j++){\n        if(this.SchemaForm.records.rows[i].fields[j].value == ''){\n          isValid = false;\n        }\n      }\n    }\n    if(!isValid) return alert('La Ficha debe estar llena completamente.');\n    else{\n      this._service.updateProject({records: this.SchemaForm},this.selectedProject).subscribe(\n        result => {\n          if(result.message == 'UPDATED'){\n            this._service.updateProjectsList(null);\n            this.Status = 'none';\n\n            this.ProjectRecords = result.project.records;\n\n            this.selectedIndicator = null;\n            this._snackBar.open('Ficha guardada exitosamente.','ENTENDIDO',{duration:3000});\n          }\n        },error => this._snackBar.open('Ha ocurrido un error.','ENTENDIDO',{duration: 3000})\n      )\n    }\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToolbarButton } from '../../../shared/sub-toolbar/sub-toolbar.component';\n\n@Component({\n  selector: 'app-funder-view',\n  templateUrl: './funder-view.component.html'\n})\nexport class FunderViewComponent{\n\n  funderID : string;\n\n  editMode : boolean = false;\n\n  userRole : string = localStorage.getItem('userRole');\n\n  Funder : any;\n\n  FunderFormGroup : FormGroup;\n\n  isWorking : boolean = false;\n\n  loadingMessage : string = '';\n\n  DeleteBtn : ToolbarButton = {\n    hasIcon: true,\n    icon: 'delete',\n    handler: ()=>{\n      if(confirm('¬øEst√° seguro que desea eliminar este Financiador?\\n\\nEsta acci√≥n no se puede deshacer.')){\n        this.loadingMessage = 'Eliminando Financiador...'\n        this.isWorking = true;\n        this._service.deleteFunder(this.Funder._id).subscribe(\n          result => {\n            if(result.message == 'DELETED'){\n              this._service.updateProjectsList(null);\n              this._service.updateFundersList(true);\n              this.isWorking = false;\n              this._snackBar.open('Se elimin√≥ el Financiador correctamente.','ENTENDIDO',{duration: 3000});\n            }\n          \n          },error => {\n            this.isWorking = false;\n            this._snackBar.open('Ocurri√≥ un error al eliminar el Financiador.','ENTENDIDO',{duration: 3000})\n          }\n        )\n      }\n    },\n    message: 'ELIMINAR'\n  }\n\n  constructor(private _activatedRoute : ActivatedRoute,\n              private _service : SisiCoreService,\n              private _snackBar : MatSnackBar,\n              private _Router : Router) { \n    this._activatedRoute.params.subscribe(\n      (params : Params) => {\n        this.funderID = params.id;\n        this.Funder = this._service.getFunder(this.funderID)\n      });\n    this.FunderFormGroup = new FormGroup({\n      name: new FormControl({value: this.Funder.name, disabled: true},Validators.required),\n      place: new FormControl({value: this.Funder.place, disabled: true},Validators.required),\n      website: new FormControl({value: this.Funder.website, disabled: true}),\n      coop_date: new FormControl({value: this.Funder.coop_date, disabled: true},[Validators.required,Validators.pattern(new RegExp(/^\\d{1,2}\\/\\d{4}$/))])\n    });\n  }\n\n  edit(){\n    this.editMode = true;\n    this.FunderFormGroup.enable();\n  }\n\n  save(){\n    this.loadingMessage = 'Guardando los cambios en el Financiador...';\n    this.isWorking = true;\n    this._service.updateFunder(this.FunderFormGroup.value,this.funderID).subscribe(\n      result => {\n        this._service.updateFundersList(false);\n        this.Funder = result.funder;\n        this.editMode = false;\n        this.FunderFormGroup.disable();\n        this.isWorking = false;\n        this._snackBar.open('Se han guardado los cambios.','ENTENDIDO',{duration: 3000});\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ha ocurrido un error al guardar los cambios','ENTENDIDO',{duration: 3000})\n      }\n    )\n  }\n\n  cancel(){\n    this.FunderFormGroup.disable();\n    this.FunderFormGroup.reset({\n      name: this.Funder.name,\n      place: this.Funder.place,\n      website: this.Funder.website,\n      coop_date: this.Funder.coop_date\n    });\n    this.editMode = false;\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-funders',\n  templateUrl: './funders.component.html'\n})\nexport class FundersComponent{\n\n  funders : any[] = this._service.getFundersOff();\n\n  userID : string = localStorage.getItem('userID');\n  userRole : string = localStorage.getItem('userRole');\n\n  isWorking : boolean = false;\n\n  loadingMessage : string = 'Registrando Financiador';\n\n  fundersForm : FormGroup;\n  nameCtrl : FormControl = new FormControl('',[Validators.required,this._service.existFunder]);\n  ubicationCtrl : FormControl = new FormControl('',Validators.required);\n  websiteCtrl : FormControl = new FormControl('');\n  coop_dateCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,2}\\/\\d{4}$/))]);\n\n  constructor(private _service : SisiCoreService,\n              private _snackBar : MatSnackBar) { \n    this.fundersForm = new FormGroup({\n      name: this.nameCtrl,\n      place: this.ubicationCtrl,\n      website: this.websiteCtrl,\n      coop_date: this.coop_dateCtrl\n    });\n  }\n\n  reset(){\n    this.fundersForm.reset();\n  }\n\n  saveFunder(){\n    this.isWorking = true;\n    let body = this.fundersForm.value;\n    this._service.createFunder(body).subscribe(\n      result => {\n        this.funders.push(result.funder);\n        this._service.updateFundersList(null);\n        this.fundersForm.reset();\n        this.isWorking = false;\n        this._snackBar.open('Se ha registrado el financiador correctamente.','ENTENDIDO',{duration: 3000});\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ha ocurrido un error al registrar el financiador.','ENTENDIDO',{duration: 3000})\n      }\n    );\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { FormGroup, Validators, FormControl, FormArray } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToolbarButton } from '../../../shared/sub-toolbar/sub-toolbar.component';\n\n@Component({\n  selector: 'app-indicator-view',\n  templateUrl: './indicator-view.component.html'\n})\nexport class IndicatorViewComponent{\n\n  Indicator : any;\n\n  IndicatorForm : FormGroup;\n\n  ParameterSelected : number;\n\n  editMode : boolean;\n\n  userRole : string = localStorage.getItem('userRole');\n\n  isWorking : boolean = false;\n  loadingMessage : string = '';\n\n  DeleteBtn : ToolbarButton = {\n    hasIcon: true,\n    icon: 'delete',\n    handler: ()=>{\n      if(confirm('¬øEst√° seguro que desea eliminar este Indicador?\\n\\nEsta acci√≥n no se puede deshacer.')){\n        this.loadingMessage = 'Eliminando Indicador...';\n        this.isWorking = true;\n        this._service.deleteIndicator(this.Indicator._id).subscribe(\n        result => {\n          if(result.message == 'DELETED'){\n            this._service.updateIndicatorsList(true);\n            this.isWorking = false;\n            this._snackBar.open('Se elimin√≥ el Indicador correctamente.','ENTENDIDO',{duration: 3000});\n          }\n        },error => {\n          this.isWorking = false;\n          this._snackBar.open('Ocurri√≥ un error al eliminar el Indicador.','ENTENDIDO',{duration: 3000})\n        }\n      )\n      }\n    },\n    message: 'ELIMINAR'\n  }\n\n  constructor(private _activatedRoute : ActivatedRoute,\n              private _service : SisiCoreService,\n              private _snackBar : MatSnackBar) { \n    this._activatedRoute.params.subscribe(\n      (params : Params) => {\n        this.Indicator = this._service.getIndicator(params.id);\n        this.editMode = false;\n        this.getFormFromIndicator();\n      }\n    );\n  }\n\n  getFormFromIndicator(){\n    console.log(this.Indicator);\n    if(this.Indicator.type == 'Simple'){\n      let description : string;\n      if(this.Indicator.description) description = this.Indicator.description;\n      else description = '';\n      this.IndicatorForm = new FormGroup({\n        name: new FormControl(this.Indicator.name,[Validators.required,this._service.isBlank]),\n        type : new FormControl(this.Indicator.type,Validators.required),\n        antiquity_diff: new FormControl(this.Indicator.antiquity_diff),\n        parameters_schema: new FormArray([]),\n        description: new FormControl(description,[Validators.required,this._service.isBlank])\n      });\n    }else{\n      this.IndicatorForm = new FormGroup({\n        name: new FormControl(this.Indicator.name,[Validators.required,this._service.isBlank]),\n        type : new FormControl(this.Indicator.type,Validators.required),\n        antiquity_diff: new FormControl(this.Indicator.antiquity_diff),\n        record_schema: new FormArray([]),\n        parameters_schema: new FormArray([])\n      });\n      this.Indicator.record_schema.forEach(field => {\n        (<FormArray> this.IndicatorForm.controls.record_schema).push(new FormGroup({\n          name: new FormControl(field.name,[Validators.required,this._service.isBlank]),\n          frequency: new FormControl(field.frequency,[Validators.required]),\n          unit: new FormControl(field.unit,[Validators.required])\n        }));\n      });\n\n      \n    }\n    this.Indicator.parameters_schema.forEach((parameter,i) => {\n      let weighing : any = {};\n      if(!parameter.weighing[0].weight) weighing.weight = 0;\n      else weighing.weight = parameter.weighing[0].weight;\n      if(!parameter.weighing[0].older) weighing.older = 0;\n      else weighing.older = parameter.weighing[0].older;\n      if(!parameter.weighing[0].newer) weighing.newer = 0;\n      else weighing.newer = parameter.weighing[0].newer;\n      (<FormArray> this.IndicatorForm.controls.parameters_schema).push(new FormGroup({\n          name: new FormControl(parameter.name,Validators.required),\n          weighing: new FormArray([new FormGroup({\n            weight: new FormControl(weighing.weight),\n            older: new FormControl(weighing.older),\n            newer: new FormControl(weighing.newer),\n          })]),\n          isAcum: new FormControl(parameter.isAcum,Validators.required),\n          unit: new FormControl(parameter.unit,Validators.required),\n          definition: new FormArray([]),\n          frequency: new FormControl('')\n        }));\n        parameter.definition.forEach(operator => {\n          (<FormArray> this.IndicatorForm.controls.parameters_schema['controls'][i].controls.definition).push(new FormControl(operator,Validators.required))\n        });\n    });\n    console.log(this.IndicatorForm.value);\n\n  }\n\n  setEditMode(){\n    this.editMode = true;\n  }\n\n  saveIndicator(){\n    this.loadingMessage = 'Guardando los cambios en el Indicador...';\n    this.isWorking = true;\n    let body : any = this.IndicatorForm.value;\n    console.log(body);\n    if(body.type == 'Simple'){\n      if(!this.IndicatorForm.valid){\n        this.isWorking = false;\n        return alert('Todos los campos son obligatorios, por favor, revise el formulario.');\n      }\n    }else{ //Indicador Compuesto\n      let flag : string;\n      body.parameters_schema.forEach((parameter : any) => {\n        if(!parameter.definition.length) return flag = 'Debe definir todos los par√°metros del Indicador.';\n      });\n      if(flag) {\n        this.isWorking = false;\n        return alert(flag);\n      }\n      let suma : any = {\n        older: 0,\n        newer: 0,\n        none: 0\n      }\n      body.parameters_schema.forEach(parameter => {\n        if(body.antiquity_diff){\n          suma.older += parseInt(parameter.weighing[0].older);\n          suma.newer += parseInt(parameter.weighing[0].newer);\n          if(parameter.weighing[0].newer == null || parameter.weighing[0].older == null) return flag = 'Debe completar todas las ponderaciones solicitadas.';\n        }else{\n          suma.none += parseInt(parameter.weighing[0].weight);\n          if(parameter.weighing[0].weight == null) return flag = 'Debe completar todas las ponderaciones solicitadas.';\n        }\n      });\n      if(flag) {\n        this.isWorking = false;\n        return alert(flag);\n      }\n      \n      if(body.antiquity_diff && (suma.older != 100 || suma.newer != 100)) flag = 'La ponderaci√≥n debe sumar 100% en total.';\n      if(!body.antiquity_diff && suma.none != 100) flag = 'La ponderaci√≥n debe sumar 100% en total.';\n      if(flag) {\n        this.isWorking = false;\n        return alert(flag);\n      }\n\n      if(this.IndicatorForm.invalid){\n        this.isWorking = false;\n        return alert('Todos los campos son obligatorios, por favor, revise el formulario');\n      }\n    }\n    this._service.updateIndicator(body,this.Indicator._id).subscribe(\n      result => {\n        if(result.message == 'UPDATED'){\n          this.Indicator = result.indicator;\n          this.editMode = false;\n          this.getFormFromIndicator();\n          this._service.updateIndicatorsList(null);\n          this.isWorking = false;\n          this._snackBar.open('Se ha modificado el indicador correctamente.','ENTENDIDO',{duration: 3000});\n        }\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ha ocurrido un error al actualizar el indicador.','ENTENDIDO',{duration: 3000});\n      }\n    );\n  }\n  \n  addParameter(){\n    (<FormArray>this.IndicatorForm.controls.parameters_schema).push(new FormGroup({\n        name: new FormControl('',Validators.required),\n        weighing: new FormArray([new FormGroup({\n          weight: new FormControl(''),\n          older: new FormControl(''),\n          newer: new FormControl(''),\n        })]),\n        isAcum: new FormControl(false,Validators.required),\n        unit: new FormControl('',Validators.required),\n        definition: new FormArray([])\n      })\n    );\n  }\n\n  addField(){\n    (<FormArray>this.IndicatorForm.controls.record_schema).push(new FormGroup({\n      name: new FormControl('',[Validators.required,this._service.isBlank]),\n      frequency: new FormControl('',[Validators.required]),\n      unit: new FormControl('',[Validators.required])\n    }));\n  }\n\n  cancel(){\n    if(confirm('Los cambios no guardados se borrar√°n.\\n\\n¬øEst√° seguro que desea cancelar la Edici√≥n?')){\n      this.editMode = false;\n      this.getFormFromIndicator();\n    }\n  }\n\n  addOperator(operator : string){\n    (<FormArray> this.IndicatorForm.controls.parameters_schema['controls'][this.ParameterSelected].controls.definition).push(new FormControl(operator));\n  }\n\n  addFieldToDefinition(value : string){\n    (<FormArray> this.IndicatorForm.controls.parameters_schema['controls'][this.ParameterSelected].controls.definition).push(new FormControl(value));\n  }\n\n  remove(index : number){\n    (<FormArray> this.IndicatorForm.controls.parameters_schema['controls'][this.ParameterSelected].controls.definition).removeAt(index)\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\n\n@Component({\n  selector: 'app-indicators',\n  templateUrl: './indicators.component.html'\n})\nexport class IndicatorsComponent{\n\n  Indicators : any[] = this._service.getIndicatorsOff();\n\n  search_term : string = '';\n\n  filteredList : any[] = this.Indicators;\n\n  userRole : string = localStorage.getItem('userRole');\n\n  constructor(private _service : SisiCoreService) { \n\n  }\n\n  filter(){\n    if(!this.search_term.trim()) this.filteredList = this.Indicators;\n    this.filteredList = this.Indicators.filter(indicator => indicator.name.toLowerCase().includes(this.search_term.trim().toLowerCase()));\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-indicator',\n  templateUrl: './new-indicator.component.html'\n})\nexport class NewIndicatorComponent{\n\n  indicatorForm : FormGroup;\n\n  parameterSelected;\n\n  isWorking : boolean = false;\n  loadingMessage : string; \n\n  nameCtrl : FormControl = new FormControl('',[Validators.required,this._service.isBlank]);\n  typeCtrl : FormControl = new FormControl('Compuesto',Validators.required);\n  antiquity_diffCtrl : FormControl = new FormControl(false);\n  descriptionCtrl : FormControl = new FormControl('',[Validators.required,this._service.isBlank]);\n  \n  fields : FormGroup = new FormGroup({\n    name: new FormControl('',Validators.required),\n    frequency: new FormControl('',Validators.required),\n    isAcum: new FormControl(false,Validators.required),\n    unit: new FormControl('',Validators.required)\n  });\n  \n  parameterCompuesto : FormArray = new FormArray([\n    new FormGroup({\n      name: new FormControl('',Validators.required),\n      weighing: new FormGroup({\n        weight: new FormControl(''),\n        older: new FormControl(''),\n        newer: new FormControl(''),\n      }),\n      isAcum: new FormControl(false,Validators.required),\n      unit: new FormControl('',Validators.required),\n      definition: new FormArray([])\n    })\n  ]);\n\n  record_schemaCtrl : FormArray = new FormArray([\n    new FormGroup({\n      name: new FormControl('',[Validators.required,this._service.isBlank]),\n      frequency: new FormControl('',[Validators.required]),\n      unit: new FormControl('',Validators.required)\n    })\n  ]);\n\n  constructor(private _service : SisiCoreService,\n              private _snackBar : MatSnackBar,\n              private _Router : Router) { \n    if(this.typeCtrl.value == 'Simple'){\n      this.indicatorForm = new FormGroup({\n        name: this.nameCtrl,\n        type: this.typeCtrl,\n        parameters_schema: this.fields\n      });\n    }else{\n      this.indicatorForm = new FormGroup({\n        name: this.nameCtrl,\n        type: this.typeCtrl,\n        record_schema: this.record_schemaCtrl,\n        parameters_schema: this.parameterCompuesto,\n        antiquity_diff: this.antiquity_diffCtrl\n      });\n    }\n  }\n\n  showData(){\n    console.log(this.indicatorForm);\n  }\n\n  addParameter(){\n    (<FormArray>this.parameterCompuesto).push(new FormGroup({\n        name: new FormControl('',Validators.required),\n        weighing: new FormGroup({\n          weight: new FormControl(''),\n          older: new FormControl(''),\n          newer: new FormControl(''),\n        }),\n        isAcum: new FormControl(false,Validators.required),\n        unit: new FormControl('',Validators.required),\n        definition: new FormArray([])\n      })\n    );\n  }\n\n  addField(){\n    (<FormArray>this.record_schemaCtrl).push(new FormGroup({\n      name: new FormControl('',[Validators.required,this._service.isBlank]),\n      frequency: new FormControl('',[Validators.required]),\n      unit: new FormControl('',[Validators.required])\n    }));\n  }\n\n  changeType(ev){\n    if(ev == 'Simple'){\n      this.indicatorForm = new FormGroup({\n        name: this.nameCtrl,\n        type: this.typeCtrl,\n        parameters_schema: this.fields,\n        description: this.descriptionCtrl\n      });\n    }else{\n      this.indicatorForm = new FormGroup({\n        name: this.nameCtrl,\n        type: this.typeCtrl,\n        record_schema: this.record_schemaCtrl,\n        parameters_schema: this.parameterCompuesto,\n        antiquity_diff: this.antiquity_diffCtrl\n      });\n    }\n  }\n\n  saveIndicator(){\n    this.loadingMessage = 'Guando el Indicador...';\n    this.isWorking = true;\n    let body : any;\n    if(this.typeCtrl.value == 'Simple'){\n      if(this.indicatorForm.valid){\n        body = this.indicatorForm.value;\n        body.parameters_schema = [{\n          name: this.fields.controls.name.value,\n          frequency: this.fields.controls.frequency.value,\n          isAcum: this.fields.controls.isAcum.value,\n          unit: this.fields.controls.unit.value,\n          definition: this.descriptionCtrl.value,\n          weighing: {weight: 100}\n        }];\n        body.antiquity_diff = false;\n        console.log(body);\n      }else {\n        this.isWorking = false\n        return alert('Todos los campos son obligatorios, por favor, revise el formulario.');\n      }\n    }else{\n      body = this.indicatorForm.value;\n      let flag : string;\n      if(body.parameters_schema.length == 1) {\n        this.isWorking = false;\n        return alert(\"Los indicadores compuestos tienen al menos 2 par√°metros. Si este indicador tine solamente uno, seleccione el tipo 'Simple'\");\n      }\n      body.parameters_schema.forEach((parameter : any) => {\n        if(!parameter.definition.length) return flag = 'Debe definir todos los par√°metros del Indicador.';\n      });\n      if(flag){\n        this.isWorking = false;\n        return alert(flag);\n      }\n      let suma : any = {\n        older: 0,\n        newer: 0,\n        none: 0\n      }\n      body.parameters_schema.forEach(parameter => {\n        if(this.antiquity_diffCtrl.value){\n          suma.older += parseInt(parameter.weighing.older);\n          suma.newer += parseInt(parameter.weighing.newer);\n          if(parameter.weighing.newer == null || parameter.weighing.older == null) return flag = 'Debe completar todas las ponderaciones solicitadas.';\n        }else{\n          suma.none += parseInt(parameter.weighing.weight);\n          if(parameter.weighing.weight == null) return flag = 'Debe completar todas las ponderaciones solicitadas.';\n        }\n      });\n      if(flag) {\n        this.isWorking = false;\n        return alert(flag);\n      }\n      \n      if(this.antiquity_diffCtrl.value && (suma.older != 100 || suma.newer != 100)) flag = 'La ponderaci√≥n debe sumar 100% en total.';\n      if(!this.antiquity_diffCtrl.value && suma.none != 100) flag = 'La ponderaci√≥n debe sumar 100% en total.';\n      if(flag) {\n        this.isWorking = false;\n        return alert(flag);\n      }\n\n      if(this.indicatorForm.invalid){ \n        this.isWorking = false;\n        return alert('Todos los campos son obligatorios, por favor, revise el formulario');\n      }\n    }\n    this._service.createIndicator(body).subscribe(\n      result => {\n        this._service.updateIndicatorsList(true);\n        this.isWorking = false;\n        this._snackBar.open('Se ha registrado el indicador correctamente.','ENTENDIDO',{duration: 3000});\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ha ocurrido un error al registrar el indicador.','ENTENDIDO',{duration: 3000});\n      }\n    );\n  }\n\n  cancel(){\n    if(confirm('Los cambios no guardados se borrar√°n.\\n\\n¬øEst√° seguro que desea salir?')) this._Router.navigate(['/indicators']);\n  }\n\n  addOperator(operator : string){\n    (<FormArray> this.parameterCompuesto.controls[this.parameterSelected]['controls']['definition']).push(new FormControl(operator));\n  }\n\n  addFieldToDefinition(value : string){\n    (<FormArray> this.parameterCompuesto.controls[this.parameterSelected]['controls']['definition']).push(new FormControl(value));\n  }\n\n  remove(index : number){\n    (<FormArray> this.parameterCompuesto.controls[this.parameterSelected]['controls']['definition']).removeAt(index)\n  }\n\n}\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators, } from '@angular/forms';\nimport { SisiCoreService } from '../../../services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent{\n\n  @Output() authentication : EventEmitter<void> = new EventEmitter();\n  @Output() isWorking : EventEmitter<any> = new EventEmitter();\n\n  LoginForm : FormGroup;\n\n  constructor(private _service : SisiCoreService,\n              private _snackBar : MatSnackBar) { \n    this.LoginForm = new FormGroup({\n      'username': new FormControl('',Validators.required),\n      'password': new FormControl('',[Validators.required,Validators.minLength(8)])\n    });\n  }\n\n  login(){\n    this.isWorking.emit({isWorking: true, message: 'Ingresando'});\n    let body = this.LoginForm.value;\n    body.last_login_date = new Date();\n\n    this._service.authenticate(body).subscribe(\n      result => {\n        this._snackBar.open(result.message,'ENTENDIDO',{duration: 3000});\n        if(result.message == 'Ingreso exitoso.'){\n          localStorage.setItem('user',JSON.stringify(result.user));\n          localStorage.setItem('token',result.token);\n          this.authentication.emit();\n        }\n        this.isWorking.emit({isWorking: false});\n      },\n      error => {\n        this.isWorking.emit({isWorking: false});\n        this._snackBar.open('Ha ocurrido un error, intente nuevamente.','ENTENDIDO',{duration: 3000})\n      }\n    );\n    \n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { NewOrganizationPreferenceComponent } from '../../../dialogs/new-organization-preference/new-organization-preference.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-new-organization',\n  templateUrl: './new-organization.component.html'\n})\nexport class NewOrganizationComponent implements OnInit {\n\n  organizationForm : FormGroup;\n\n  Sectors : any[] = this._service.getSectorsOff();\n  Types : any[] = this._service.getTypesOff();\n\n  isOlder : boolean = false;\n  isWorking : boolean= false;\n  loadingMessage : string = '';\n\n  newSector : boolean = false;\n\n  nameCtrl : FormControl = new FormControl('',[Validators.required,this._service.existOrganization]);\n  foundation_dateCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^(0?[1-9]|[12][0-9]|3[01])[\\/](0?[1-9]|1[012])[/\\\\/](19|20)\\d{2}$/))]);\n  sectorCtrl : FormControl = new FormControl('',Validators.required);\n  typeCtrl : FormControl = new FormControl('',Validators.required);\n  legalizedCtrl : FormControl = new FormControl('',Validators.required);\n  mensCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n  womensCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n  beneficiariesCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n  cantonCtrl : FormControl = new FormControl('',Validators.required);\n  recintoCtrl : FormControl = new FormControl('',Validators.required);\n  parroquiaCtrl : FormControl = new FormControl('',Validators.required);\n\n  constructor(private _service : SisiCoreService,\n              private _snackBar : MatSnackBar,\n              private dialog : MatDialog) { }\n\n  ngOnInit() {\n    this.organizationForm = new FormGroup({\n      name : this.nameCtrl,\n      foundation_date : this.foundation_dateCtrl,\n      sector: this.sectorCtrl,\n      type: this.typeCtrl,\n      legalized: this.legalizedCtrl,\n      partners: new FormGroup({\n        mens: this.mensCtrl,\n        womens: this.womensCtrl\n      }),\n      beneficiaries: this.beneficiariesCtrl,\n      ubication: new FormGroup({\n        canton: this.cantonCtrl,\n        recinto: this.recintoCtrl,\n        parroquia: this.parroquiaCtrl\n      })\n    });\n  }\n\n  setOlder(event){\n    let anio = this.foundation_dateCtrl.value.split('/')[2];\n    if(anio >= 2019) this.isOlder = false;\n    else this.isOlder = true;\n  }\n\n  saveOrganization(){\n    this.loadingMessage = 'Guardando nueva organizaci√≥n...'\n    this.isWorking = true;\n    let organization = this.organizationForm.value;\n    organization.created_by = localStorage.getItem('userID');\n    organization.isOlder = this.isOlder;\n\n    this._service.createOrganization(organization).subscribe(\n      result => {\n        this._service.updateOrganizationsList(true);\n        this.isWorking = false;\n        this._snackBar.open('La organizaci√≥n se registr√≥ correctamente.','ENTENDIDO',{duration: 3000});\n\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ocurri√≥ un error al guardar la organizaci√≥n.','ENTENDIDO',{duration: 3000});\n      }\n    );\n  }\n\n  /**\n   * Sectors\n   */\n  addNewSector(){\n    const dialogRef = this.dialog.open(NewOrganizationPreferenceComponent, {\n      width: '550px',\n      data: {preference: 'sectors'}\n    });\n\n    dialogRef.afterClosed().subscribe(sector => {\n      if(sector){\n        /**Actualizar Financiadores */\n        this._service.addNewOrganizationPreference({sector}).subscribe(\n          result => {\n            console.log(result);\n            this.Sectors.push(sector);\n            this._service.updatePreferencesList();\n            this._snackBar.open('Se a√±adi√≥ correctamente el sector.','ENTENDIDO',{duration : 3000});\n          },error =>{\n            this._snackBar.open('Ocurri√≥ un error al registrar un nuevo sector.','ENTENDIDO',{duration: 3000});\n          });\n      }\n    });\n  }\n\n  addNewType(){\n    const dialogRef = this.dialog.open(NewOrganizationPreferenceComponent, {\n      width: '550px',\n      data: {preference: 'types'}\n    });\n\n    dialogRef.afterClosed().subscribe(type => {\n      if(type){\n        /**Actualizar Financiadores */\n        this._service.addNewOrganizationPreference({type}).subscribe(\n          result => {\n            console.log(result,type);\n            this.Types.push(type);\n            this._service.updatePreferencesList();\n            this._snackBar.open('Se a√±adi√≥ correctamente el tipo.','ENTENDIDO',{duration : 3000});\n          },error => this._snackBar.open('Ocurri√≥ un error al registrar un nuevo tipo.','ENTENDIDO',{duration: 3000})\n        )\n      }\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { FormGroup,FormControl,Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToolbarButton } from '../../../shared/sub-toolbar/sub-toolbar.component';\n\n@Component({\n  selector: 'app-organization-view',\n  templateUrl: './organization-view.component.html'\n})\nexport class OrganizationViewComponent implements OnInit{\n\n  buttons : ToolbarButton[];\n\n  Organization : any;\n\n  organizationForm : FormGroup;\n\n  userRole : string = localStorage.getItem('userRole');\n\n  editMode : boolean = false;\n\n  isOlder : boolean = false;\n\n  isWorking : boolean = false;\n  loadingMessage : string;\n\n  nameCtrl : FormControl;\n  foundation_dateCtrl : FormControl;\n  sectorCtrl : FormControl;\n  typeCtrl : FormControl;\n  legalizedCtrl : FormControl;\n  mensCtrl : FormControl;\n  womensCtrl : FormControl;\n  beneficiariesCtrl : FormControl;\n  cantonCtrl : FormControl;\n  recintoCtrl : FormControl;\n  parroquiaCtrl : FormControl;\n\n\n  constructor(private _ActivatedRoute : ActivatedRoute,\n              private _service : SisiCoreService,\n              private _snackBar : MatSnackBar,\n              private _Router : Router) {\n    \n    this._ActivatedRoute.params.subscribe(\n      (params : Params) => this.Organization = this._service.getOrganization(params.id)\n    );\n\n    this.buttons  = [\n      {\n        message: 'SOCIOS',\n        hasIcon: true,\n        icon: 'people',\n        handler: () => {\n          this._Router.navigate(['organizations',this.Organization._id,'partners']);\n        }\n      },\n      {\n        message: 'ELIMINAR',\n        hasIcon: true,\n        icon: 'delete',\n        handler: () => {\n          if(confirm('¬øEst√° seguro que desea eliminar esta Organizaci√≥n?\\n\\nEsta acci√≥n no se puede deshacer.')) {\n            this.loadingMessage = 'Eliminando la Organizaci√≥n ...';\n            this.isWorking = true;\n            this._service.deleteOrganization(this.Organization._id).subscribe(\n            result => {\n              if(result.message == 'DELETED'){\n                this._service.updateOrganizationsList(true);\n                this.isWorking = false;\n                this._snackBar.open('Se elimin√≥ la Organizaci√≥n correctamente.','ENTENDIDO',{duration: 3000});\n              }\n            },error => {\n              this.isWorking = false;\n              this._snackBar.open('Ocurri√≥ un error al eliminar la Organizaci√≥n.','ENTENDIDO',{duration: 3000})\n            }\n          )\n          }\n        }\n      }\n    ];\n    \n  }\n\n  ngOnInit(){\n    this.nameCtrl = new FormControl(this.Organization.name,[Validators.required,this._service.existOrganization]);\n    this.foundation_dateCtrl = new FormControl(this.Organization.foundation_date,[Validators.required,Validators.pattern(new RegExp(/^(0?[1-9]|[12][0-9]|3[01])[\\/](0?[1-9]|1[012])[/\\\\/](19|20)\\d{2}$/))]);\n    this.sectorCtrl = new FormControl(this.Organization.sector,Validators.required);\n    this.typeCtrl = new FormControl(this.Organization.type,Validators.required);\n    this.legalizedCtrl = new FormControl(this.Organization.legalized,Validators.required);\n    this.mensCtrl = new FormControl(this.Organization.partners.mens,[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n    this.womensCtrl = new FormControl(this.Organization.partners.womens,[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n    this.beneficiariesCtrl = new FormControl(this.Organization.beneficiaries,[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n    this.cantonCtrl = new FormControl(this.Organization.ubication.canton,Validators.required);\n    this.recintoCtrl = new FormControl(this.Organization.ubication.recinto,Validators.required);\n    this.parroquiaCtrl = new FormControl(this.Organization.ubication.parroquia,Validators.required);\n    this.organizationForm = new FormGroup({\n      name : this.nameCtrl,\n      foundation_date : this.foundation_dateCtrl,\n      sector: this.sectorCtrl,\n      type: this.typeCtrl,\n      legalized: this.legalizedCtrl,\n      partners: new FormGroup({\n        mens: this.mensCtrl,\n        womens: this.womensCtrl\n      }),\n      beneficiaries: this.beneficiariesCtrl,\n      ubication: new FormGroup({\n        canton: this.cantonCtrl,\n        recinto: this.recintoCtrl,\n        parroquia: this.parroquiaCtrl\n      })\n    });\n    this.organizationForm.disable();\n  }\n\n  setOlder(){\n    let anio = this.foundation_dateCtrl.value.split('/')[2];\n    if(anio >= 2019) this.isOlder = false;\n    else this.isOlder = true;\n  }\n\n  updateOrganization(){\n    this.loadingMessage = 'Guardando los cambios...'\n    this.isWorking = true;\n    let body : any = this.organizationForm.value;\n    body.isOlder = this.isOlder;\n    body.last_updated_by = localStorage.getItem('userID');\n    this._service.updateOrganization(body,this.Organization._id).subscribe(\n      result => {\n        this.Organization = result.organization;\n        this._service.updateOrganizationsList(null);\n        this.editMode = false;\n        this.organizationForm.disable();\n        this.isWorking = false;\n        this._snackBar.open('Se han guardado los cambios correctamente.','ENTENDIDO',{duration: 3000});\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ocurri√≥ un problema al guardar los cambios.','ENTENDIDO',{duration: 3000});\n      }\n    );\n  }\n\n  edit(){\n    this.editMode = true;\n    this.organizationForm.enable();\n  }\n\n  onCancel(){\n    if(confirm('Todos los cambios no guardados se perder√°n.\\n\\n¬øDesea continuar?')){\n      this.editMode = false;\n      this.organizationForm.disable();\n      this.organizationForm.reset({\n        name : this.Organization.name,\n        foundation_date : this.Organization.foundation_date,\n        sector: this.Organization.sector,\n        type: this.Organization.type,\n        legalized: this.Organization.legalized,\n        partners: new FormGroup({\n          mens: this.Organization.partners.mens,\n          womens: this.Organization.partners.womens\n        }),\n        beneficiaries: this.Organization.beneficiaries,\n        ubication: new FormGroup({\n          canton: this.Organization.ubication.canton,\n          recinto: this.Organization.ubication.recinto,\n          parroquia: this.Organization.ubication.parroquia\n        })\n      });\n    }\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\n\n@Component({\n  selector: 'app-organizations',\n  templateUrl: './organizations.component.html'\n})\nexport class OrganizationsComponent {\n\n  Organizations : any[] = this._service.getOrganizationsOff();\n\n  userRole : string = localStorage.getItem('userRole');\n\n  constructor(private _service : SisiCoreService) {\n    \n  }\n\n}\n","import { Component, ViewChild, OnInit, …µConsole } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\nimport { SisiDatewarehouseService } from '../../../../services/sisi-datewarehouse√ß.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-partners-historic',\n  templateUrl: './partners-historic.component.html'\n})\nexport class PartnersHistoricComponent implements OnInit {\n\n  Organization : any;\n\n  ELEMENT_DATA : Registry[];\n  /*Table Widget*/\n  displayedColumns : string[];\n  dataSource : MatTableDataSource<Registry>;\n\n  constructor(private _ActivatedRoute : ActivatedRoute,\n              private _Service : SisiCoreService,\n              private _Datawarehouse : SisiDatewarehouseService,\n              private _snackbar : MatSnackBar) { \n\n    this._ActivatedRoute.params.subscribe(\n      (params : Params) => this.Organization = this._Service.getOrganization(params.id)\n    );\n\n    this._Datawarehouse.getPartnersHistoryData(this.Organization._id)\n        .subscribe(\n          result => {\n            if(result.message == 'OK'){\n              result.data[0].series.forEach(serie => serie.name = new Date(serie.name));\n              result.data[1].series.forEach(serie => serie.name = new Date(serie.name));\n              this.multi = null;\n              this.multi = result.data;\n              this.generateTable();\n            }\n          },\n          error => this._snackbar.open('Error al recuperar los datos para la gr√°fica.','ENTENDIDO',{duration: 3000})\n        );\n\n\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  /**\n   * Graphic's Logic\n   */\n\n  multi: any[];\n  view: any[] = [900, 400];\n\n  // options\n  legend: boolean = true;\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  //Eje de X\n  xAxisLabel: string = 'Tiempo';\n  //Eje de Y\n  yAxisLabel: string = 'N√∫mero de Socios';\n  timeline: boolean = true;\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25']\n  };\n\n  onSelect(data): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data): void {\n    console.log('Activate', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n\n  getRegistryDate (fecha : Date) : String{\n    return `${fecha.getMonth() + 1}-${fecha.getFullYear()}`;\n  }\n\n  generateTable(){\n    this.ELEMENT_DATA = [];\n    let fecha : Date = new Date(this.Organization.created_at);\n    this.ELEMENT_DATA.push({\n      number: 1,\n      period: `${this.getMonthText(fecha.getMonth() + 1)} - ${new Date(this.Organization.created_at).getFullYear()}`,\n      mens: this.Organization.partners.mens,\n      womens: this.Organization.partners.womens,\n      total: this.Organization.partners.mens + this.Organization.partners.womens\n    });\n    this.Organization.historyPartners.forEach((registry, index) => {\n      let fechaPeriodo : Date = new Date(registry.period);\n      this.ELEMENT_DATA.push({\n        number: index + 2,\n        period: `${this.getMonthText(fechaPeriodo.getMonth() + 1)} - ${fechaPeriodo.getFullYear()}`,\n        mens: registry.mens,\n        womens: registry.womens,\n        total: registry.mens + registry.womens\n      })\n    });\n    this.displayedColumns = ['number', 'period', 'mens', 'womens', 'total'];\n    this.dataSource = new MatTableDataSource<Registry>(this.ELEMENT_DATA);\n  }\n\n  getMonthText (month : number) : string {\n    let mes : string = '';\n    switch(month){\n      case 1:\n        mes = 'Enero';\n        break;\n      case 2:\n        mes = 'Febrero';\n        break;\n      case 3:\n        mes = 'Marzo';\n        break;\n      case 4:\n        mes = 'Abril';\n        break;\n      case 5:\n        mes = 'Mayo';\n        break;\n      case 6:\n        mes = 'Junio';\n        break;\n      case 7:\n        mes = 'Julio';\n        break;\n      case 8:\n        mes = 'Agosto';\n        break;\n      case 9:\n        mes = 'Septiembre';\n        break;\n      case 10:\n        mes = 'Octubre';\n        break;\n      case 11:\n        mes = 'Noviembre';\n        break;\n      case 12:\n        mes = 'Diciembre';\n        break;\n      default:\n        break;\n    }\n    return mes;\n  }\n\n  formatDate (fecha : Date) : string {\n    return fecha.toString().split('T')[0];\n  }\n\n}\n\n  export interface Registry {\n    number: number,\n    period: string,\n    mens: number,\n    womens: number,\n    total: number\n  }","import { Component } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { ToolbarButton } from '../../../shared/sub-toolbar/sub-toolbar.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-partners',\n  templateUrl: './partners.component.html'\n})\nexport class PartnersComponent {\n\n  PartnerForm : FormGroup;\n\n  Organization : any;\n\n  ActualPartners : any;\n\n  buttons : ToolbarButton[];\n\n  mensCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n  womensCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n\n  constructor(private _ActivedRoute : ActivatedRoute,\n              private _service : SisiCoreService,\n              private _snackBar : MatSnackBar,\n              private _Router : Router) { \n    \n    this._ActivedRoute.params.subscribe(  \n      (params: Params) => this.Organization = this._service.getOrganization(params.id)\n    );\n\n    this.PartnerForm = new FormGroup({\n      mens: this.mensCtrl,\n      womens: this.womensCtrl\n    });\n    console.log(this.Organization);\n    if(this.Organization.historyPartners.length) {\n      console.log('si hay');\n      this.ActualPartners = {\n        mens: this.Organization.historyPartners[this.Organization.historyPartners.length - 1].mens,\n        womens: this.Organization.historyPartners[this.Organization.historyPartners.length - 1].womens,\n        total: this.Organization.historyPartners[this.Organization.historyPartners.length - 1].mens + this.Organization.historyPartners[this.Organization.historyPartners.length - 1].womens\n      }\n    }else {\n      console.log('no hay');\n      this.ActualPartners = {\n        mens: this.Organization.partners.mens,\n        womens: this.Organization.partners.womens,\n        total: this.Organization.partners.mens + this.Organization.partners.womens\n      }\n    }\n    this.buttons = [\n      {\n        message: 'HIST√ìRICO',\n        hasIcon: true,\n        icon: 'timeline',\n        handler: () => {\n          this._Router.navigate(['organizations',this.Organization._id,'partners','historic'])\n        }\n      }\n    ];\n  }\n\n  cancel(){\n    this.PartnerForm.reset();\n  }\n\n  toNumber ( number : string ) : number {\n    return Number.parseInt(number);\n  }\n\n  save(){\n    let history : any[];\n    let registry : any = this.PartnerForm.value;\n    registry.period = new Date(); \n    history = this.Organization.historyPartners;\n    history.push(registry);\n    this._service.updateOrganization({historyPartners: history},this.Organization._id).subscribe(\n      result => {\n\n        this.Organization = result.organization;\n        let organizations : any[] = JSON.parse(localStorage.getItem('organizations'));\n        let position : number;\n        for(let i = 0; i < organizations.length; i++){\n          if(organizations[i]._id == this.Organization._id) position = i; \n        }\n        organizations.splice(position,1);\n        organizations.push(result.organization);\n        localStorage.setItem('organizations',JSON.stringify(organizations));\n\n        this.PartnerForm.reset();\n        this._snackBar.open('Se ha actualizado los socios correctamente.','ENTENDIDO',{duration: 3000});\n      },error => this._snackBar.open('Ha ocurrido un error al actualizar los socios.','ENTENDIDO',{duration: 3000})\n    );\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { MatSelectionList } from '@angular/material/list';\n\nimport { convertSize, getTypeFromExt } from '../../../shared/upload-box/upload-box.component';\n\nimport * as Moment from 'moment'\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-project',\n  templateUrl: './new-project.component.html'\n})\nexport class NewProjectComponent{\n\n  Organizations : any[] = this._service.getOrganizationsOff();\n  Funders : any[] = this._service.getFundersOff();\n  Indicators : any[] = this._service.getIndicatorsOff(); \n  \n  ProjectFormGroup : FormGroup;\n\n  isValid : boolean = true;\n\n  organizationsSelected : any = [];\n  indicatorsSelected : any = [];\n\n  isWorking : boolean = false;\n  loadingMessage : string;\n\n  File : any; //Variable para la subida de la lista de usuarios\n\n  /*Inicializando Formulario*/\n  nameCtrl : FormControl = new FormControl('',[Validators.required,this._service.existProject,this._service.isBlank]);\n  start_dateCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^(0?[1-9]|[12][0-9]|3[01])[\\/](0?[1-9]|1[012])[/\\\\/](19|20)\\d{2}$/))]);\n  durationCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/)),this._service.isBlank]);\n  \n  budgetCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,10}$/))]);\n  ubicationCtrl : FormControl = new FormControl('',[Validators.required,this._service.isBlank]);\n  beneficiariesNumberCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n\n  objGeneralCtrl : FormControl = new FormControl('',[Validators.required,this._service.isBlank]);\n  objEspeCtrl : FormArray = new FormArray([new FormControl('',[Validators.required,this._service.isBlank])]);\n  resultsCtrl : FormArray = new FormArray([new FormControl('',[Validators.required,this._service.isBlank])]);\n\n  goalsCtrl : FormArray = new FormArray([]);\n  fundersCtrl : FormArray = new FormArray([]);\n\n  constructor(private _service : SisiCoreService,\n              private _snackbar : MatSnackBar,\n              private _Router : Router){\n    this.ProjectFormGroup = new FormGroup({\n      name: this.nameCtrl,\n      start_date: this.start_dateCtrl,\n      duration: this.durationCtrl,\n      budgets: new FormGroup({\n        total_inicial: this.budgetCtrl\n      }),\n      ubication: this.ubicationCtrl,\n      beneficiaries: new FormGroup({\n        number: this.beneficiariesNumberCtrl\n      }),\n      gen_objective: this.objGeneralCtrl,\n      esp_objectives: this.objEspeCtrl,\n      results: this.resultsCtrl,\n      goals: this.goalsCtrl,\n      funders: this.fundersCtrl\n    });\n  }\n\n  addObjective(){\n    (<FormArray> this.objEspeCtrl).push(new FormControl('',[Validators.required,this._service.isBlank]));\n  }\n\n  addResult(){\n    (<FormArray> this.resultsCtrl).push(new FormControl('',[Validators.required,this._service.isBlank]));\n  }\n\n  deleteObjective(index : number){\n    if(confirm('¬øEst√° seguro de que quiere eliminar este objetivo?')) (<FormArray> this.objEspeCtrl).removeAt(index);\n  }\n\n  deleteResult(index : number){\n    if(confirm('¬øEst√° seguro de que quiere eliminar este resultado?')) (<FormArray> this.resultsCtrl).removeAt(index);\n  }\n\n  /*Listeners para las listas de Selecci√≥n de Funders, Indicators y Organizations*/\n  OnIndicatorsListChange(id : string, list : MatSelectionList){\n    let ready : boolean = false;\n    let indice : number;\n    for(let i = 0; i < (<FormArray> this.goalsCtrl).length; i++){\n      if(this.goalsCtrl.controls[i].get('id').value == id){\n        indice = i;\n        ready = true;\n        break;\n      }\n    }\n    if(ready){//Hay que eliminar\n      if(confirm('Esta acci√≥n no se puede deshacer.\\n¬øEst√° seguro que desea descartar este indicador?')) (<FormArray> this.goalsCtrl).removeAt(indice);\n      else list.options.filter(option => option.value == id)[0].selected = true;\n    }else{//Agregar\n      let indicator : any = this.Indicators.filter(indicator => indicator._id == id)[0];\n      this.indicatorsSelected.push({id: indicator._id,parameters: indicator.parameters_schema});\n      let organizationsCtrl : FormArray = new FormArray([]);\n      this.organizationsSelected.forEach(organization => {\n        (<FormArray> organizationsCtrl).push(new FormGroup({\n          organization: new FormControl(organization.name,[Validators.required]),\n          id: new FormControl(organization.id,[Validators.required]),\n          parameters: new FormArray([])\n        }));\n      });\n      let indicatorCtrl = new FormGroup({\n        indicator: new FormControl(indicator.name),\n        id: new FormControl(indicator._id),\n        organizations: organizationsCtrl\n      });\n      for(let i = 0; i < (<FormArray>indicatorCtrl.controls.organizations).length; i++){\n          indicator.parameters_schema.forEach(parametro => {\n            (<FormArray>indicatorCtrl.controls.organizations['controls'][i].get('parameters')).push(new FormGroup({\n              name: new FormControl(parametro.name),\n              baseline: new FormControl('',[Validators.required,this._service.isBlank,Validators.pattern(new RegExp(/^\\d{1,10}$/))]),\n              goal: new FormControl('',[Validators.required,this._service.isBlank,Validators.pattern(new RegExp(/^\\d{1,10}$/))])\n            }));\n          })\n      }\n      (<FormArray> this.goalsCtrl).push(indicatorCtrl);\n    }\n  } \n  \n  OnOrganizationsListChange(id : string, OrganizationsList : MatSelectionList){    \n    let ready : boolean = false;\n    this.organizationsSelected.forEach((organization, index) => {\n      if(organization.id == id){ //Hay que quitar\n        ready = true;\n        if(confirm('Esta acci√≥n no se puede deshacer.\\n¬øEst√° seguro que desea descartar esta organizaci√≥n?')){\n          this.organizationsSelected.splice(index,1); //Quitar del Array de organizaciones seleccionadas\n          //Eliminar del Formulario\n          return this.RemoveFromForm(index); \n        }else return OrganizationsList.options.filter(option => option.value == id)[0].selected = true;\n      }\n    });\n    //Agregar\n    if(!ready){\n      let organization : any = this.Organizations.filter(organization => organization._id == id)[0];\n      this.organizationsSelected.push({\n        name: organization.name,\n        id: organization._id\n      });\n      for(let i = 0; i < this.goalsCtrl.length; i++){\n\n        let parameters : FormArray = new FormArray([]);\n\n        this.indicatorsSelected[i].parameters.forEach(parameter => {\n          (<FormArray> parameters).push(new FormGroup({\n            name: new FormControl(parameter.name),\n            baseline: new FormControl('',[Validators.required,this._service.isBlank,Validators.pattern(new RegExp(/^\\d{1,10}$/))]),\n            goal: new FormControl('',[Validators.required,this._service.isBlank,Validators.pattern(new RegExp(/^\\d{1,10}$/))])\n          }))\n        });\n\n        (<FormArray> this.goalsCtrl.controls[i].get('organizations')).push(new FormGroup({\n          organization: new FormControl(organization.name,[Validators.required]),\n          id: new FormControl(organization._id,[Validators.required]),\n          parameters\n        }));\n      }\n    }\n  }\n\n  RemoveFromForm(index : number){\n    for(let i = 0; i < this.goalsCtrl.length; i++){\n      (<FormArray> this.goalsCtrl.controls[i].get('organizations')).removeAt(index);\n    }\n  }\n\n  OnFundersListChange(id : string){\n    (<FormArray> this.fundersCtrl).push(new FormControl(id,[Validators.required]));\n  }\n\n  createProject(){\n    this.loadingMessage = 'Guardando el proyecto...'\n    this.isWorking = true;\n    if(this.ProjectFormGroup.invalid || !this.File || !this.goalsCtrl.length || !this.fundersCtrl.length){\n      this.isWorking = false;\n      return alert('Debe completar todo el formulario de registro de Proyectos!\\n\\nNo olvide asignar los financiadores, indicadores y organizaciones. Tampoco olvide seleccionar el archivo de lista de beneficiarios.')\n    }\n    let project : any = this.ProjectFormGroup.value;\n    project.indicators = [];\n    project.organizations = [];\n    for(let i = 0; i < project.goals.length; i++){\n      project.indicators.push(project.goals[i].id);\n    }\n    for(let i = 0; i < project.goals[0].organizations.length; i++){\n      project.organizations.push(project.goals[0].organizations[i].id);\n    }\n    this._service.createProject(project).subscribe(\n      result => {\n        if(result.message == 'CREATED') {\n          this.uploadBeneficiariesList(result.project._id).subscribe(\n            result => {\n              if(result.message ==\"CREATED\"){\n                this._service.updateOrganizationsList(null);\n                this._service.updateFundersList(null);\n                this._service.updateProjectsList(true);\n                this.isWorking = false;\n                this._snackbar.open('Proyecto Registrado correctamente.','ENTENDIDO',{duration: 3000});\n              }\n            },error => {\n              this.isWorking = false;\n              this._snackbar.open('Ha ocurrido un error al subir el archivo de Beneficiarios.','ENTENDIDO',{duration: 3000})\n            }\n          );\n        }\n      },error => {\n        this.isWorking = false;\n        this._snackbar.open('Ocurri√≥ un error al guardar el nuevo proyecto.','ENTENDIDO',{duration: 3000})\n      }\n    )\n  }\n\n  prepareBeneficiariesList(event){\n    if(event.target.files && event.target.files.length > 0){\n      let file = event.target.files[0];\n        let name = file.name.split('.');\n        this.File = {\n          name: name[0],\n          folder: this.nameCtrl.value,\n          file: file.name,\n          ext: name[1],\n          type: getTypeFromExt(name[1]),\n          description: 'descripcion',\n          tama√±o: convertSize(file.size),\n          fileObj: file \n        };\n      }\n  }\n\n  uploadBeneficiariesList(id) : Observable<any>{\n    let filesForm = new FormData();\n    let details = [];\n    let name = `${this.File.name.replace(/ /g,'-')}_${Moment.now()}.${this.File.ext}`;\n        filesForm.append('multi-files',this.File.fileObj,name);\n        details.push({\n          name: this.File.name,\n          folder: id,\n          type: this.File.type,\n          file: name,\n          ext: this.File.ext,\n          size: this.File.tama√±o,\n          entity: 'Proyectos'\n        });\n    filesForm.append('details',JSON.stringify(details));\n    filesForm.append('entity','Project');\n    filesForm.append('id',id);\n    return this._service.uploadFile(filesForm);\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UpdateExecutedComponent } from '../../../dialogs/update-executed/update-executed.component';\nimport { ToolbarButton } from '../../../shared/sub-toolbar/sub-toolbar.component';\nimport { FundersLinkComponent } from '../../../dialogs/funders-link/funders-link.component';\n\n@Component({\n  selector: 'app-project-view',\n  templateUrl: './project-view.component.html'\n})\nexport class ProjectViewComponent {\n\n  Project : any;\n\n  File : any;\n\n  executed_budget : any;\n\n  userRole : string = localStorage.getItem('userRole');\n\n  loadingMessage : string;\n  isWorking : boolean = false; \n\n  DeleteBtn : ToolbarButton = {\n    hasIcon: true,\n    icon: 'delete',\n    handler: ()=>{\n      if(confirm('¬øEst√° seguro que desea eliminar este Proyecto?\\n\\nEsta acci√≥n no se puede deshacer.')){\n        this.loadingMessage = 'Eliminando el proyecto...';\n        this.isWorking = true;\n        this._service.deleteProject(this.Project._id).subscribe(\n        result => {\n          if(result.message == 'DELETED'){\n            this._service.updateProjectsList(true);\n            this.isWorking = false;\n            this._snackBar.open('Se elimin√≥ el Proyecto correctamente.','ENTENDIDO',{duration: 3000});\n          }\n        },error => {\n          this.isWorking = false;\n          this._snackBar.open('Ocurri√≥ un error al eliminar el Proyecto.','ENTENDIDO',{duration: 3000});\n        }\n      )\n      }\n    },\n    message: 'ELIMINAR'\n  }\n\n  constructor(private _service : SisiCoreService,\n              private _ActivatedRoute : ActivatedRoute,\n              private _snackBar: MatSnackBar,\n              private dialog : MatDialog) { \n\n    this._ActivatedRoute.params.subscribe(\n      (params : Params) => {\n        this.Project = this._service.getProject(params.id);\n        this.executed_budget = this.Project.budgets.ejecutado.pop();\n        this.Project.budgets.ejecutado.push(this.executed_budget);\n        console.log(this.Project.funders);\n        this.generateChartData();\n      }\n    );\n\n\n    this._service.getBeneficiariesFile(this.Project.beneficiaries.file).subscribe(\n      result => {\n        if(result.message == 'OK') this.File = result.file\n      },error => this._snackBar.open('Error al recuperar la lista de Beneficiarios.','ENTENDIDO',{duration: 3000})\n    );\n  }\n\n  /**\n   * Funders Update Modal\n   */\n  linkFunders(){\n    const dialogRef = this.dialog.open(FundersLinkComponent, {\n      width: '550px',\n      data: {Funders: JSON.parse(localStorage.funders),actualFunders: this.Project.funders}\n    });\n\n    dialogRef.afterClosed().subscribe(funders => {\n      if(funders){\n        /**Actualizar Financiadores */\n        this.loadingMessage = 'Guardando los cambios...';\n        this.isWorking = true;\n        this._service.updateProject({funders},this.Project._id).subscribe(\n          result => {\n            if(result.message == 'UPDATED'){\n              let updatedFunders : any[] = []\n              result.project.funders.forEach(id => {\n                console.log(id);\n                updatedFunders.push(this.formatFunder(this._service.getFunder(id)))\n              });\n              this.Project.funders = updatedFunders;\n              this.isWorking = false;\n              this._snackBar.open('Se ha vinculado el Financiador.','ENTENDIDO',{duration: 3000});\n              this._service.updateProjectsList(null);\n              this._service.updateFundersList(null);\n            }\n          },error => {\n            this.isWorking = false;\n            this._snackBar.open('Ha ocurrido un error.','ENTENDIDO',{duration: 3000})\n          }\n        )\n      }\n    });\n  }\n\n  formatFunder(funder : any) : any {\n    return {\n      name: funder.name,\n      _id: funder._id,\n      place: funder.place\n    }\n  }\n\n  /**\n   * Budget Modals\n   */\n\n  updateExecuted(){\n    const dialogRef = this.dialog.open(UpdateExecutedComponent, {\n      width: '550px',\n      data: {ejecutado: '',type: 'executed'}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        /**Actualizar Ejecutado */\n        this.loadingMessage = 'Guardando los cambios...'\n        this.isWorking = true;\n        let newBudget : number = parseInt(result);\n        if(newBudget <= this.executed_budget.value){\n          this.isWorking = false;\n          return this._snackBar.open('El presupuesto ejecutado debe ir aumentando, no puede ser menor o igual que el √∫ltimo registrado.','ENTENDIDO',{duration: 3000});\n        }\n        let budgets = { \n          budgets:{\n            value: newBudget,\n            name: new Date()\n          }\n        }\n        this._service.updateProject(budgets,this.Project._id).subscribe(\n          result => {\n            console.log(result);\n            if(result.message == 'UPDATED'){\n              this.executed_budget.value = newBudget;\n              this.Project.budgets = result.project.budgets\n              this.multi[1].series.push(budgets.budgets);\n              this._service.updateProjectsList(null);\n              this.generateChartData();\n              this.isWorking = false;\n              this._snackBar.open('Cambios guardados correctamente.','ENTENDIDO',{duration: 3000});\n            }\n          },error => {\n            this.isWorking = false;\n            this._snackBar.open('Ocurri√≥ un error al actualizar el presupuesto.','ENTENDIDO',{duration: 3000});\n          }\n        )\n      }\n    });\n  }\n\n  updateBudget(){\n    const dialogRef = this.dialog.open(UpdateExecutedComponent, {\n      width: '550px',\n      data: {final: '',type: 'budget'}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        /**Actualizar Ejecutado */\n        this.loadingMessage = 'Guardando los cambios...';\n        this.isWorking = true;\n        let newBudget : number = parseInt(result);\n        let body = { newBudget }\n        this._service.updateProject(body,this.Project._id).subscribe(\n          resultado => {\n            if(resultado.message == 'UPDATED'){\n              this.Project.budgets.total_final = result;\n              this.multi[0].series.pop();\n              this.multi[0].series.push({value: result, name: new Date()});\n              this._service.updateProjectsList(null);\n              this.generateChartData();\n              this.isWorking = false;\n              this._snackBar.open('Cambios guardados correctamente.','ENTENDIDO',{duration: 3000});\n            }\n          },error => {\n            this.isWorking = false;\n            this._snackBar.open('Ocurri√≥ un error al actualizar el presupuesto.','ENTENDIDO',{duration: 3000})\n          }\n        )\n      }\n    });\n  }\n\n  /**\n     * Budget Graphic\n     */\n\n    generateChartData(){\n      console.log(this.Project.budgets);\n      this.multi = null;\n      this.multi = [\n        {\n          name: 'Presupuesto',\n          series: [{\n              name: new Date(this.Project.created_at),\n              value: this.Project.budgets.total_inicial\n            },\n            {\n              name: new Date(),\n              value: this.Project.budgets.total_final\n          }]\n        },\n        {\n          name: 'Ejecutado',\n          series: [{name: new Date(this.Project.created_at),value: this.Project.budgets.ejecutado[0].value}]\n        }\n      ];\n      for(let i = 0; i < this.Project.budgets.ejecutado.length; i++){\n        if(i) this.multi[1].series.push(this.getSerieItem(this.Project.budgets.ejecutado[i].name,this.Project.budgets.ejecutado[i].value));\n      }\n      \n      this.multi[1].series.push({\n        name: new Date(),\n        value: this.executed_budget.value\n      });\n      console.log(this.multi);\n      \n    }\n\n    getSerieItem(name : string, value : number){\n      return {\n        name: new Date(name),\n        value\n      }\n    }\n  \n    multi: any[];\n    view: any[] = [700, 400];\n  \n    // options\n    legend: boolean = true;\n    showLabels: boolean = true;\n    animations: boolean = true;\n    xAxis: boolean = true;\n    yAxis: boolean = true;\n    showYAxisLabel: boolean = true;\n    showXAxisLabel: boolean = true;\n    //Eje de X\n    xAxisLabel: string = 'Tiempo';\n    //Eje de Y\n    yAxisLabel: string = 'Presupuesto en d√≥lares (USD)';\n    timeline: boolean = true;\n  \n    colorScheme = {\n      domain: ['#5AA454', '#E44D25']\n    };\n  \n    onSelect(data): void {\n      console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n    }\n  \n    onActivate(data): void {\n      console.log('Activate', JSON.parse(JSON.stringify(data)));\n    }\n  \n    onDeactivate(data): void {\n      console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n    }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html'\n})\nexport class ProjectsComponent{\n\n  userRole : string = localStorage.getItem('userRole');\n  \n  projects : any[] = [];\n\n  constructor (private _service : SisiCoreService) { \n    if(this.userRole == 'Financiador'){\n      let normalProjects : any[] = this._service.getProjectsOff();\n      let userProjects = JSON.parse(localStorage.getItem('user')).funder.projects;\n      userProjects.forEach(project => {\n        normalProjects.forEach(projectito => {\n          if(projectito._id == project) this.projects.push(projectito);\n        });\n      });\n    }else this.projects  = this._service.getProjectsOff();\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html'\n})\nexport class ReportComponent {\n\n  Project : any;\n  Projects : any[] = [];\n  Indicator : any;\n  Indicators : any[];\n  AvailablePeriods : any[];\n\n  ProjectRecords : any[];\n  ProjectGoals : any[];\n\n  selectedProject : string;\n  selectedIndicator : string;\n  selectedPeriod : string;\n\n  PeriodSelectAvailable : boolean;\n\n  Status : string = 'none';\n\n  Schema : any;\n\n  BaselineSchema : any;\n\n  SchemaTable : any;\n  ParametersTable : any[];\n  IndicatorTable : any[];\n\n  ChartData : any[];\n\n  userRole : string;\n\n  constructor(private _service : SisiCoreService) {\n    this.userRole = localStorage.getItem('userRole');\n    if(this.userRole == 'Financiador'){\n      let normalProjects : any[] = this._service.getProjectsOff();\n      let userProjects = JSON.parse(localStorage.getItem('user')).funder.projects;\n      userProjects.forEach(project => {\n        normalProjects.forEach(projectito => {\n          if(projectito._id == project) this.Projects.push(projectito);\n        });\n      });\n    }else this.Projects  = this._service.getProjectsOff();\n  }\n\n  onProjectSelected(seleccion){\n    this.Project = this.Projects.filter(project => project._id == seleccion)[0];\n    this.Indicators = this.Project.indicators;\n    this.ProjectRecords = this.Project.records;\n    this.ProjectGoals = this.Project.goals;\n  }\n\n  onIndicatorSelected(seleccion){\n    this.PeriodSelectAvailable = false;\n    this.Indicator = this._service.getIndicator(seleccion);\n\n    this.AvailablePeriods = [];\n\n    this.ProjectRecords.forEach(record => {\n      if(record.records.indicator == seleccion) this.AvailablePeriods.push(this.formatPeriod(new Date(record.period)));\n    });\n    \n    this.PeriodSelectAvailable = true;\n  }\n\n  onPeriodSelected(seleccion){\n    /*TODO*/\n    /**\n     * Generar la informaci√≥n para la gr√°fica y la Tabla\n     */\n    console.log(seleccion);\n    if(seleccion == 'none') return null;\n\n    this.Status = 'loading';\n\n    let recordsWithIndicator = this.ProjectRecords.filter(record => record.records.indicator == this.selectedIndicator);\n    this.Schema = recordsWithIndicator.filter(record => this.formatPeriod(new Date(record.period)) == seleccion)[0];\n\n    this.BaselineSchema = this.ProjectGoals.filter(indicator => indicator.id == this.selectedIndicator)[0];\n    this.generateTablesAndGraphicsData();\n\n    this.Status = 'ready';\n  }\n\n  generateTablesAndGraphicsData(){\n    this.ParametersTable = [];\n    this.IndicatorTable = [];\n    this.ChartData = [];\n\n    if(this.Indicator.type == 'Simple') true;\n    else {\n      this.SchemaTable = {\n        projectName: this.Project.name,\n        technic: this.Schema.created_by,\n        schema: []\n      };\n\n      this.Project.organizations.forEach((organization,i) => {\n        \n        /**\n         * Ficha Esquema\n         */\n        this.SchemaTable.schema.push({\n          name: organization.name,\n          fields: []\n        });\n        this.Schema.records.rows[i].fields.forEach(field => this.SchemaTable.schema[i].fields.push(field));\n\n        /**\n         * Par√°metros Esquema\n         */\n        let parameters = this.Indicator.parameters_schema;\n        \n        this.ParametersTable.push({\n          name: organization.name,\n          parameters:[]\n        });\n\n        parameters.forEach((parameter,j) => {\n          //C√°lculo de los par√°metros\n          this.ParametersTable[i].parameters.push({\n            value: this.calculateParameter(parameter.definition,this.SchemaTable.schema[i].fields),\n            definition: this.formatDefinition(parameter.definition),\n            unit: parameter.unit,\n            isAcum: parameter.isAcum,\n            name: parameter.name\n          });\n        });\n        \n        /**\n         * Indicador Esquema\n         */\n        this.IndicatorTable.push({\n          name: organization.name,\n          baseline: [],\n          parameters: [],\n          total_indicator_value: 0\n        });\n        parameters.forEach((parameter,j) => {\n          //A√±adiendo las l√≠neabase y metas\n          this.IndicatorTable[i].baseline.push({\n            baseline: this.BaselineSchema.organizations[i].parameters[j].baseline,\n            goal: this.BaselineSchema.organizations[i].parameters[j].goal\n          });\n          //C√°lculo de % de los par√°metros\n          this.IndicatorTable[i].parameters.push({\n            ponderacion: this.calculateWeighing(this.ParametersTable[i].parameters[j].value,parameter.weighing,this.IndicatorTable[i].baseline[j].goal,organization.isOlder,this.Indicator.antiquity_diff)\n          });\n          //C√°lculo del Total del Indicador\n          this.IndicatorTable[i].total_indicator_value += this.IndicatorTable[i].parameters[j].ponderacion.medido;\n        });\n\n        /**\n         * Graficos Data\n         */\n        this.ChartData.push({\n          name: organization.name,\n          multi: [],\n        });\n        parameters.forEach((parameter,j) => {\n          console.log(this.ChartData);\n          this.ChartData[i].multi.push({\n            name: parameter.name,\n            series: [\n              {\n                name: 'Meta',\n                value: this.IndicatorTable[i].parameters[j].ponderacion.establecido\n              },\n              {\n                name: 'Valor Medido',\n                value: this.IndicatorTable[i].parameters[j].ponderacion.medido\n              }\n            ]\n          })\n        });\n\n      });\n\n      let last : any = {\n        single: []\n      };\n\n      this.Project.organizations.forEach((organization,i) => {\n        last.single.push({\n          name: organization.name,\n          value: this.IndicatorTable[i].total_indicator_value\n        });\n      });\n\n      this.ChartData.push(last);\n\n    }\n\n  }\n\n  calculateWeighing(value : string, weighing : any, goal : string, isOlder : boolean, diff : boolean) : any{\n    let calculated : any = {medido: 0, establecido: 0};\n    if(diff){    //Se diferencia por Antiguedad\n      if(isOlder){ //Si la Org es nueva\n        calculated.establecido = weighing[0].newer;\n        calculated.medido = parseInt(value) * weighing[0].newer / parseInt(goal);\n      }else{       //Si la Org es antigua\n        calculated.establecido = weighing[0].older;\n        calculated.medido = parseInt(value) * weighing[0].older / parseInt(goal);\n      }\n    }else{       //No se diferencia por Antiguedad\n      calculated.establecido = weighing[0].weight;\n      calculated.medido = parseInt(value) * weighing[0].weight / parseInt(goal);\n    }\n    return calculated;\n  }\n\n  formatDefinition(definition : string[]) : string {\n    let result = '';\n    definition.forEach(operador => {\n      if(operador == '+' || operador == '-' || operador == '*' || operador == '/') result += ` ${operador} `;\n      else result += operador;\n    });\n    return result;\n  }\n\n  calculateParameter(definition : string[],fields : any[]) : number {\n    let calculated : string = '';\n    definition.forEach(operador => {\n      if(operador == '+' || operador == '-' || operador == '*' || operador == '/' || operador == '(' || operador == ')' || operador == '*100%'){\n        if(operador == '*100%') calculated += '*100';\n        else calculated += operador;\n      }else{\n        calculated += (fields.filter(field => operador == field.name)[0]).value;\n      }\n    })\n    return eval(calculated).toFixed(2);\n  }\n\n  formatPeriod(fecha : Date) : string{\n    return `${this._service.getMonth(fecha.getMonth())} ${fecha.getFullYear()}`;\n  }\n  \n}\n","import { Component, Input } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\n\n@Component({\n  selector: 'app-table-and-graphic',\n  templateUrl: './table-and-graphic.component.html'\n})\nexport class TableAndGraphicComponent {\n\n  @Input() SchemaTable : any;\n  @Input() ParametersTable : any;\n  @Input() IndicatorTable : any;\n  @Input() Indicator : any;\n  @Input() Project : any;\n  @Input() Period : string;\n  @Input() ChartData : any[];\n  \n  Technic : any;\n\n  Promedio : number;\n  Calificacion : any = {\n    letter: '',\n    message: '',\n    description: ''\n  };\n\n  constructor(public _service : SisiCoreService) { }\n  \n  ngOnInit() {\n    this.Technic = this._service.getUser(this.SchemaTable.technic);\n    this.getIndicatorsPromedio();\n  \n    //this.setUpGraphics();\n  }\n\n  getIndicatorsPromedio() {\n    let totales = this.IndicatorTable.map(organization => organization.total_indicator_value);\n    let sumatoria = 0;\n    totales.forEach(total => sumatoria += total);\n    this.Promedio = sumatoria / totales.length;\n    this.Calificacion = this.getCalification();\n  }\n\n  getCalification(){\n    if(this.Promedio >= 80) return {letter: 'A',message:'Optimo!',description:'Requiere seguimiento periodico'};\n    else if(this.Promedio < 80 && this.Promedio >= 60) return {letter: 'B',message:'Bueno!',description:'Requiere seguimiento y apoyo t√©cnico puntual'};\n    else if(this.Promedio < 60 && this.Promedio >= 40) return {letter: 'C',message:'Satisfactorio!',description:'Requiere seguimiento y apoyo t√©cnico sistem√°tico (per√≠odico/minimo bimensual)'};\n    else if(this.Promedio < 40 && this.Promedio >= 20) return {letter: 'D',message:'Deficiente!',description:'Requiere seguimiento y apoyo t√©cnico cercano y frecuente(m√≠nimo mensual)'};\n    else if(this.Promedio < 20) return {letter: 'E',message:'Muy deficiente!',description:'En peligro de desaparecer, se debe valorar si se continua apoyo'};\n  }\n\n  /*Graphics*/\n  view: any[] = [700, 400];\n\n  // options\n  showXAxis: boolean = true;\n  showYAxis: boolean = true;\n  gradient: boolean = true;\n  showLegend: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Par√°metros';\n  showYAxisLabel: boolean = true;\n  yAxisLabel: string = 'Ponderaci√≥n';\n  legendTitle: string = 'Leyenda';\n\n  xAxisLabelLast: string = 'Organizaciones';\n  yAxisLabelLast: string = 'Valor Indicador';\n\n  colorScheme = {\n    domain: ['#5AA454', '#C7B42C', '#AAAAAA']\n  };\n\n onSelect(data): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data): void {\n    console.log('Activate', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-new-users',\n  templateUrl: './new-users.component.html'\n})\nexport class NewUsersComponent {\n\n  UserForm : FormGroup;\n  Repassword : string = '';\n  \n  Funders : any[];\n\n  isWorking : boolean = false;\n  loadingMessage : string;\n\n  constructor(private _service : SisiCoreService,\n              private _snackBar : MatSnackBar) { \n    this.UserForm = new FormGroup({\n      username: new FormControl('',[Validators.required,this._service.isBlank,this._service.existUser]),\n      name: new FormControl('',[Validators.required,this._service.isBlank]),\n      last_names: new FormControl('',[Validators.required,this._service.isBlank]),\n      email: new FormControl('',[Validators.required,this._service.isBlank,Validators.pattern(new RegExp(/^[_a-z0-9-]+(.[_a-z0-9-]+)*@[a-z0-9-]+(.[a-z0-9-]+)*(.[a-z]{2,4})$/))]),\n      position: new FormControl('',[Validators.required,this._service.isBlank]),\n      password: new FormControl('',[Validators.required,this._service.isBlank,Validators.minLength(10)]),\n      funder: new FormControl(''),\n      repassword: new FormControl(''),\n      role:new FormControl('',[Validators.required]) \n    });\n    this.UserForm.get('repassword').setValidators([Validators.required,this._service.isBlank,this.ComparePass(this.UserForm.get('password'))]);\n    this.Funders = this._service.getFundersOff();\n  }\n\n  ComparePass(otherControl: AbstractControl): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} => {\n      const value: any = control.value;\n      const otherValue: any = otherControl.value;\n      return otherValue === value ? null : { 'notMatch': { value, otherValue } };\n    };\n  }\n\n  createUser(){\n    this.loadingMessage = 'Guardando Usuario...';\n    this.isWorking = true;\n    let body = this.UserForm.value;\n    delete body.repassword;\n    if(body.role == 'Financiador' && !body.funder) return alert('Es necesario que indique a que financiador representa este usuario.');\n    else if(body.role != 'Financiador') delete body.funder;\n    this._service.createUser(body).subscribe(\n      result => {\n        if(result.message == 'CREATED'){\n          this._service.updateUsersList(true);\n          this.isWorking = false;\n          this._snackBar.open('Usuario registrado correctamente.','ENTENDIDO',{duration: 3000})\n        }\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ha ocurrido un error al guardar el usuario.','ENTENDIDO',{duration: 3000});\n      }\n    )\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { FormGroup, FormControl, Validators, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NewPasswordComponent } from '../../../dialogs/new-password/new-password.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-users-view',\n  templateUrl: './users-view.component.html'\n})\nexport class UsersViewComponent {\n\n  User : any;\n\n  UserForm : FormGroup;\n\n  EditMode : boolean = false;\n\n  Funders : any[] = this._service.getFundersOff();\n\n  isWorking: boolean = false;\n\n  loadingMessage : string;\n\n  constructor(private _service : SisiCoreService,\n              private _ActivatedRoute : ActivatedRoute,\n              private _snackBar : MatSnackBar,\n              private dialog : MatDialog) {\n\n    this._ActivatedRoute.params.subscribe(\n      (params : Params) => {\n        this.User = this._service.getUser(params.id);\n        this.getFormFromUser();\n      }\n    );\n    \n    \n  }\n\n  updateUser(){\n    this.loadingMessage = 'Actualizando usuario...';\n    this.isWorking = true;\n    let body = this.UserForm.value;\n    if(body.role == 'Financiador' && !body.funder) return alert('Es necesario que indique a que financiador representa este usuario.');\n    else if(body.role != 'Financiador') delete body.funder;\n    this._service.updateUser(body,this.User._id).subscribe(\n      result => {\n        if(result.message == 'UPDATED'){\n          this.User = result.user;\n          this.getFormFromUser();\n          this.EditMode = false;\n          this.UserForm.disable();\n          this.isWorking = false;\n          this._snackBar.open('Usuario actualizado correctamente.','ENTENDIDO',{duration: 3000});\n          this._service.updateUsersList(null);\n        }\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ha ocurrido un error al guardar el usuario.','ENTENDIDO',{duration: 3000});\n      }\n    )\n  }\n\n  cancel(){\n    if(confirm('Los cambios que no se han guardados se perder√°n.\\n\\n¬øDesea continua?')) {\n      this.EditMode = false;\n      this.getFormFromUser();\n      this.UserForm.disable();\n    }\n  }\n\n  getFormFromUser(){\n    let funder : string = '';\n    if(this.User.role == 'Financiador') funder = this.User.funder._id;\n    this.UserForm = new FormGroup({\n      username: new FormControl({value: this.User.username, disabled: true},[Validators.required,this._service.isBlank]),\n      name: new FormControl({value: this.User.name, disabled: true},[Validators.required,this._service.isBlank]),\n      last_names: new FormControl({value: this.User.last_names, disabled: true},[Validators.required,this._service.isBlank]),\n      email: new FormControl({value: this.User.email, disabled: true},[Validators.required,this._service.isBlank,Validators.pattern(new RegExp(/^[_a-z0-9-]+(.[_a-z0-9-]+)*@[a-z0-9-]+(.[a-z0-9-]+)*(.[a-z]{2,4})$/))]),\n      position: new FormControl({value: this.User.position, disabled: true},[Validators.required,this._service.isBlank]),\n      role:new FormControl({value: this.User.role, disabled: true},[Validators.required]),\n      funder: new FormControl({value: funder, disabled: true}),\n    });\n  }\n\n  turnToEditMode(){\n    this.EditMode = true;\n    this.UserForm.enable();\n  }\n\n  generateNewPassword(){\n    const dialogRef = this.dialog.open(NewPasswordComponent, {\n      width: '550px',\n      data: {password: ''}\n    });\n\n    dialogRef.afterClosed().subscribe(passwords => {\n      if(passwords){\n        /**Actualizar Contrase√±a */\n        this.loadingMessage = 'Guardando los cambios...';\n        this.isWorking = true;\n        this._service.updateUser({password: passwords.password},this.User._id).subscribe(\n          result => {\n            this.isWorking = false;\n            this._snackBar.open('Se gener√≥ la contrase√±a correctamente.','ENTENDIDO',{duration: 3000});\n          },error => {\n            this.isWorking = false;\n            this._snackBar.open('Ocurri√≥ un error al generar la contrase√±a.','ENTENDIDO',{duration: 3000});\n          }\n        )\n      }\n    });\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html'\n})\nexport class UsersComponent {\n\n  filter : string = \"name\";\n  search_term : string = '';\n\n  Users : any[];\n  filteredList : any[];\n\n  constructor(private _service : SisiCoreService) {\n    this.Users = this._service.getUsersOff();\n    this.filteredList = this.Users;\n  }\n\n  filterByTerm(){\n    if(!this.search_term.trim()) return this.filteredList = this.Users;\n    this.filteredList = this.Users.filter(user => user[this.filter].toLowerCase().includes(this.search_term.trim().toLowerCase()))\n  }\n\n  filterByRole(role){\n    if(!role) return this.filteredList = this.Users;\n    this.filteredList = this.Users.filter(user => user[this.filter] == role);\n  }\n\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button-group',\n  templateUrl: './button-group.component.html'\n})\nexport class ButtonGroupComponent{\n\n  @Output() save : EventEmitter<void> = new EventEmitter();\n  @Output() cancel : EventEmitter<void> = new EventEmitter();\n\n  @Input() formStatus : boolean;\n\n  onSave(){\n    this.save.emit();\n  }\n\n  onCancel(ev){\n    ev.preventDefault();\n    this.cancel.emit();\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-buttons',\n  templateUrl: './form-buttons.component.html'\n})\nexport class FormButtonsComponent {\n\n  @Input() formGroup : FormGroup;\n\n  constructor(private _Router : Router) { }\n\n  cancel(){\n    if(confirm('Todos los cambios no guardados se perder√°n.\\n\\n¬øDesea continuar?')) this._Router.navigate([document.location.pathname.split('/')[1]]);\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-view',\n  templateUrl: './loading-view.component.html'\n})\nexport class LoadingViewComponent{\n\n  @Input() message : string;\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modals',\n  templateUrl: './modals.component.html'\n})\nexport class ModalsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sub-toolbar',\n  templateUrl: './sub-toolbar.component.html',\n  styles: ['mat-toolbar{background: #bbb;}']\n})\nexport class SubToolbarComponent implements OnInit{\n\n  @Input() title : string;\n  @Input() backButton : boolean;\n  @Input() addButton : boolean;\n  @Input() editButton;\n  @Input() buttons : ToolbarButton[];\n  @Input() importantBack : boolean;\n\n  @Output() editClick : EventEmitter<any> = new EventEmitter();\n\n  personalizedButtons : ToolbarButton[];\n\n  constructor(private _Router : Router){\n  }\n  \n  back(){\n    if(this.importantBack){\n      if(confirm('Todos los cambios no guardados se perder√°n.\\n\\n¬øDesea continuar?')) this._Router.navigate([document.location.pathname.split('/')[1]]);\n    }else this._Router.navigate([document.location.pathname.split('/')[1]]);\n  }\n  \n  edit(){\n    this.editClick.emit();\n  }\n  \n  ngOnInit(): void {\n    if(this.buttons && this.buttons.length) this.personalizedButtons = this.buttons;\n    else this.personalizedButtons = [];\n  }\n}\n\n export interface ToolbarButton {\n  hasIcon: boolean,\n  message: string,\n  handler: () => void,\n  icon: string\n}\n","import { Component, Input, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SisiCoreService } from '../../../services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport * as Moment from 'moment';\n\n@Component({\n  selector: 'app-upload-box',\n  templateUrl: './upload-box.component.html'\n})\nexport class UploadBoxComponent implements OnInit{\n\n  @Input() organization_name : string;\n  @Input() organization_id : string;\n  @Input() organization_files : any[];\n\n  createFolder : boolean = false;\n\n  isFilesPristine : boolean = true;\n\n  fileDir : string[] = [];\n\n  filesForm : FormData = new FormData();\n  \n  files: any[];\n\n  nameCtrl : FormControl = new FormControl('',Validators.required);\n  newFolderForm : FormGroup = new FormGroup({\n    name: this.nameCtrl\n  });\n\n  constructor(private _service : SisiCoreService,\n              private _snackbar : MatSnackBar) {\n                let entity = document.location.pathname.split('/')[1];\n                this.fileDir.push(entity);\n              }\n              \n  ngOnInit(){\n    if(this.organization_files){\n      this.files = this.organization_files;\n      this.files.forEach(file => file.status = 'Subido');\n    }\n    else this.files = [];\n    this.fileDir.push(this.organization_name);\n  }\n\n  /*FILES*/\n  onAddNewFile(event){\n    if(event.target.files && event.target.files.length > 0){\n      \n      for(let i = 0; i < event.target.files.length; i++){\n        let file = event.target.files[i];\n        let name = file.name.split('.');\n        this.files.push({\n          name: name[0],\n          folder: this.organization_name,\n          file: file.name,\n          ext: name[1],\n          type: getTypeFromExt(name[1]),\n          description: 'descripcion',\n          status: 'Pendiente',\n          tama√±o: convertSize(file.size),\n          fileObj: file \n        });\n        this.isFilesPristine = false;\n      \n      }\n    }\n  }\n\n  deleteFile (index : number) {\n    if(this.files[index].status == 'Subido'){\n      if(confirm('Este archivo se encuentra subido en el servidor. Esta acci√≥n no se puede deshacer.\\n¬øRealmente desea eliminarlo?')){\n        this._service.deleteFile(this.files[index]._id).subscribe(\n          result => {\n            if(result.message == 'OK'){\n              let organizations = JSON.parse(localStorage.organizations);\n              organizations.forEach((organization,i) => {\n                if(organization._id == result.organization_id){\n                  organizations.splice(i,1);\n                  organizations.push(result.organization)\n                }\n              });\n              localStorage.setItem('organizations',JSON.stringify(organizations));\n              this.files.splice(index,1);\n              this._snackbar.open('Se ha eliminado el Archivo.','ENTENDIDO',{duration: 3000});\n            }\n          },\n          error => this._snackbar.open('Error al eliminar el archivo.','ENTENDIDO',{duration: 3000})\n        );\n      }\n    }else this.files.splice(index,1);\n  }\n\n  uploadFiles () {\n    this.filesForm = new FormData();\n    let details = [];\n    this.files.forEach(file => {\n      if(file.status == 'Pendiente'){\n        let name = `${file.name.replace(/ /g,'-')}_${Moment.now()}.${file.ext}`;\n        this.filesForm.append('multi-files',file.fileObj,name);\n        details.push({\n          name: file.name,\n          folder: this.organization_id,\n          type: file.type,\n          file: name,\n          ext: file.ext,\n          size: file.tama√±o,\n          entity: 'Organizaciones'\n        });\n      }\n    });\n    this.filesForm.append('details',JSON.stringify(details));\n    this.filesForm.append('entity','Organization');\n    this.filesForm.append('id',this.organization_id);\n    this._service.uploadFile(this.filesForm).subscribe(\n      result => {\n        if(result.message ==\"OK\"){\n          this._service.updateOrganizationsList(null);\n          this.isFilesPristine = true;\n          let counter = 0;\n          this.files.forEach(file => {\n            if(file.status == 'Pendiente'){\n              file._id = result.documents[counter]._id;\n              file.status = 'Subido';\n              counter++;\n            }\n          });\n          this._snackbar.open('Archivos Subidos correctamente.','ENTENDIDO',{duration: 3000});\n        }\n      },error => this._snackbar.open('Ha ocurrido un error.','ENTENDIDO',{duration: 3000})\n    );\n  }\n\n}\n\ninterface Folder {\n  name : string,\n  files : File[]\n}\n\ninterface File {\n  name : string,\n  type : string,\n  size : string,\n  path : string,\n  description : string\n}\n\nexport function getTypeFromExt(ext : String) : String{\n  if(ext == 'jpg' || ext == 'jpeg' || ext == 'png') return 'Imagen';\n  else if(ext == 'doc' || ext == 'docx') return 'Word';\n  else if(ext == 'xltx' || ext == 'xlsx' || ext == 'xlsx' || ext == 'xltm' || ext == 'xlsm' || ext == 'xlam') return 'Excel';\n  else if(ext == 'ppt' || ext == 'pptx' || ext == 'potx' || ext == 'pptm' || ext == 'potm' || ext == 'ppam' || ext == 'ppsx' || ext == 'ppsm') return 'Power Point';\n  else if(ext == 'pdf') return 'PDF';\n  return 'Archivo';\n}\n\nexport function convertSize(size) : String{\n  if(size > Math.pow(1024,3)) return `${(size / Math.pow(1024,3)).toFixed(1)} GB`;\n  else if(size > Math.pow(1024,2)) return `${(size / Math.pow(1024,2)).toFixed(1)} MB`;\n  else if(size > 1024) return `${(size / 1024).toFixed(1)} kB`;\n  return `${(size).toFixed(1)} B`;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SisiCoreService {\n\n  URL : string = 'http://64.227.8.162:3000';\n\n  headers : HttpHeaders = new HttpHeaders({'Content-Type':'application/json','Authorization':`Bearer ${localStorage.token}`});\n  authHeader : HttpHeaders = new HttpHeaders({'Authorization':`Bearer ${localStorage.token}`});\n\n  constructor(private _httpClient : HttpClient,\n              private _snackBar : MatSnackBar,\n              private _Router : Router) {  }\n\n  /*Login*/\n  authenticate (body) : Observable<any> {\n    return this._httpClient.post(`${this.URL}/User/login`,body,{headers: new HttpHeaders({'Content-Type':'application/json'})});\n  }\n\n  /*Financiadores*/\n  getFunders () : Observable<any> {\n    return this._httpClient.get(`${this.URL}/Funder/`,{headers: this.authHeader});\n  }\n  getFundersOff () :any[] {\n    if(localStorage.getItem('funders')) return JSON.parse(localStorage.getItem('funders'));\n    return [];\n  }\n  getFunder (id : string) : any {\n    let funders : any[] = JSON.parse(localStorage.getItem('funders'));\n    return funders.filter(funder => funder._id == id)[0];\n  }\n  createFunder (funder : any) : Observable<any> {\n    return this._httpClient.post(`${this.URL}/Funder/`,funder,{headers: this.headers});\n  }\n  updateFunder (funder : any,id : string) : Observable<any> {\n    return this._httpClient.put(`${this.URL}/Funder/${id}`,funder,{headers: this.headers});\n  }\n  updateFundersList (redirect) {\n    this._httpClient.get(`${this.URL}/Funder/`,{headers: this.authHeader}).subscribe(\n      result => {\n        if(result['message'] == 'OK'){\n          localStorage.setItem('funders',JSON.stringify(result['funders']));\n        }else{\n          localStorage.setItem('funders','[]');\n        }\n        if(redirect) this._Router.navigate(['/funders']);\n      },\n      error => this._snackBar.open('Ocurri√≥ un error al actualizar los financiadores.','ENTENDIDO',{duration: 3000}));\n  }\n  deleteFunder (id : string) : Observable <any> {\n    return this._httpClient.delete(`${this.URL}/Funder/${id}`,{headers: this.authHeader});\n  }\n\n  /*Organizaciones*/\n  getOrganizations () : Observable<any> {\n    return this._httpClient.get(`${this.URL}/Organization/`,{headers: this.authHeader});\n  }\n  getOrganizationsOff () :any[] {\n    if(localStorage.getItem('organizations')) return JSON.parse(localStorage.getItem('organizations'));\n    return [];\n  }\n  getOrganization (id : string) : any {\n    let organizations : any[] = JSON.parse(localStorage.getItem('organizations'));\n    return organizations.filter(organization => organization._id == id)[0];\n  }\n  createOrganization (organization : any) : Observable<any> {\n    return this._httpClient.post(`${this.URL}/Organization/`,organization,{headers: this.headers});\n  }\n  updateOrganization (organization : any,id : string) : Observable<any> {\n    return this._httpClient.put(`${this.URL}/Organization/${id}`,organization,{headers: this.headers});\n  }\n  updateOrganizationsList (redirect) {\n    this._httpClient.get(`${this.URL}/Organization/`,{headers: this.authHeader}).subscribe(\n      result => {\n        if(result['message'] == 'OK'){\n          localStorage.setItem('organizations',JSON.stringify(result['organizations']));\n        }else{\n          localStorage.setItem('organizations','[]');\n        }\n        if(redirect) this._Router.navigate(['/organizations']);\n      },\n      error => this._snackBar.open('Ocurri√≥ un error al actualizar las organizaciones.','ENTENDIDO',{duration: 3000}));\n  }\n  deleteOrganization (id : string) : Observable <any> {\n    return this._httpClient.delete(`${this.URL}/Organization/${id}`,{headers: this.authHeader});\n  }\n\n  /*Proyectos*/\n  getProjects () : Observable<any> {\n    return this._httpClient.get(`${this.URL}/Project/`,{headers: this.authHeader});\n  }\n  getProjectsOff () :any[] {\n    if(localStorage.getItem('projects')) return JSON.parse(localStorage.getItem('projects'));\n    return [];\n  }\n  getProject (id : string) : any {\n    let proojects : any[] = JSON.parse(localStorage.getItem('projects'));\n    return proojects.filter(project => project._id == id)[0];\n  }\n  createProject (project : any) : Observable<any> {\n    return this._httpClient.post(`${this.URL}/Project/`,project,{headers: this.headers});\n  }\n  updateProject (project: any, id : string) : Observable<any> {\n    return this._httpClient.put(`${this.URL}/Project/${id}`,project,{headers: this.headers});\n  }\n  updateProjectsList (redirect) {\n    this._httpClient.get(`${this.URL}/Project/`,{headers: this.authHeader}).subscribe(\n      result => {\n          localStorage.setItem('projects',JSON.stringify(result['projects']));\n          if(redirect) this._Router.navigate(['/projects'])\n      },\n      error => this._snackBar.open('Ocurri√≥ un error al actualizar los Proyectos.','ENTENDIDO',{duration: 3000}));\n  }\n  deleteProject (id : string) : Observable <any> {\n    return this._httpClient.delete(`${this.URL}/Project/${id}`,{headers: this.authHeader});\n  }\n\n  /*Indicadores*/\n  getIndicators () : Observable<any> {\n    return this._httpClient.get(`${this.URL}/Indicator/`,{headers: this.authHeader});\n  }\n  getIndicatorsOff () :any[] {\n    if(localStorage.getItem('indicators')) return JSON.parse(localStorage.getItem('indicators'));\n    return [];\n  }\n  getIndicator (id : string) : any {\n    let indicators : any[] = JSON.parse(localStorage.getItem('indicators'));\n    return indicators.filter(indicator => indicator._id == id)[0];\n  }\n  createIndicator (indicator : any) : Observable<any> {\n    return this._httpClient.post(`${this.URL}/Indicator/`,indicator,{headers: this.headers});\n  }\n  updateIndicator (indicator : any,id : string) : Observable<any> {\n    return this._httpClient.put(`${this.URL}/Indicator/${id}`,indicator,{headers: this.headers});\n  }\n  updateIndicatorsList (redirect) {\n    this._httpClient.get(`${this.URL}/Indicator/`,{headers: this.authHeader}).subscribe(\n      result => {\n        if(result['message'] == 'OK'){\n          localStorage.setItem('indicators',JSON.stringify(result['indicators']));\n        }else{\n          localStorage.setItem('indicators','[]');\n        }\n        if(redirect) this._Router.navigate(['/indicators']);\n      },\n      error => this._snackBar.open('Ocurri√≥ un error al actualizar los Indicadores.','ENTENDIDO',{duration: 3000}));\n  }\n  deleteIndicator (id : string) : Observable <any> {\n    return this._httpClient.delete(`${this.URL}/Indicator/${id}`,{headers: this.authHeader});\n  }\n\n  /*Validaciones*/\n  existFunder( control: FormControl ) : {[s:string]:boolean} {\n    if(!control.value) return null;\n    if(localStorage.getItem('funders')) {\n      let funders = JSON.parse(localStorage.getItem('funders'));\n      let result = funders.filter(funder => funder.name.toLowerCase() == control.value.toLowerCase());\n      if(result.length) return {exist: true};\n    }\n    return null;\n  }\n  existOrganization( control: FormControl ) : {[s:string]:boolean} {\n    if(localStorage.getItem('organizations')) {\n      let organizations = JSON.parse(localStorage.getItem('organizations'));\n      let result = organizations.filter(organization => organization.name.toLowerCase() == control.value.toLowerCase());\n      if(result.length) return {exist: true};\n    }\n    return null;\n  }\n  existProject( control: FormControl ) : {[s:string]:boolean} {\n    if(localStorage.getItem('projects')) {\n      let projects = JSON.parse(localStorage.getItem('projects'));\n      let result = projects.filter(project => project.name.toLowerCase() == control.value.toLowerCase());\n      if(result.length) return {exist: true};\n    }\n    return null;\n  }\n  existUser( control: FormControl ) : {[s:string]:boolean} {\n    if(localStorage.getItem('users')) {\n      let users = JSON.parse(localStorage.getItem('users'));\n      let result = users.filter(user => user.username.toLowerCase() == control.value.toLowerCase());\n      if(result.length) return {exist: true};\n    }\n    return null;\n  }\n  isBlank( control: FormControl ) : {[s:string]:boolean} {\n    if(!(control.value.trim()).length) return {isBlank: true};\n    return null;\n  }\n\n  /*Documentos*/\n  uploadBeneficiaries (form : any) : Observable<any>{\n    return this._httpClient.post(`${this.URL}/files/beneficiaries`,form,{headers: this.authHeader});\n  }\n  uploadFile (form : any) : Observable<any>{\n    return this._httpClient.post(`${this.URL}/files/upload`,form,{headers: this.authHeader});\n  }\n  getBeneficiariesFile (id : string) : Observable<any> {\n    return this._httpClient.get(`${this.URL}/files/beneficiaries/${id}`,{headers: this.authHeader});\n  }\n  deleteFile (id : string) : Observable<any>{\n    return this._httpClient.delete(`${this.URL}/files/${id}`,{headers: this.authHeader});\n  }\n\n  /*Users*/\n  getUsers () : Observable<any> {\n    return this._httpClient.get(`${this.URL}/User/`,{headers: this.authHeader});\n  }\n  getUsersOff () :any[] {\n    if(localStorage.getItem('users')) return JSON.parse(localStorage.getItem('users'));\n    return [];\n  }\n  getUser (id : string) : any {\n    let users : any[] = JSON.parse(localStorage.getItem('users'));\n    return users.filter(user => user._id == id)[0];\n  }\n  createUser (user : any) : Observable<any> {\n    return this._httpClient.post(`${this.URL}/User/`,user,{headers: this.headers});\n  }\n  updateUser (user : any,id : string) : Observable<any> {\n    return this._httpClient.put(`${this.URL}/User/${id}`,user,{headers: this.headers});\n  }\n  updateUsersList (redirect) {\n    this._httpClient.get(`${this.URL}/User/`,{headers: this.authHeader}).subscribe(\n      result => {\n        if(result['message'] == 'OK'){\n          localStorage.setItem('users',JSON.stringify(result['users']));\n        }else localStorage.setItem('users','[]');\n        if(redirect) this._Router.navigate(['/users']);\n      },\n      error => this._snackBar.open('Ocurri√≥ un error al actualizar los usuarios.','ENTENDIDO',{duration: 3000}));\n  }\n\n  /*GlobalPreferences*/\n  getPreferences () : Observable<any> {\n    return this._httpClient.get(`${this.URL}/Preferences/`,{headers: this.authHeader});\n  }\n  getSectorsOff () : any[] {\n    if(localStorage.getItem('sectors')) return JSON.parse(localStorage.getItem('sectors'));\n    return [];\n  }\n  getTypesOff () : any[] {\n    if(localStorage.getItem('types')) return JSON.parse(localStorage.getItem('types'));\n    return [];\n  }\n  updatePreferencesList () {\n    this._httpClient.get(`${this.URL}/Preferences/`,{headers: this.authHeader}).subscribe(\n      result => {\n        if(result['message'] == 'OK'){\n          localStorage.setItem('sectors',JSON.stringify(result['preferences'].Organizations.Sectors));\n          localStorage.setItem('types',JSON.stringify(result['preferences'].Organizations.Types));\n        }else{\n          localStorage.setItem('sectors','[]');\n          localStorage.setItem('types','[]');\n        }\n      },\n      error => this._snackBar.open('Ocurri√≥ un error al actualizar los usuarios.','ENTENDIDO',{duration: 3000}));\n  }\n  addNewOrganizationPreference (preference : any) : Observable<any> {\n    return this._httpClient.put(`${this.URL}/Preferences/`,preference,{headers: this.headers});\n  }\n\n  /*Extras*/\n  getMonth(month : number){\n    let period : string;\n    switch(month){\n      case 0:\n        period = 'Enero'\n        break;\n      case 1:\n        period = 'Febrero'\n        break;\n      case 2:\n        period = 'Marzo'\n        break;\n      case 3:\n        period = 'Abril'\n        break;\n      case 4:\n        period = 'Mayo'\n        break;\n      case 5:\n        period = 'Junio'\n        break;\n      case 6:\n        period = 'Julio'\n        break;\n      case 7:\n        period = 'Agosto'\n        break;\n      case 8:\n        period = 'Septiembre'\n        break;\n      case 9:\n        period = 'Octubre'\n        break;\n      case 10:\n        period = 'Noviembre'\n        break;\n      case 11:\n        period = 'Diciembre'\n        break;\n      default:\n        break;\n    }\n\n    return period;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SisiDatewarehouseService {\n\n  URL : string = 'http://64.227.8.162:3000/Datawarehouse';\n\n  headers : HttpHeaders = new HttpHeaders({'Authorization':`Bearer ${localStorage.token}`})\n\n  constructor(private _httpClient : HttpClient) {  }\n\n  getPartnersHistoryData (id : string) : Observable<any> {\n    return this._httpClient.get(`${this.URL}/partners/${id}`,{headers: this.headers});\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}