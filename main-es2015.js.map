{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.html","./src/app/components/dialogs/funders-link/funders-link.component.html","./src/app/components/dialogs/new-organization-preference/new-organization-preference.component.html","./src/app/components/dialogs/new-password/new-password.component.html","./src/app/components/dialogs/update-executed/update-executed.component.html","./src/app/components/pages/dashboard/dashboard.component.html","./src/app/components/pages/fichas/fichas/fichas.component.html","./src/app/components/pages/funders/funder-view/funder-view.component.html","./src/app/components/pages/funders/funders/funders.component.html","./src/app/components/pages/indicators/indicator-view/indicator-view.component.html","./src/app/components/pages/indicators/indicators/indicators.component.html","./src/app/components/pages/indicators/new-indicator/new-indicator.component.html","./src/app/components/pages/login/login.component.html","./src/app/components/pages/organization/new-organization/new-organization.component.html","./src/app/components/pages/organization/organization-view/organization-view.component.html","./src/app/components/pages/organization/organizations/organizations.component.html","./src/app/components/pages/organization/partners-historic/partners-historic.component.html","./src/app/components/pages/organization/partners/partners.component.html","./src/app/components/pages/projects/new-project/new-project.component.html","./src/app/components/pages/projects/project-view/project-view.component.html","./src/app/components/pages/projects/projects/projects.component.html","./src/app/components/pages/report/report/report.component.html","./src/app/components/pages/report/table-and-graphic/table-and-graphic.component.html","./src/app/components/pages/users/new-users/new-users.component.html","./src/app/components/pages/users/users-view/users-view.component.html","./src/app/components/pages/users/users/users.component.html","./src/app/components/shared/button-group/button-group.component.html","./src/app/components/shared/form-buttons/form-buttons.component.html","./src/app/components/shared/loading-view/loading-view.component.html","./src/app/components/shared/modals/modals.component.html","./src/app/components/shared/sub-toolbar/sub-toolbar.component.html","./src/app/components/shared/upload-box/upload-box.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.sass","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/dialogs/funders-link/funders-link.component.ts","./src/app/components/dialogs/new-organization-preference/new-organization-preference.component.ts","./src/app/components/dialogs/new-password/new-password.component.ts","./src/app/components/dialogs/update-executed/update-executed.component.ts","./src/app/components/pages/dashboard/dashboard.component.sass","./src/app/components/pages/dashboard/dashboard.component.ts","./src/app/components/pages/fichas/fichas/fichas.component.ts","./src/app/components/pages/funders/funder-view/funder-view.component.ts","./src/app/components/pages/funders/funders/funders.component.ts","./src/app/components/pages/indicators/indicator-view/indicator-view.component.ts","./src/app/components/pages/indicators/indicators/indicators.component.ts","./src/app/components/pages/indicators/new-indicator/new-indicator.component.ts","./src/app/components/pages/login/login.component.ts","./src/app/components/pages/organization/new-organization/new-organization.component.ts","./src/app/components/pages/organization/organization-view/organization-view.component.ts","./src/app/components/pages/organization/organizations/organizations.component.ts","./src/app/components/pages/organization/partners-historic/partners-historic.component.ts","./src/app/components/pages/organization/partners/partners.component.ts","./src/app/components/pages/projects/new-project/new-project.component.ts","./src/app/components/pages/projects/project-view/project-view.component.ts","./src/app/components/pages/projects/projects/projects.component.ts","./src/app/components/pages/report/report/report.component.ts","./src/app/components/pages/report/table-and-graphic/table-and-graphic.component.ts","./src/app/components/pages/users/new-users/new-users.component.ts","./src/app/components/pages/users/users-view/users-view.component.ts","./src/app/components/pages/users/users/users.component.ts","./src/app/components/shared/button-group/button-group.component.ts","./src/app/components/shared/form-buttons/form-buttons.component.ts","./src/app/components/shared/loading-view/loading-view.component.ts","./src/app/components/shared/modals/modals.component.ts","./src/app/components/shared/sub-toolbar/sub-toolbar.component.ts","./src/app/components/shared/upload-box/upload-box.component.ts","./src/app/services/sisi-core.service.ts","./src/app/services/sisi-datewarehouse√ß.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<div class=\\\"full-height full-width\\\" *ngIf=\\\"this.auth; else LoginView\\\">\\n  <mat-toolbar color=\\\"accent\\\" class=\\\"flex\\\">\\n    <div class=\\\"full-height p-2\\\">\\n      <img src=\\\"../assets/images/logo-sisi.svg\\\" class=\\\"full-height\\\" alt=\\\"\\\">\\n    </div>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button mat-button [matMenuTriggerFor]=\\\"menu\\\"> {{this.userData.name}} {{this.userData.last_names}} <mat-icon>arrow_drop_down</mat-icon></button>\\n    <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n      <button mat-menu-item>Mi Perfil</button>\\n      <button mat-menu-item (click)=\\\"logout()\\\">Cerrar Sesi√≥n</button>\\n    </mat-menu>\\n  </mat-toolbar>\\n  <mat-drawer-container>\\n    <mat-drawer mode=\\\"side\\\" opened>\\n        <mat-list>\\n          <!--li><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['dashboard']\\\">Dashboard</a></li-->\\n          <li *ngIf=\\\"this.userRole != 'Financiador'\\\"><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['funders']\\\">Financiadores</a></li>\\n          <li><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['organizations']\\\">Organizaciones</a></li>\\n          <li *ngIf=\\\"this.userRole != 'Financiador'\\\"><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['indicators']\\\">Indicadores</a></li>\\n          <li><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['projects']\\\">Proyectos</a></li>\\n          <li *ngIf=\\\"this.userRole != 'Financiador'\\\"><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['schemas']\\\">Fichas</a></li>\\n          <li><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['reports']\\\">Reportes</a></li>\\n          <li *ngIf=\\\"this.userRole != 'Financiador'\\\"><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['documents']\\\">Documentos</a></li>\\n          <li><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['institucionales']\\\">Institucionales</a></li>\\n          <li *ngIf=\\\"this.userRole == 'Administrador'\\\"><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['users']\\\">Usuarios</a></li>\\n          <!--li><a mat-button class=\\\"full-width font-weight-lighter text-lg-left link-side\\\" routerLinkActive=\\\"linkActive\\\" [routerLink]=\\\"['settings']\\\">Configuraci√≥n</a></li-->\\n        </mat-list>\\n    </mat-drawer>\\n    <mat-drawer-content>\\n      <router-outlet></router-outlet>\\n    </mat-drawer-content>\\n  </mat-drawer-container>\\n</div>\\n<ng-template #LoginView>\\n  <app-login (authentication)=\\\"this.Authenticate($event)\\\" (isWorking)=\\\"this.loadingView($event)\\\"></app-login>\\n</ng-template>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"    <div mat-dialog-content>\\n      <h4 class=\\\"font-weight-lighter\\\">Vincular Financiadores al Proyecto</h4>\\n      <mat-divider></mat-divider>\\n      <div>\\n        <mat-selection-list class=\\\"projects-selection-list\\\">      \\n            <mat-list-option class=\\\"font-weight-lighter\\\" *ngFor=\\\"let funder of this.data.Funders\\\" [value]=\\\"funder._id\\\" (click)=\\\"OnFundersListChange(funder._id)\\\">{{funder.name}}</mat-list-option>\\n        </mat-selection-list>\\n    </div>\\n    </div>\\n    <div mat-dialog-actions class=\\\"flex\\\">\\n      <div class=\\\"fill-remaining-space\\\"></div>\\n      <button mat-button (click)=\\\"onNoClick()\\\">CANCELAR</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!this.data.seleccion.length\\\" [mat-dialog-close]=\\\"data.seleccion\\\" cdkFocusInitial>GUARDAR</button>\\n    </div>\"","export default \"\\n  <div *ngIf=\\\"this.data.preference == 'sectors'; else Type\\\">\\n    <div mat-dialog-content>\\n      <h4 class=\\\"font-weight-lighter\\\">A√±adir nuevo sector de organizaciones</h4>\\n      <mat-divider></mat-divider>\\n      <mat-form-field class=\\\"full-width mt-2\\\">\\n        <mat-label>Ingrese el nuevo sector</mat-label>\\n        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"data.sector\\\">\\n      </mat-form-field>\\n    </div>\\n    <div mat-dialog-actions class=\\\"flex\\\">\\n      <div class=\\\"fill-remaining-space\\\"></div>\\n      <button mat-button (click)=\\\"onNoClick()\\\">CANCELAR</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"this.data.sector == null\\\" [mat-dialog-close]=\\\"data.sector\\\" cdkFocusInitial>GUARDAR</button>\\n    </div>\\n  </div>\\n\\n  <ng-template #Type>\\n    <div mat-dialog-content>\\n      <h4 class=\\\"font-weight-lighter\\\">A√±adir nuevo tipo de organizaciones</h4>\\n      <mat-divider></mat-divider>\\n      <mat-form-field class=\\\"full-width mt-2\\\">\\n        <mat-label>Ingrese el nuevo valor tipo</mat-label>\\n        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"data.type\\\">\\n      </mat-form-field>\\n    </div>\\n    <div mat-dialog-actions class=\\\"flex\\\">\\n      <div class=\\\"fill-remaining-space\\\"></div>\\n      <button mat-button (click)=\\\"onNoClick()\\\">CANCELAR</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"this.data.type == null\\\" [mat-dialog-close]=\\\"data.type\\\" cdkFocusInitial>GUARDAR</button>\\n    </div>\\n  </ng-template>\"","export default \"    <div mat-dialog-content [formGroup]=\\\"this.PasswordForm\\\">\\n      <h4 class=\\\"font-weight-lighter\\\">Generar nueva contrase√±a</h4>\\n      <mat-divider></mat-divider>\\n      <mat-form-field class=\\\"full-width mt-2\\\">\\n        <mat-label>Ingrese una contrase√±a</mat-label>\\n        <input matInput type=\\\"password\\\" formControlName=\\\"password\\\">\\n        <mat-error *ngIf=\\\"this.PasswordForm.controls.password.errors?.required\\\">Este campo es obligatorio</mat-error>\\n        <mat-error *ngIf=\\\"this.PasswordForm.controls.password.errors?.minLength\\\">La contrase√±a debe tener al menos 10 caracteres.</mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width mt-2\\\">\\n        <mat-label>Repita la contrase√±a</mat-label>\\n        <input matInput type=\\\"password\\\" formControlName=\\\"repassword\\\">\\n        <mat-error *ngIf=\\\"this.PasswordForm.controls.repassword.errors?.required\\\">Este campo es obligatorio</mat-error>\\n        <mat-error *ngIf=\\\"this.PasswordForm.controls.repassword.errors?.noMatch\\\">Las contrase√±as no coinciden.</mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div mat-dialog-actions class=\\\"flex\\\">\\n      <div class=\\\"fill-remaining-space\\\"></div>\\n      <button mat-button (click)=\\\"onNoClick()\\\">CANCELAR</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"this.PasswordForm.invalid\\\" [mat-dialog-close]=\\\"this.PasswordForm.value\\\" cdkFocusInitial>GUARDAR</button>\\n    </div>\"","export default \"\\n  <div *ngIf=\\\"this.data.type == 'executed'; else UpdateBudget\\\">\\n    <div mat-dialog-content>\\n      <h4 class=\\\"font-weight-lighter\\\">Actualizaci√≥n de Presupuesto Ejecutado</h4>\\n      <mat-divider></mat-divider>\\n      <mat-form-field class=\\\"full-width mt-2\\\">\\n        <mat-label>Ingrese el valor del presupuesto ejecutado hasta la fecha actual</mat-label>\\n        <input matInput type=\\\"number\\\" [(ngModel)]=\\\"data.ejecutado\\\">\\n      </mat-form-field>\\n    </div>\\n    <div mat-dialog-actions class=\\\"flex\\\">\\n      <div class=\\\"fill-remaining-space\\\"></div>\\n      <button mat-button (click)=\\\"onNoClick()\\\">CANCELAR</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"this.data.ejecutado == null\\\" [mat-dialog-close]=\\\"data.ejecutado\\\" cdkFocusInitial>GUARDAR</button>\\n    </div>\\n  </div>\\n\\n  <ng-template #UpdateBudget>\\n    <div mat-dialog-content>\\n      <h4 class=\\\"font-weight-lighter\\\">Registrar nuevo Presupuesto</h4>\\n      <mat-divider></mat-divider>\\n      <mat-form-field class=\\\"full-width mt-2\\\">\\n        <mat-label>Ingrese el nuevo valor total para el presupuesto</mat-label>\\n        <input matInput type=\\\"number\\\" [(ngModel)]=\\\"data.final\\\">\\n      </mat-form-field>\\n    </div>\\n    <div mat-dialog-actions class=\\\"flex\\\">\\n      <div class=\\\"fill-remaining-space\\\"></div>\\n      <button mat-button (click)=\\\"onNoClick()\\\">CANCELAR</button>\\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"this.data.final == null\\\" [mat-dialog-close]=\\\"data.final\\\" cdkFocusInitial>GUARDAR</button>\\n    </div>\\n  </ng-template>\"","export default \"<p>dashboard works!</p>\\n\"","export default \"<app-sub-toolbar\\n    title=\\\"Fichas\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <mat-card>\\n        <mat-card-title class=\\\"font-weight-lighter\\\">Generar Ficha:</mat-card-title>\\n        <mat-divider></mat-divider>\\n        <mat-card-content>\\n            <div class=\\\"row pt-3\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Seleccione un proyecto</mat-label>\\n                        <mat-select (valueChange)=\\\"onProjectSelect($event)\\\" [(ngModel)]=\\\"this.selectedProject\\\">\\n                          <mat-option *ngFor=\\\"let project of this.Projects\\\" [value]=\\\"project._id\\\">\\n                            {{project.name}}\\n                          </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Seleccione un indicador</mat-label>\\n                        <mat-select (valueChange)=\\\"onIndicatorSelect($event)\\\" [(ngModel)]=\\\"this.selectedIndicator\\\"[disabled]=\\\"!this.Indicators\\\" >\\n                          <mat-option *ngFor=\\\"let indicator of this.Indicators\\\" [value]=\\\"indicator._id\\\">\\n                            {{indicator.name}}\\n                          </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" [disabled]=\\\"!this.selectedIndicator\\\" (click)=\\\"generateSchema()\\\">GENERAR</button>\\n                </div>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n\\n    <div class=\\\"mt-4\\\">\\n        <mat-card *ngIf=\\\"this.Status == 'loading'\\\">\\n            <div class=\\\"loading-box\\\">\\n                <div>\\n                    <img src=\\\"../../../../../assets/images/logo-sisi-only.svg\\\" alt=\\\"\\\">\\n                    <h4 class=\\\"font-weight-lighter text-center\\\">Cargando...</h4>\\n                </div>\\n            </div>\\n        </mat-card>\\n        <mat-card *ngIf=\\\"this.Status == 'ready'\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Ficha</mat-card-title>\\n            <mat-divider></mat-divider>\\n            <mat-card-content>\\n                <div>\\n                    <div class=\\\"pt-3 mb-3\\\">\\n                        <p>Proyecto: <span class=\\\"font-weight-lighter\\\">{{this.ProjectName}}</span></p>\\n                        <p>Indicador: <span class=\\\"font-weight-lighter\\\">{{this.Indicator.name}}</span></p>\\n                        <p>Periodo: <span class=\\\"font-weight-lighter\\\">{{this._service.getMonth(this.Period.getMonth())}} {{this.Period.getFullYear()}}</span></p>\\n                    </div>\\n                    <div class=\\\"table-container\\\">\\n                        <table class=\\\"baseline-table\\\">\\n                            <tr>\\n                                <th class=\\\"sticky\\\">ORGANIZACI√ìN</th>\\n                                <th *ngFor=\\\"let field of this.fieldsSchema\\\">{{field.name}}</th>\\n                            </tr>\\n                            <tr *ngFor=\\\"let organization of this.Organizations; let i = index\\\">\\n                                <td class=\\\"sticky\\\">{{organization.name}}</td>\\n                                <td *ngFor=\\\"let field of this.fieldsSchema; let j = index\\\">\\n                                    <input type=\\\"number\\\" [(ngModel)]=\\\"this.SchemaForm.records.rows[i].fields[j].value\\\" class=\\\"full-width font-weight-lighter\\\" placeholder=\\\"Ingrese un valor\\\">\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </mat-card-content>\\n            <mat-divider></mat-divider>\\n            <mat-card-actions>\\n                <div class=\\\"flex\\\">\\n                    <span class=\\\"fill-remaining-space\\\"></span>\\n                    <button mat-button type=\\\"button\\\" (click)=\\\"this.cancel()\\\">CANCELAR</button>\\n                    <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.save()\\\" >GUARDAR</button>\\n                </div>\\n            </mat-card-actions>\\n        </mat-card>\\n        <mat-card *ngIf=\\\"this.Status == 'already-filled'\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Esta Ficha ya ha sido llenada</mat-card-title>\\n            <mat-divider></mat-divider>\\n            <mat-card-content>\\n                <div>\\n                    <div class=\\\"pt-3 mb-3\\\">\\n                        <p>Proyecto: <span class=\\\"font-weight-lighter\\\">{{this.ProjectName}}</span></p>\\n                        <p>Indicador: <span class=\\\"font-weight-lighter\\\">{{this.Indicator.name}}</span></p>\\n                        <p>Periodo: <span class=\\\"font-weight-lighter\\\">{{this._service.getMonth(this.Period.getMonth())}} {{this.Period.getFullYear()}}</span></p>\\n                        <p>T√©cnico Responsable: <span class=\\\"font-weight-lighter\\\">{{this.UserResponsable}}</span></p>\\n                    </div>\\n                    <div class=\\\"table-container\\\">\\n                        <table class=\\\"baseline-table\\\">\\n                            <tr>\\n                                <th class=\\\"sticky\\\">ORGANIZACI√ìN</th>\\n                                <th *ngFor=\\\"let field of this.SchemaForm.records.rows[0].fields\\\">{{field.name}}</th>\\n                            </tr>\\n                            <tr *ngFor=\\\"let organization of this.Organizations; let i = index\\\">\\n                                <td class=\\\"sticky\\\">{{organization.name}}</td>\\n                                <td *ngFor=\\\"let field of this.SchemaForm.records.rows[i].fields; let j = index\\\">\\n                                    <div class=\\\"full-width font-weight-lighter text-center\\\">{{field.value}}</div>\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\\n\"","export default \"<app-sub-toolbar *ngIf=\\\"this.userRole == 'Administrador'\\\"\\n    [title]=\\\"this.Funder.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [buttons]=\\\"[this.DeleteBtn]\\\"\\n    [importantBack]=\\\"this.editMode\\\">\\n</app-sub-toolbar>\\n\\n<app-sub-toolbar *ngIf=\\\"this.userRole != 'Administrador'\\\"\\n    [title]=\\\"this.Funder.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <mat-card>\\n        <form [formGroup]=\\\"this.FunderFormGroup\\\">\\n            <div class=\\\"flex\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Datos Generales</mat-card-title>\\n                <span class=\\\"fill-remaining-space\\\"></span>\\n                <button mat-button *ngIf=\\\"this.userRole == 'Administrador' && !this.editMode\\\" (click)=\\\"this.edit()\\\"><mat-icon>edit</mat-icon> EDITAR</button>\\n            </div>\\n            <div class=\\\"row mb-4\\\">\\n                <div class=\\\"col-md-3\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre del Financiador\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"place\\\" placeholder=\\\"Ubicaci√≥n\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"website\\\" placeholder=\\\"Sitio Web\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>    \\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                    <mat-form-field disabled class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"coop_date\\\" placeholder=\\\"Fecha de Constituci√≥n\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>    \\n                </div>\\n            </div>\\n            <app-button-group *ngIf=\\\"this.editMode\\\" [formStatus]=\\\"this.FunderFormGroup.pristine\\\" (save)=\\\"this.save()\\\" (cancel)=\\\"this.cancel()\\\"></app-button-group>\\n        </form>\\n    </mat-card>\\n\\n    <div>\\n        <h2 class=\\\"mt-5 font-weight-lighter\\\">Proyectos asociados:</h2>\\n        <div *ngIf=\\\"this.Funder.projects.length; else NoProjects\\\" class=\\\"row row-cols-1 row-cols-md-3\\\">\\n            <div class=\\\"col mb-4\\\" *ngFor=\\\"let project of this.Funder.projects\\\">\\n                <mat-card>\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">{{project.name}}</mat-card-title>\\n                    <mat-divider></mat-divider>\\n                    <mat-card-content>\\n                        <mat-list>\\n                            <li class=\\\"pt-2\\\">\\n                                <span>\\n                                    Fecha de Inicio: <span class=\\\"font-weight-lighter\\\">{{project.start_date}}</span>\\n                                </span>\\n                            </li>\\n                            <li class=\\\"mt-2\\\">\\n                                <span>\\n                                    Ubicaci√≥n: <span class=\\\"font-weight-lighter\\\">{{project.ubication}}</span>\\n                                </span>\\n                            </li>\\n                            <li class=\\\"mt-2\\\">\\n                                <span>\\n                                    Duraci√≥n: <span class=\\\"font-weight-lighter\\\">{{project.duration}}</span>\\n                                </span>\\n                            </li>\\n                        </mat-list>\\n                    </mat-card-content>\\n                    <mat-card-actions>\\n                        <div class=\\\"flex\\\">\\n                            <span class=\\\"fill-remaining-space\\\"></span>\\n                            <a mat-button [routerLink]=\\\"['/projects',project._id]\\\">DETALLES</a>\\n                        </div>\\n                    </mat-card-actions>\\n                </mat-card>\\n            </div>\\n        </div>\\n        <ng-template #NoProjects>\\n            <div class=\\\"font-weight-lighter text-center mt-5\\\">\\n                Este Financiador no tiene ning√∫n proyecto asociado\\n            </div>\\n        </ng-template>\\n    </div>\\n\\n</div>\\n\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\\n\"","export default \"<app-sub-toolbar\\n    title=\\\"Financiadores\\\"\\n    [backButton]=\\\"false\\\"\\n    [addButton]=\\\"false\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <div class=\\\"container full-height\\\">\\n        <div class=\\\"row full-height\\\">\\n            <div [ngClass]=\\\"{'col-sm-6':this.userRole == 'Administrador','col-sm-12':this.userRole != 'Administrador'}\\\" *ngIf=\\\"this.funders.length; else NoFunders\\\">\\n                <h2 class=\\\"list-title full-width\\\">Financiadores Registrados</h2>\\n                <mat-list class=\\\"scroll-list-view bordered-list\\\">\\n                    <a mat-button *ngFor=\\\"let funder of this.funders\\\" [routerLink]=\\\"funder._id\\\" class=\\\"full-width text-left font-weight-lighter\\\">{{funder.name}} - {{funder.place}}</a>\\n                </mat-list>\\n            </div>\\n            <ng-template #NoFunders>\\n                <div [ngClass]=\\\"{'col-sm-6':this.userRole == 'Administrador','col-sm-12':this.userRole != 'Administrador'}\\\" class=\\\"full-height\\\">\\n                    <h3 class=\\\"font-weight-lighter mt-5 text-center\\\">No hay Financiadores registrados</h3>\\n                    <div class=\\\"font-weight-lighter full-width text-center\\\">Para agregar un financiador, use el formulario de la derecha.</div>\\n                </div>\\n            </ng-template> \\n            <div class=\\\"col-sm-6\\\" *ngIf=\\\"this.userRole == 'Administrador'\\\">\\n                <mat-card>\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Nuevo Financiador:</mat-card-title>\\n                    <form [formGroup]=\\\"this.fundersForm\\\" class=\\\"mt-3\\\" (ngSubmit)=\\\"saveFunder()\\\" novalidate>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre del Financiador:\\\">\\n                            <mat-error *ngIf=\\\"this.nameCtrl.errors?.required && this.nameCtrl.touched\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"this.nameCtrl.errors?.exist && this.nameCtrl.touched\\\">Ya existe un Financiador con ese nombre</mat-error>\\n                        </mat-form-field>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"place\\\" placeholder=\\\"Pa√≠s:\\\">\\n                            <mat-error *ngIf=\\\"this.ubicationCtrl.invalid && this.ubicationCtrl.touched\\\">Este campo es obligatorio</mat-error>\\n                        </mat-form-field>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"website\\\" placeholder=\\\"Sitio Web:\\\">\\n                        </mat-form-field>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"coop_date\\\" placeholder=\\\"Inicio de Trabajo en Conjunto\\\">\\n                            <mat-hint>Utilice el siguiente formato: <b>07/2019</b></mat-hint>\\n                            <mat-error *ngIf=\\\"this.fundersForm.controls['coop_date'].errors?.required && this.coop_dateCtrl.touched\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"this.fundersForm.controls['coop_date'].errors?.pattern && this.coop_dateCtrl.touched\\\">Ingrese una fecha con el formato v√°lido</mat-error>\\n                        </mat-form-field>\\n                        <div class=\\\"flex\\\">\\n                            <span class=\\\"fill-remaining-space\\\"></span>\\n                            <button mat-button class=\\\"mr-3\\\" (click)=\\\"this.reset()\\\" type=\\\"reset\\\">CANCELAR</button>\\n                            <button [disabled]=\\\"!this.fundersForm.valid\\\" type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">GUARDAR</button>\\n                        </div>\\n                    </form>\\n                </mat-card>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar *ngIf=\\\"this.userRole == 'Administrador'\\\"\\n    title=\\\"Indicador: {{this.Indicator.name}}\\\"\\n    [backButton]=\\\"true\\\"\\n    [editButton]=\\\"!editMode\\\"\\n    [buttons]=\\\"[this.DeleteBtn]\\\"\\n    (editClick)=\\\"setEditMode()\\\"\\n    [importantBack]=\\\"editMode\\\">\\n</app-sub-toolbar>\\n\\n<app-sub-toolbar *ngIf=\\\"this.userRole != 'Administrador'\\\"\\n    title=\\\"Indicador: {{this.Indicator.name}}\\\"\\n    [backButton]=\\\"true\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <div *ngIf=\\\"!this.editMode; else EditMode\\\">\\n        <mat-card class=\\\"pb-3\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Informaci√≥n General</mat-card-title>\\n            <div class=\\\"row mb-3\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <div><small class=\\\"label\\\">Nombre del Indicador</small></div>\\n                    <div>{{this.Indicator.name}}</div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <div><small>Tipo de Indicador</small></div>\\n                    <div>{{this.Indicator.type}}</div>\\n                </div>\\n            </div>\\n            <mat-divider *ngIf=\\\"this.Indicator.type == 'Compuesto'\\\"></mat-divider>\\n            <div class=\\\"label\\\">\\n                <div *ngIf=\\\"this.Indicator.type == 'Compuesto' && this.Indicator.antiquity_diff\\\"><small>Este indicador <b>DIFERENCIA</b> entre organizaciones nuevas y antiguas</small></div>\\n                <ng-template>\\n                    <div><small>Este indicador <b>NO DIFERENCIA</b> entre organizaciones nuevas y antiguas</small></div>\\n                </ng-template>\\n            </div>\\n        </mat-card>\\n    \\n        <!--Par√°metros Indicador Simple-->\\n        <div class=\\\"mt-4\\\" *ngIf=\\\"this.Indicator.type == 'Simple'; else EsquemaCompuesto\\\">\\n            <mat-card>\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Descripci√≥n del Indicador</mat-card-title>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                        <div class=\\\"label\\\">{{this.Indicator.description}}</div>\\n                    </div>\\n                </div>\\n            </mat-card>\\n            <mat-card class=\\\"mt-4 mb-4\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                <div class=\\\"row mb-2\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Frecuencia</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{this.Indicator.parameters_schema[0].name}}</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{this.Indicator.parameters_schema[0].frequency}}</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{this.Indicator.parameters_schema[0].isAcum}}</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{this.Indicator.parameters_schema[0].unit}}</div>\\n                    </div>\\n                </div>\\n            </mat-card>\\n        </div>\\n    \\n        <!--Esquema Indicador Compuesto-->\\n        <ng-template #EsquemaCompuesto>\\n            <mat-card class=\\\"mt-4\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Esquema de la Ficha</mat-card-title>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Frecuencia</div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                    </div>\\n                </div>\\n                <div *ngFor=\\\"let field of this.Indicator.record_schema\\\">\\n                    <div class=\\\"row mb-3\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{field.name}}</div>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{field.frequency}}</div>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{field.unit}}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-card>\\n    \\n            <!--Par√°metros Indicador Compuesto Sin Diferenciaci√≥n-->\\n            <mat-card class=\\\"mt-4\\\" *ngIf=\\\"!this.Indicator.antiquity_diff; else ConDiferenciacion\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                <div class=\\\"row mb-2\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Ponderaci√≥n (%)</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"mb-1\\\" *ngFor=\\\"let parameter of this.Indicator.parameters_schema\\\">\\n                    <div class=\\\"row mb-3\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.name}}</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.weighing[0].weight}}</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.isAcum}}</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.unit}}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </mat-card>\\n    \\n            <ng-template #ConDiferenciacion>\\n                <mat-card class=\\\"mt-4\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                    <div class=\\\"row mb-2\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Ponderaci√≥n (%)</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mb-1\\\"*ngFor=\\\"let parameter of this.Indicator.parameters_schema\\\">\\n                        <div class=\\\"row mb-3\\\">\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.name}}</div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.weighing[0].older}}</div>\\n                                    </div>\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.weighing[0].newer}}</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.isAcum}}</div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"table-box p-1 font-weight-lighter text-center\\\">{{parameter.unit}}</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-3\\\"></div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"font-weight-lighter full-width text-center\\\">Antigua</div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"font-weight-lighter full-width text-center\\\">Nueva</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\"></div>\\n                        <div class=\\\"col-sm-3\\\"></div>\\n                    </div>\\n                </mat-card>\\n            </ng-template>\\n    \\n            <!--Definici√≥n de los Par√°metros-->\\n            <mat-card class=\\\"mt-4 mb-4\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Definici√≥n de los Par√°metros</mat-card-title>\\n                <div class=\\\"definition-box mt-2 mb-4\\\">\\n                    <mat-list> \\n                        <span class=\\\"definition-column-label\\\">Par√°metro</span>\\n                        <li *ngFor=\\\"let parameter of this.Indicator.parameters_schema; let i = index\\\">\\n                            <button mat-flat-button type=\\\"button\\\" *ngIf=\\\"this.ParameterSelected != null && i == this.ParameterSelected; else NoSelected\\\" (click)=\\\"this.ParameterSelected = i\\\" class=\\\"font-weight-lighter selected-parameter full-width\\\">{{parameter.name}}</button>\\n                            <ng-template #NoSelected>\\n                                <button mat-flat-button type=\\\"button\\\" (click)=\\\"this.ParameterSelected = i\\\" class=\\\"font-weight-lighter full-width\\\">{{parameter.name}}</button>\\n                            </ng-template>\\n                        </li>\\n                    </mat-list>\\n                    <mat-list>\\n                        <span class=\\\"definition-column-label\\\">Campos de la Ficha:</span>\\n                        <div *ngIf=\\\"this.ParameterSelected != null\\\">\\n                            <button mat-button type=\\\"button\\\" class=\\\"font-weight-lighter full-width\\\" *ngFor=\\\"let field of this.Indicator.record_schema\\\">{{field.name}}</button>\\n                        </div>\\n                    </mat-list>\\n                    <mat-list class=\\\"definition-column\\\">\\n                        <span class=\\\"definition-column-label\\\">Definici√≥n del Par√°metro</span>\\n                        <div class=\\\"definition-space\\\">\\n                            <div *ngIf=\\\"this.ParameterSelected != null\\\">\\n                                <label class=\\\"p-1 font-weight-lighter\\\" *ngFor=\\\"let field of this.Indicator.parameters_schema[this.ParameterSelected].definition\\\">\\n                                    {{field}}\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </mat-list>\\n                </div>\\n            </mat-card>\\n    \\n        </ng-template>\\n    </div>\\n\\n    <ng-template #EditMode>\\n        <form [formGroup]=\\\"this.IndicatorForm\\\" (ngSubmit)=\\\"saveIndicator()\\\">\\n            <mat-card class=\\\"pb-3\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Informaci√≥n General</mat-card-title>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre del Indicador\\\">\\n                            <mat-error *ngIf=\\\"this.IndicatorForm.controls.name.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                            <mat-error *ngIf=\\\"!this.IndicatorForm.controls.name.errors?.required && this.IndicatorForm.controls.name.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <mat-label>Tipo de Indicador</mat-label>\\n                            <mat-select formControlName=\\\"type\\\" disabled>\\n                                <mat-option value=\\\"Simple\\\">Simple</mat-option>\\n                                <mat-option value=\\\"Compuesto\\\">Compuesto</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"flex mt-3 justify-content-center\\\">\\n                    <mat-checkbox *ngIf=\\\"this.Indicator.type == 'Compuesto'\\\" formControlName=\\\"antiquity_diff\\\">Diferenciar entre organizaciones nuevas y antiguas</mat-checkbox>\\n                </div>\\n            </mat-card>\\n        \\n            <!--Par√°metros Indicador Simple-->\\n            <div class=\\\"mt-4\\\" *ngIf=\\\"this.Indicator.type == 'Simple'; else EsquemaCompuesto\\\">\\n                <mat-card>\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Descripci√≥n del Indicador</mat-card-title>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <mat-form-field class=\\\"full-width\\\">\\n                                <textarea matInput #input formControlName=\\\"description\\\" maxlength=\\\"250\\\" placeholder=\\\"Escriba una breve descripci√≥n del Indicador Simple aqu√≠...\\\"></textarea>\\n                                <mat-error *ngIf=\\\"this.IndicatorForm.controls.description.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                                <mat-error *ngIf=\\\"!this.IndicatorForm.controls.description.errors?.required && this.IndicatorForm.controls.description.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                                <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/250</mat-hint>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n                </mat-card>\\n                <mat-card class=\\\"mt-4 mb-4\\\" formArrayName=\\\"parameters_schema\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                    <div class=\\\"row mb-2\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Frecuencia</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" [formGroupName]=\\\"0\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"frequency\\\">\\n                                <mat-option value=\\\"Mensual\\\">Mensual</mat-option>\\n                                <mat-option value=\\\"Trimestral\\\">Trimestral</mat-option>\\n                                <mat-option value=\\\"Semestral\\\">Semestral</mat-option>\\n                            </mat-select>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"isAcum\\\">\\n                                <mat-option value=\\\"Si\\\">Si</mat-option>\\n                                <mat-option value=\\\"No\\\">No</mat-option>\\n                            </mat-select>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"unit\\\">\\n                                <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                </mat-card>\\n            </div>\\n        \\n            <!--Esquema Indicador Compuesto-->\\n            <ng-template #EsquemaCompuesto>\\n                <mat-card class=\\\"mt-4\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Esquema de la Ficha</mat-card-title>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Frecuencia</div>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                        </div>\\n                    </div>\\n                    <div formArrayName=\\\"record_schema\\\" *ngFor=\\\"let field of this.IndicatorForm.controls.record_schema['controls']; let i = index\\\">\\n                        <div class=\\\"row mb-3\\\" [formGroupName]=\\\"i\\\">\\n                            <div class=\\\"col-sm-4\\\">\\n                                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                            </div>\\n                            <div class=\\\"col-sm-4\\\">\\n                                <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"frequency\\\">\\n                                    <mat-option value=\\\"Mensual\\\">Mensual</mat-option>\\n                                    <mat-option value=\\\"Trimestral\\\">Trimestral</mat-option>\\n                                    <mat-option value=\\\"Semestral\\\">Semestral</mat-option>\\n                                </mat-select>\\n                            </div>\\n                            <div class=\\\"col-sm-4\\\">\\n                                <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"unit\\\">\\n                                    <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                    <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                    <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                                </mat-select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <mat-card-actions>\\n                        <div class=\\\"flex mb-4\\\">\\n                            <span class=\\\"fill-remaining-space\\\"></span>\\n                            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addField()\\\"><mat-icon>add</mat-icon> AGREGAR</button>\\n                        </div>\\n                    </mat-card-actions>\\n                </mat-card>\\n        \\n                <!--Par√°metros Indicador Compuesto Sin Diferenciaci√≥n-->\\n                <mat-card class=\\\"mt-4\\\" *ngIf=\\\"!this.IndicatorForm.controls.antiquity_diff.value; else ConDiferenciacion\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                    <div class=\\\"row mb-2\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Ponderaci√≥n (%)</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mb-1\\\" formArrayName=\\\"parameters_schema\\\" *ngFor=\\\"let parameter of this.IndicatorForm.controls.parameters_schema['controls']; let i = index\\\">\\n                        <div class=\\\"row mb-3\\\" [formGroupName]=\\\"i\\\">\\n                            <div class=\\\"col-sm-3\\\">\\n                                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\" formArrayName=\\\"weighing\\\">\\n                                <div [formGroupName]=\\\"0\\\">\\n                                    <input type=\\\"number\\\" formControlName=\\\"weight\\\" class=\\\"schema-input full-width\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <mat-select formControlName=\\\"isAcum\\\" class=\\\"schema-input full-width\\\">\\n                                    <mat-option value=\\\"Si\\\">S√≠</mat-option>\\n                                    <mat-option value=\\\"No\\\">No</mat-option>\\n                                </mat-select>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <mat-select formControlName=\\\"unit\\\" class=\\\"schema-input full-width\\\">\\n                                    <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                    <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                    <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                                </mat-select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <mat-card-actions>\\n                        <div class=\\\"flex mb-4 mt-4\\\">\\n                            <span class=\\\"fill-remaining-space\\\"></span>\\n                            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addParameter()\\\"><mat-icon>add</mat-icon> AGREGAR</button>\\n                        </div>\\n                    </mat-card-actions>\\n                </mat-card>\\n        \\n                <ng-template #ConDiferenciacion>\\n                    <mat-card class=\\\"mt-4\\\">\\n                        <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                        <div class=\\\"row mb-2\\\">\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"full-width text-sm-center\\\">Ponderaci√≥n (%)</div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"mb-1\\\" formArrayName=\\\"parameters_schema\\\" *ngFor=\\\"let parameter of this.IndicatorForm.controls.parameters_schema['controls']; let i = index\\\">\\n                            <div class=\\\"row mb-3\\\" [formGroupName]=\\\"i\\\">\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                                </div>\\n                                <div class=\\\"col-sm-3\\\" formArrayName=\\\"weighing\\\">\\n                                    <div class=\\\"row\\\" [formGroupName]=\\\"0\\\">\\n                                        <div class=\\\"col-sm-6\\\">\\n                                            <input type=\\\"number\\\" formControlName=\\\"older\\\" class=\\\"schema-input full-width\\\">\\n                                        </div>\\n                                        <div class=\\\"col-sm-6\\\">\\n                                            <input type=\\\"number\\\" formControlName=\\\"newer\\\" class=\\\"schema-input full-width\\\">\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <mat-select formControlName=\\\"isAcum\\\" class=\\\"schema-input full-width\\\">\\n                                        <mat-option value=\\\"Si\\\">S√≠</mat-option>\\n                                        <mat-option value=\\\"No\\\">No</mat-option>\\n                                    </mat-select>\\n                                </div>\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <mat-select formControlName=\\\"unit\\\" class=\\\"schema-input full-width\\\">\\n                                        <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                        <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                        <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                                    </mat-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-3\\\"></div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"font-weight-lighter full-width text-center\\\">Antigua</div>\\n                                    </div>\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <div class=\\\"font-weight-lighter full-width text-center\\\">Nueva</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\"></div>\\n                            <div class=\\\"col-sm-3\\\"></div>\\n                        </div>\\n                        <mat-card-actions>\\n                            <div class=\\\"flex mb-4 mt-4\\\">\\n                                <span class=\\\"fill-remaining-space\\\"></span>\\n                                <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addParameter()\\\"><mat-icon>add</mat-icon> AGREGAR</button>\\n                            </div>\\n                        </mat-card-actions>\\n                    </mat-card>\\n                </ng-template>\\n        \\n                <!--Definici√≥n de los Par√°metros-->\\n                <mat-card class=\\\"mt-4 mb-4\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Definici√≥n de los Par√°metros</mat-card-title>\\n                    <div class=\\\"definition-box mt-2 mb-4\\\">\\n                        <mat-list> \\n                            <span class=\\\"definition-column-label\\\">Par√°metro</span>\\n                            <li *ngFor=\\\"let parameter of this.IndicatorForm.controls.parameters_schema['controls']; let i = index\\\">\\n                                <button mat-flat-button type=\\\"button\\\" *ngIf=\\\"this.ParameterSelected && i == this.ParameterSelected; else NoSelected\\\" (click)=\\\"this.ParameterSelected = i\\\" class=\\\"font-weight-lighter selected-parameter full-width\\\">{{parameter['controls'].name.value}}</button>\\n                                <ng-template #NoSelected>\\n                                    <button mat-flat-button type=\\\"button\\\" (click)=\\\"this.ParameterSelected = i\\\" class=\\\"font-weight-lighter full-width\\\">{{parameter['controls'].name.value}}</button>\\n                                </ng-template>\\n                            </li>\\n                        </mat-list>\\n                        <mat-list>\\n                            <span class=\\\"definition-column-label\\\">Campos de la Ficha:</span>\\n                            <div *ngIf=\\\"this.ParameterSelected != null\\\">\\n                                <button mat-button type=\\\"button\\\" class=\\\"font-weight-lighter full-width\\\" (dblclick)=\\\"addFieldToDefinition(field['controls'].name.value)\\\" *ngFor=\\\"let field of this.IndicatorForm.controls.record_schema['controls']\\\">{{field['controls'].name.value}}</button>\\n                            </div>\\n                        </mat-list>\\n                        <mat-list class=\\\"definition-column\\\">\\n                            <span class=\\\"definition-column-label\\\">Definici√≥n del Par√°metro</span>\\n                            <div class=\\\"definition-space\\\">\\n                                <mat-chip-list *ngIf=\\\"this.ParameterSelected != null\\\" #chipList aria-label=\\\"Fields selection\\\">\\n                                    <mat-chip *ngFor=\\\"let field of this.IndicatorForm.controls.parameters_schema['controls'][this.ParameterSelected].controls.definition.controls; let i = index\\\" [selectable]=\\\"true\\\" [removable]=\\\"true\\\" (removed)=\\\"remove(i)\\\">\\n                                        {{field.value}}<mat-icon matChipRemove *ngIf=\\\"true\\\">cancel</mat-icon>\\n                                    </mat-chip>\\n                                </mat-chip-list>\\n                            </div>\\n                            <div class=\\\"botonera flex justify-content-center\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator('+')\\\" class=\\\"botonera-btn mr-1\\\">+</button>\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator('-')\\\" class=\\\"botonera-btn mr-1\\\">-</button>\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator('*')\\\" class=\\\"botonera-btn mr-1\\\">*</button>\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator('/')\\\" class=\\\"botonera-btn mr-1\\\">/</button>\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator('(')\\\" class=\\\"botonera-btn mr-1\\\">(</button>\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator(')')\\\" class=\\\"botonera-btn mr-1\\\">)</button>\\n                                <button type=\\\"button\\\" (click)=\\\"addOperator('*100%')\\\" class=\\\"botonera-btn\\\">*100%</button>\\n                            </div>\\n                        </mat-list>\\n                    </div>\\n                </mat-card>\\n        \\n            </ng-template>\\n        \\n            <app-button-group class=\\\"mt-4\\\" [formStatus]=\\\"false\\\" (cancel)=\\\"cancel()\\\" (save)=\\\"saveIndicator()\\\"></app-button-group>\\n        \\n        </form>\\n    </ng-template>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar\\n    title=\\\"Indicadores\\\"\\n    [backButton]=\\\"false\\\"\\n    [addButton]=\\\"this.userRole == 'Administrador' || this.userRole == 'Coordinador'\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\" *ngIf=\\\"this.Indicators.length; else NoIndicators\\\">\\n    <div class=\\\"container full-height\\\">\\n        <div class=\\\"row full-height\\\">\\n            <div class=\\\"col-sm-6 flex\\\">\\n                <mat-card class=\\\"align-self-center full-width\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Buscar:</mat-card-title>\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"search\\\" (keyup)=\\\"filter()\\\" [(ngModel)]=\\\"this.search_term\\\" placeholder=\\\"Nombre\\\">\\n                    </mat-form-field>\\n                </mat-card>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <h2 class=\\\"list-title full-width\\\">Indicadores Registrados</h2>\\n                <mat-list class=\\\"scroll-list-view bordered-list\\\">\\n                    <a mat-button *ngFor=\\\"let indicator of this.filteredList\\\" [routerLink]=\\\"[indicator._id]\\\" class=\\\"full-width text-left font-weight-lighter\\\">{{indicator.name}}</a>\\n                </mat-list>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #NoIndicators>\\n    <div class=\\\"page-content flex justify-content-center align-items-center\\\">\\n        <div>\\n            <h2 class=\\\"text-center font-weight-lighter\\\">No hay Indicadores registrados</h2>\\n            <div class=\\\"font-weight-lighter\\\">\\n                Para agregar indicadores dale click al boton \\\"Agregar\\\" de la esquina superior derecha.\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\"","export default \"<app-sub-toolbar\\n    title=\\\"Nuevo Indicador\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [importantBack]=\\\"true\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <form [formGroup]=\\\"this.indicatorForm\\\" (ngSubmit)=\\\"saveIndicator()\\\">\\n        <mat-card class=\\\"pb-3\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Informaci√≥n General</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre del Indicador\\\">\\n                        <mat-error *ngIf=\\\"this.nameCtrl.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"!this.nameCtrl.errors?.required && this.nameCtrl.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Tipo de Indicador</mat-label>\\n                        <mat-select formControlName=\\\"type\\\" (valueChange)=\\\"changeType($event)\\\">\\n                            <mat-option value=\\\"Simple\\\">Simple</mat-option>\\n                            <mat-option value=\\\"Compuesto\\\">Compuesto</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"flex mt-3 justify-content-center\\\">\\n                <mat-checkbox *ngIf=\\\"this.typeCtrl.value == 'Compuesto'\\\" formControlName=\\\"antiquity_diff\\\">Diferenciar entre organizaciones nuevas y antiguas</mat-checkbox>\\n            </div>\\n        </mat-card>\\n\\n        <!--Par√°metros Indicador Simple-->\\n        <div class=\\\"mt-4\\\" *ngIf=\\\"this.typeCtrl.value == 'Simple'; else EsquemaCompuesto\\\">\\n            <mat-card>\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Descripci√≥n del Indicador</mat-card-title>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <textarea matInput #input [formControl]=\\\"this.descriptionCtrl\\\" maxlength=\\\"250\\\" placeholder=\\\"Escriba una breve descripci√≥n del Indicador Simple aqu√≠...\\\"></textarea>\\n                            <mat-error *ngIf=\\\"this.descriptionCtrl.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                            <mat-error *ngIf=\\\"!this.descriptionCtrl.errors?.required && this.descriptionCtrl.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/250</mat-hint>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </mat-card>\\n            <mat-card class=\\\"mt-4 mb-4\\\" formGroupName=\\\"parameters_schema\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                <div class=\\\"row mb-2\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Frecuencia</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"frequency\\\">\\n                            <mat-option value=\\\"Mensual\\\">Mensual</mat-option>\\n                            <mat-option value=\\\"Trimestral\\\">Trimestral</mat-option>\\n                            <mat-option value=\\\"Semestral\\\">Semestral</mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"isAcum\\\">\\n                            <mat-option value=\\\"Si\\\">Si</mat-option>\\n                            <mat-option value=\\\"No\\\">No</mat-option>\\n                        </mat-select>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\" (click)=\\\"showData()\\\">\\n                        <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"unit\\\">\\n                            <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                            <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                            <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                        </mat-select>\\n                    </div>\\n                </div>\\n            </mat-card>\\n        </div>\\n\\n        <!--Esquema Indicador Compuesto-->\\n        <ng-template #EsquemaCompuesto>\\n            <mat-card class=\\\"mt-4\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Esquema de la Ficha</mat-card-title>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Frecuencia</div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                    </div>\\n                </div>\\n                <div formArrayName=\\\"record_schema\\\" *ngFor=\\\"let field of this.record_schemaCtrl.controls; let i = index\\\">\\n                    <div class=\\\"row mb-3\\\" [formGroupName]=\\\"i\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"frequency\\\">\\n                                <mat-option value=\\\"Mensual\\\">Mensual</mat-option>\\n                                <mat-option value=\\\"Trimestral\\\">Trimestral</mat-option>\\n                                <mat-option value=\\\"Semestral\\\">Semestral</mat-option>\\n                            </mat-select>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <mat-select class=\\\"schema-input full-width\\\" formControlName=\\\"unit\\\">\\n                                <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <mat-card-actions>\\n                    <div class=\\\"flex mb-4\\\">\\n                        <span class=\\\"fill-remaining-space\\\"></span>\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addField()\\\"><mat-icon>add</mat-icon> AGREGAR</button>\\n                    </div>\\n                </mat-card-actions>\\n            </mat-card>\\n\\n            <!--Par√°metros Indicador Compuesto Sin Diferenciaci√≥n-->\\n            <mat-card class=\\\"mt-4\\\" *ngIf=\\\"!this.antiquity_diffCtrl.value; else ConDiferenciacion\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                <div class=\\\"row mb-2\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Ponderaci√≥n (%)</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                    </div>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"mb-1\\\" formArrayName=\\\"parameters_schema\\\" *ngFor=\\\"let parameter of this.parameterCompuesto.controls; let i = index\\\">\\n                    <div class=\\\"row mb-3\\\" [formGroupName]=\\\"i\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\" formGroupName=\\\"weighing\\\">\\n                            <input type=\\\"number\\\" formControlName=\\\"weight\\\" class=\\\"schema-input full-width\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <mat-select formControlName=\\\"isAcum\\\" class=\\\"schema-input full-width\\\">\\n                                <mat-option value=\\\"S√≠\\\">S√≠</mat-option>\\n                                <mat-option value=\\\"No\\\">No</mat-option>\\n                            </mat-select>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <mat-select formControlName=\\\"unit\\\" class=\\\"schema-input full-width\\\">\\n                                <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                            </mat-select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <mat-card-actions>\\n                    <div class=\\\"flex mb-4 mt-4\\\">\\n                        <span class=\\\"fill-remaining-space\\\"></span>\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addParameter()\\\"><mat-icon>add</mat-icon> AGREGAR</button>\\n                    </div>\\n                </mat-card-actions>\\n            </mat-card>\\n\\n            <ng-template #ConDiferenciacion>\\n                <mat-card class=\\\"mt-4\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Par√°metros del Indicador</mat-card-title>\\n                    <div class=\\\"row mb-2\\\">\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Nombre</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Ponderaci√≥n (%)</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Acumulativo</div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"full-width text-sm-center\\\">Unidad</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mb-1\\\" formArrayName=\\\"parameters_schema\\\" *ngFor=\\\"let parameter of this.parameterCompuesto.controls; let i = index\\\">\\n                        <div class=\\\"row mb-3\\\" [formGroupName]=\\\"i\\\">\\n                            <div class=\\\"col-sm-3\\\">\\n                                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"schema-input full-width\\\">\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <div class=\\\"row\\\" formGroupName=\\\"weighing\\\">\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <input type=\\\"number\\\" formControlName=\\\"older\\\" class=\\\"schema-input full-width\\\">\\n                                    </div>\\n                                    <div class=\\\"col-sm-6\\\">\\n                                        <input type=\\\"number\\\" formControlName=\\\"newer\\\" class=\\\"schema-input full-width\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <mat-select formControlName=\\\"isAcum\\\" class=\\\"schema-input full-width\\\">\\n                                    <mat-option value=\\\"Si\\\">S√≠</mat-option>\\n                                    <mat-option value=\\\"No\\\">No</mat-option>\\n                                </mat-select>\\n                            </div>\\n                            <div class=\\\"col-sm-3\\\">\\n                                <mat-select formControlName=\\\"unit\\\" class=\\\"schema-input full-width\\\">\\n                                    <mat-option value=\\\"N√∫mero\\\">N√∫mero</mat-option>\\n                                    <mat-option value=\\\"Moneda\\\">Moneda</mat-option>\\n                                    <mat-option value=\\\"Porcentaje\\\">Porcentaje</mat-option>\\n                                </mat-select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-3\\\"></div>\\n                        <div class=\\\"col-sm-3\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"font-weight-lighter full-width text-center\\\">Antigua</div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"font-weight-lighter full-width text-center\\\">Nueva</div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-3\\\"></div>\\n                        <div class=\\\"col-sm-3\\\"></div>\\n                    </div>\\n                    <mat-card-actions>\\n                        <div class=\\\"flex mb-4 mt-4\\\">\\n                            <span class=\\\"fill-remaining-space\\\"></span>\\n                            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addParameter()\\\"><mat-icon>add</mat-icon> AGREGAR</button>\\n                        </div>\\n                    </mat-card-actions>\\n                </mat-card>\\n            </ng-template>\\n\\n            <!--Definici√≥n de los Par√°metros-->\\n            <mat-card class=\\\"mt-4 mb-4\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Definici√≥n de los Par√°metros</mat-card-title>\\n                <div class=\\\"definition-box mt-2 mb-4\\\">\\n                    <mat-list> \\n                        <span class=\\\"definition-column-label\\\">Par√°metro</span>\\n                        <li *ngFor=\\\"let parameter of this.parameterCompuesto.controls; let i = index\\\">\\n                            <button mat-flat-button type=\\\"button\\\" *ngIf=\\\"this.parameterSelected && i == this.parameterSelected; else NoSelected\\\" (click)=\\\"this.parameterSelected = i\\\" class=\\\"font-weight-lighter selected-parameter full-width\\\">{{parameter['controls'].name.value}}</button>\\n                            <ng-template #NoSelected>\\n                                <button mat-flat-button type=\\\"button\\\" (click)=\\\"this.parameterSelected = i\\\" class=\\\"font-weight-lighter full-width\\\">{{parameter['controls'].name.value}}</button>\\n                            </ng-template>\\n                        </li>\\n                    </mat-list>\\n                    <mat-list>\\n                        <span class=\\\"definition-column-label\\\">Campos de la Ficha:</span>\\n                        <div *ngIf=\\\"this.parameterSelected != null\\\">\\n                            <button mat-button type=\\\"button\\\" class=\\\"font-weight-lighter full-width\\\" (dblclick)=\\\"addFieldToDefinition(field['controls'].name.value)\\\" *ngFor=\\\"let field of this.record_schemaCtrl.controls\\\">{{field['controls'].name.value}}</button>\\n                        </div>\\n                    </mat-list>\\n                    <mat-list class=\\\"definition-column\\\">\\n                        <span class=\\\"definition-column-label\\\">Definici√≥n del Par√°metro</span>\\n                        <div class=\\\"definition-space\\\">\\n                            <mat-chip-list *ngIf=\\\"this.parameterSelected != null\\\" #chipList aria-label=\\\"Fields selection\\\">\\n                                <mat-chip *ngFor=\\\"let field of this.parameterCompuesto.controls[this.parameterSelected].controls.definition.controls; let i = index\\\" [selectable]=\\\"true\\\" [removable]=\\\"true\\\" (removed)=\\\"remove(i)\\\">\\n                                    {{field.value}}<mat-icon matChipRemove *ngIf=\\\"true\\\">cancel</mat-icon>\\n                                </mat-chip>\\n                            </mat-chip-list>\\n                        </div>\\n                        <div class=\\\"botonera flex justify-content-center\\\">\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator('+')\\\" class=\\\"botonera-btn mr-1\\\">+</button>\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator('-')\\\" class=\\\"botonera-btn mr-1\\\">-</button>\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator('*')\\\" class=\\\"botonera-btn mr-1\\\">*</button>\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator('/')\\\" class=\\\"botonera-btn mr-1\\\">/</button>\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator('(')\\\" class=\\\"botonera-btn mr-1\\\">(</button>\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator(')')\\\" class=\\\"botonera-btn mr-1\\\">)</button>\\n                            <button type=\\\"button\\\" (click)=\\\"addOperator('*100%')\\\" class=\\\"botonera-btn\\\">*100%</button>\\n                        </div>\\n                    </mat-list>\\n                </div>\\n            </mat-card>\\n\\n        </ng-template>\\n\\n        <app-button-group class=\\\"mt-4\\\" [formStatus]=\\\"false\\\" (cancel)=\\\"cancel()\\\" (save)=\\\"saveIndicator()\\\"></app-button-group>\\n\\n    </form>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<div class=\\\"flex justify-content-center full-width full-height\\\">\\n    <div class=\\\"align-self-center border border-radius\\\">\\n        <div class=\\\"card p-4\\\" id=\\\"login-box\\\">\\n            <img src=\\\"../../../../assets/images/logo-sisi-only.svg\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\">\\n            <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title text-center\\\">Inicio de Sesi√≥n</h5>\\n            </div>\\n            <form [formGroup]=\\\"this.LoginForm\\\" (ngSubmit)=\\\"login()\\\">\\n                <label class=\\\"sr-only\\\" for=\\\"Username\\\">Nombre de Usuario</label>\\n                <div class=\\\"mb-3 mr-sm-2\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <div class=\\\"input-group-text\\\" [ngClass]=\\\"{'invalidate-input': this.LoginForm.controls['username'].touched && this.LoginForm.controls['username'].invalid}\\\"><mat-icon>person</mat-icon></div>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'invalidate-input': this.LoginForm.controls['username'].touched && this.LoginForm.controls['username'].invalid}\\\" formControlName=\\\"username\\\" id=\\\"Username\\\" placeholder=\\\"Nombre de Usuario\\\">\\n                    </div>\\n                    <small class=\\\"validate-msg\\\" *ngIf=\\\"this.LoginForm.controls['username'].touched && this.LoginForm.controls['username'].invalid\\\">Este campo es obligatorio</small>\\n                </div>\\n                <label class=\\\"sr-only\\\" for=\\\"Password\\\">Contrase√±a</label>\\n                <div class=\\\"mb-4 mr-sm-2\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <div class=\\\"input-group-text\\\" [ngClass]=\\\"{'invalidate-input': this.LoginForm.controls['password'].touched && this.LoginForm.controls['password'].invalid}\\\"><mat-icon>lock</mat-icon></div>\\n                        </div>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'invalidate-input': this.LoginForm.controls['password'].touched && this.LoginForm.controls['password'].invalid}\\\" formControlName=\\\"password\\\" id=\\\"Password\\\" placeholder=\\\"Contrase√±a\\\">\\n                    </div>\\n                    <small class=\\\"validate-msg\\\" *ngIf=\\\"this.LoginForm.controls['password'].touched && this.LoginForm.controls['password'].errors?.required\\\">Este campo es obligatorio</small>\\n                    <small class=\\\"validate-msg\\\" *ngIf=\\\"this.LoginForm.controls['password'].errors?.minlength\\\">La contrase√±a debe tener al menos {{this.LoginForm.controls['password'].errors.minlength.requiredLength}} caracteres</small>\\n                </div>\\n                <div class=\\\"flex justify-content-center mt-4\\\">\\n                    <div>\\n                        <button mat-button-raised class=\\\"d-block full-width btn btn-primary align-content-center\\\" type=\\\"submit\\\" [disabled]=\\\"this.LoginForm.invalid\\\">INGRESAR</button>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","export default \"<app-sub-toolbar\\n    title=\\\"Nueva Organizaci√≥n\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [importantBack]=\\\"true\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <form [formGroup]=\\\"this.organizationForm\\\" (ngSubmit)=\\\"this.saveOrganization()\\\">\\n        <mat-card>\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Datos Generales</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre de la Organizaci√≥n\\\">\\n                        <mat-error *ngIf=\\\"this.nameCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                        <mat-error *ngIf=\\\"this.nameCtrl.errors?.exist\\\">Ya existe una organizaci√≥n con ese nombre</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" (blur)=\\\"setOlder($event)\\\" formControlName=\\\"foundation_date\\\" placeholder=\\\"Fecha de Constituci√≥n\\\">\\n                        <mat-hint>Ingrese la fecha en formato: <b>01/01/2019</b></mat-hint>\\n                        <mat-error *ngIf=\\\"this.foundation_dateCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                        <mat-error *ngIf=\\\"this.foundation_dateCtrl.errors?.pattern\\\">Ingrese una fecha v√°lida</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Sector:</mat-label>\\n                        <mat-select formControlName=\\\"sector\\\">\\n                          <mat-option *ngFor=\\\"let sector of this.Sectors\\\" [value]=\\\"sector\\\">\\n                              {{sector}}\\n                          </mat-option>\\n                          <button *ngIf=\\\"!this.newSector\\\" mat-button class=\\\"full-width\\\" (click)=\\\"this.addNewSector()\\\"><mat-icon>add</mat-icon> A√±adir nuevo...</button>\\n                        </mat-select>\\n                    </mat-form-field>    \\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Tipo de Organizaci√≥n:</mat-label>\\n                        <mat-select formControlName=\\\"type\\\">\\n                            <mat-option *ngFor=\\\"let type of this.Types\\\" [value]=\\\"type\\\">\\n                                {{type}}\\n                            </mat-option>\\n                            <button mat-button class=\\\"full-width\\\" (click)=\\\"this.addNewType()\\\"><mat-icon>add</mat-icon> A√±adir nuevo...</button>\\n                        </mat-select>\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>    \\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Legalizada:</mat-label>\\n                        <mat-select formControlName=\\\"legalized\\\">\\n                            <mat-option value=\\\"Si\\\">\\n                                S√≠\\n                            </mat-option>\\n                            <mat-option value=\\\"No\\\">\\n                                No\\n                            </mat-option>\\n                        </mat-select>\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>    \\n                </div>\\n            </div>\\n        </mat-card>\\n        <!--Parte de Localizaci√≥n-->\\n        <mat-card class=\\\"mt-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Localidad</mat-card-title>\\n            <div class=\\\"row\\\" formGroupName=\\\"ubication\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"canton\\\" placeholder=\\\"Cant√≥n\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"parroquia\\\" placeholder=\\\"Parroquia\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"recinto\\\" placeholder=\\\"Recinto\\\">\\n                        <mat-error>Este campo es obligatorio</mat-error>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card>\\n        <!--Parte de Beneficiarios-->\\n        <mat-card class=\\\"mt-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Socios y Baneficiarios</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-8\\\">\\n                    <div class=\\\"row\\\" formGroupName=\\\"partners\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <mat-form-field class=\\\"full-width\\\">\\n                                <input matInput type=\\\"text\\\" formControlName=\\\"mens\\\" placeholder=\\\"Socios Hombres\\\">\\n                                <mat-hint>Ingrese un n√∫mero, por favor.</mat-hint>\\n                                <mat-error *ngIf=\\\"this.mensCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                <mat-error *ngIf=\\\" this.mensCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica</mat-error>\\n                            </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <mat-form-field class=\\\"full-width\\\">\\n                                <input matInput type=\\\"text\\\" formControlName=\\\"womens\\\" placeholder=\\\"Socios Mujeres\\\">\\n                                <mat-hint>Ingrese un n√∫mero, por favor.</mat-hint>\\n                                <mat-error *ngIf=\\\"this.womensCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                <mat-error *ngIf=\\\"this.womensCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica</mat-error>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"beneficiaries\\\" placeholder=\\\"Beneficiarios\\\">\\n                        <mat-hint>Ingrese un n√∫mero, por favor.</mat-hint>\\n                        <mat-error *ngIf=\\\"this.organizationForm.controls['beneficiaries'].errors?.required\\\">Este campo es obligatorio</mat-error>\\n                        <mat-error *ngIf=\\\"this.organizationForm.controls['beneficiaries'].errors?.pattern\\\">Debe ingresar una cantidad num√©rica</mat-error>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card>\\n        <!--Clasificaci√≥n de la Organizaci√≥n en Nueva o Antigua-->\\n        <div class=\\\"text-center p-4 m-4\\\">\\n            La organizaci√≥n clasifica como <b *ngIf=\\\"!this.isOlder; else AntiguaTemplate\\\">Nueva</b><ng-template #AntiguaTemplate><b>Antigua</b></ng-template>\\n        </div>\\n\\n        <app-form-buttons [formGroup]=\\\"this.organizationForm\\\"></app-form-buttons>\\n\\n    </form>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar *ngIf=\\\"this.userRole == 'Administrador'\\\"\\n    [title]=\\\"this.Organization.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [buttons]=\\\"this.buttons\\\"\\n    [importantBack]=\\\"this.editMode\\\"\\n    [editButton]=\\\"!this.editMode\\\" (editClick)=\\\"this.edit()\\\">\\n</app-sub-toolbar>\\n\\n<app-sub-toolbar *ngIf=\\\"this.userRole == 'Coordinador'\\\"\\n    [title]=\\\"this.Organization.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [buttons]=\\\"[this.buttons[0]]\\\"\\n    [importantBack]=\\\"this.editMode\\\"\\n    [editButton]=\\\"!this.editMode\\\" (editClick)=\\\"this.edit()\\\">\\n</app-sub-toolbar>\\n\\n<app-sub-toolbar *ngIf=\\\"this.userRole != 'Administrador' && this.userRole != 'Coordinador'\\\"\\n    [title]=\\\"this.Organization.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [buttons]=\\\"[this.buttons[0]]\\\">\\n</app-sub-toolbar>\\n\\n    <div>\\n        <mat-tab-group mat-stretch-tabs class=\\\"full-height\\\"> \\n            <mat-tab label=\\\"Infomaci√≥n General\\\">\\n                <div class=\\\"container pb-3 pt-3 border-box\\\">\\n                    <form [formGroup]=\\\"this.organizationForm\\\" (ngSubmit)=\\\"this.updateOrganization()\\\">\\n                        <mat-card>\\n                            <mat-card-title class=\\\"font-weight-lighter\\\">Datos Generales</mat-card-title>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre de la Organizaci√≥n\\\">\\n                                        <mat-error *ngIf=\\\"this.nameCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <input matInput type=\\\"text\\\" (blur)=\\\"setOlder($event)\\\" formControlName=\\\"foundation_date\\\" placeholder=\\\"Fecha de Constituci√≥n\\\">\\n                                        <mat-hint>Ingrese la fecha en formato: <b>01/01/2019</b></mat-hint>\\n                                        <mat-error *ngIf=\\\"this.foundation_dateCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                        <mat-error *ngIf=\\\"this.foundation_dateCtrl.errors?.pattern\\\">Ingrese una fecha v√°lida</mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <mat-label>Sector:</mat-label>\\n                                        <mat-select formControlName=\\\"sector\\\">\\n                                        <mat-option value=\\\"Cacao\\\">\\n                                            Cacao\\n                                        </mat-option>\\n                                        <mat-option value=\\\"Agricultura\\\">\\n                                            Agricultura\\n                                        </mat-option>\\n                                        <mat-option value=\\\"Turismo\\\">\\n                                            Turismo\\n                                        </mat-option>\\n                                        <button mat-button><mat-icon>add</mat-icon> A√±adir nuevo...</button>\\n                                        </mat-select>\\n                                    </mat-form-field>    \\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <mat-label>Tipo de Organizaci√≥n:</mat-label>\\n                                        <mat-select formControlName=\\\"type\\\">\\n                                            <mat-option value=\\\"SFL\\\">\\n                                                SFL\\n                                            </mat-option>\\n                                            <mat-option value=\\\"Empresa\\\">\\n                                                Empresa\\n                                            </mat-option>\\n                                            <mat-option value=\\\"Asociaci√≥n\\\">\\n                                                Asociaci√≥n\\n                                            </mat-option>\\n                                            <button mat-button><mat-icon>add</mat-icon> A√±adir nuevo...</button>\\n                                        </mat-select>\\n                                        <mat-error>Este campo es obligatorio</mat-error>\\n                                    </mat-form-field>    \\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <mat-label>Legalizada:</mat-label>\\n                                        <mat-select formControlName=\\\"legalized\\\">\\n                                            <mat-option value=\\\"Si\\\">\\n                                                S√≠\\n                                            </mat-option>\\n                                            <mat-option value=\\\"No\\\">\\n                                                No\\n                                            </mat-option>\\n                                        </mat-select>\\n                                        <mat-error>Este campo es obligatorio</mat-error>\\n                                    </mat-form-field>    \\n                                </div>\\n                            </div>\\n                        </mat-card>\\n                        <!--Parte de Localizaci√≥n-->\\n                        <mat-card class=\\\"mt-4\\\">\\n                            <mat-card-title class=\\\"font-weight-lighter\\\">Localidad</mat-card-title>\\n                            <div class=\\\"row\\\" formGroupName=\\\"ubication\\\">\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <input matInput type=\\\"text\\\" formControlName=\\\"canton\\\" placeholder=\\\"Cant√≥n\\\">\\n                                        <mat-error>Este campo es obligatorio</mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <input matInput type=\\\"text\\\" formControlName=\\\"parroquia\\\" placeholder=\\\"Parroquia\\\">\\n                                        <mat-error>Este campo es obligatorio</mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <input matInput type=\\\"text\\\" formControlName=\\\"recinto\\\" placeholder=\\\"Recinto\\\">\\n                                        <mat-error>Este campo es obligatorio</mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                        </mat-card>\\n                        <!--Parte de Beneficiarios-->\\n                        <mat-card class=\\\"mt-4\\\">\\n                            <mat-card-title class=\\\"font-weight-lighter\\\">Socios y Baneficiarios</mat-card-title>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-8\\\">\\n                                    <div class=\\\"row\\\" formGroupName=\\\"partners\\\">\\n                                        <div class=\\\"col-sm-6\\\">\\n                                            <mat-form-field class=\\\"full-width\\\">\\n                                                <input matInput type=\\\"text\\\" formControlName=\\\"mens\\\" placeholder=\\\"Socios Hombres\\\">\\n                                                <mat-hint>Ingrese un n√∫mero, por favor.</mat-hint>\\n                                                <mat-error *ngIf=\\\"this.mensCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                                <mat-error *ngIf=\\\" this.mensCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica</mat-error>\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"col-sm-6\\\">\\n                                            <mat-form-field class=\\\"full-width\\\">\\n                                                <input matInput type=\\\"text\\\" formControlName=\\\"womens\\\" placeholder=\\\"Socios Mujeres\\\">\\n                                                <mat-hint>Ingrese un n√∫mero, por favor.</mat-hint>\\n                                                <mat-error *ngIf=\\\"this.womensCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                                <mat-error *ngIf=\\\"this.womensCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica</mat-error>\\n                                            </mat-form-field>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-4\\\">\\n                                    <mat-form-field class=\\\"full-width\\\">\\n                                        <input matInput type=\\\"text\\\" formControlName=\\\"beneficiaries\\\" placeholder=\\\"Beneficiarios\\\">\\n                                        <mat-hint>Ingrese un n√∫mero, por favor.</mat-hint>\\n                                        <mat-error *ngIf=\\\"this.organizationForm.controls['beneficiaries'].errors?.required\\\">Este campo es obligatorio</mat-error>\\n                                        <mat-error *ngIf=\\\"this.organizationForm.controls['beneficiaries'].errors?.pattern\\\">Debe ingresar una cantidad num√©rica</mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                        </mat-card>\\n                        <!--Clasificaci√≥n de la Organizaci√≥n en Nueva o Antigua-->\\n                        <div class=\\\"text-center p-4 m-4\\\">\\n                            La organizaci√≥n clasifica como <b *ngIf=\\\"!this.isOlder; else AntiguaTemplate\\\">Nueva</b><ng-template #AntiguaTemplate><b>Antigua</b></ng-template>\\n                        </div>\\n                        \\n                        <app-button-group *ngIf=\\\"this.editMode\\\" [formStatus]=\\\"this.organizationForm.pristine\\\" (save)=\\\"updateOrganization()\\\" (cancel)=\\\"onCancel()\\\" [formGroup]=\\\"this.organizationForm\\\"></app-button-group>\\n                        \\n                    </form>                    \\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"Proyectos Asociados\\\">\\n                <div class=\\\"container pb-3 pt-3 border-box\\\">\\n                    \\n                        <!--Secci√≥n de los Proyectos-->\\n                        <div class=\\\"row\\\" *ngIf=\\\"this.Organization.projects.length; else NoProjects\\\">\\n                            <div class=\\\"col-sm-4 mb-4\\\" *ngFor=\\\"let project of this.Organization.projects\\\">\\n                                <mat-card>\\n                                    <mat-card-title class=\\\"font-weight-lighter\\\">{{project.name}}</mat-card-title>\\n                                    <mat-divider></mat-divider>\\n                                    <mat-card-content>\\n                                        <mat-list>\\n                                            <li class=\\\"pt-2\\\">\\n                                                <span>\\n                                                    Fecha de Inicio: <span class=\\\"font-weight-lighter\\\">{{project.start_date}}</span>\\n                                                </span>\\n                                            </li>\\n                                            <li class=\\\"mt-2\\\">\\n                                                <span>\\n                                                    Ubicaci√≥n: <span class=\\\"font-weight-lighter\\\">{{project.ubication}}</span>\\n                                                </span>\\n                                            </li>\\n                                            <li class=\\\"mt-2\\\">\\n                                                <span>\\n                                                    Duraci√≥n: <span class=\\\"font-weight-lighter\\\">{{project.duration}} meses</span>\\n                                                </span>\\n                                            </li>\\n                                        </mat-list>\\n                                    </mat-card-content>\\n                                    <mat-card-actions>\\n                                        <div class=\\\"flex\\\">\\n                                            <span class=\\\"fill-remaining-space\\\"></span>\\n                                            <a mat-button [routerLink]=\\\"['/projects',project._id]\\\">DETALLES</a>\\n                                        </div>\\n                                    </mat-card-actions>\\n                                </mat-card>\\n                            </div>\\n                        </div>\\n                    \\n                        <ng-template #NoProjects>\\n                            <div class=\\\"full-height full-width flex justify-content-center align-items-center\\\">\\n                                <div>\\n                                    <h2 class=\\\"text-center font-weight-lighter\\\">No hay Proyectos registrados</h2>\\n                                    <div class=\\\"font-weight-lighter\\\">\\n                                        Para agregar un nuevo proyecto dale click al boton \\\"Agregar\\\" de la esquina superior derecha.\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </ng-template>\\n                </div>\\n            </mat-tab>\\n            <mat-tab label=\\\"Documentos\\\">\\n                <div class=\\\"container pb-3 pt-3 border-box\\\">\\n                    <app-upload-box [organization_files]=\\\"this.Organization.files\\\" [organization_id]=\\\"this.Organization._id\\\" [organization_name]=\\\"this.Organization.name\\\"></app-upload-box>\\n                </div>\\n            </mat-tab>\\n        </mat-tab-group>\\n    </div>\\n\\n    <app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar\\n    title=\\\"Organizaciones\\\"\\n    [addButton]=\\\"(this.userRole == 'T√©cnico' || this.userRole == 'Coordinador' || this.userRole == 'Administrador')\\\"\\n    [backButton]=\\\"false\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"this.Organizations.length; else NoOrganizations\\\">\\n        <div class=\\\"mb-4 col-sm-4\\\" *ngFor=\\\"let organization of this.Organizations\\\">\\n            <mat-card>\\n                <mat-card-title class=\\\"font-weight-lighter\\\">{{organization.name}}</mat-card-title>\\n                <mat-card-subtitle>{{organization.type}}</mat-card-subtitle>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <mat-list>\\n                        <li class=\\\"pt-2\\\">\\n                            <span>\\n                                Sector: <span class=\\\"font-weight-lighter\\\">{{organization.sector}}</span>\\n                            </span>\\n                        </li>\\n                        <li class=\\\"mt-2\\\">\\n                            <span>\\n                                Ubicaci√≥n: <span class=\\\"font-weight-lighter\\\">{{organization.ubication.parroquia}}, {{organization.ubication.canton}}</span>\\n                            </span>\\n                        </li>\\n                        <li class=\\\"mt-2\\\">\\n                            <span>\\n                                Fecha de constituci√≥n: <span class=\\\"font-weight-lighter\\\">{{organization.foundation_date}}</span>\\n                            </span>\\n                        </li>\\n                    </mat-list>\\n                </mat-card-content>\\n                <div class=\\\"flex\\\">\\n                    <span class=\\\"fill-remaining-space\\\"></span>\\n                    <button mat-button [routerLink]=\\\"[organization._id,'partners']\\\">SOCIOS</button>\\n                    <button mat-button [routerLink]=\\\"[organization._id]\\\">DETALLES</button>\\n                </div>\\n            </mat-card>\\n        </div>\\n    </div>\\n\\n    <ng-template #NoOrganizations>\\n        <div class=\\\"full-height full-width flex justify-content-center align-items-center\\\">\\n            <div>\\n                <h2 class=\\\"text-center font-weight-lighter\\\">No hay Organizaciones registradas</h2>\\n                <div class=\\\"font-weight-lighter\\\">\\n                    Para agregar organizaciones dale click al boton \\\"Agregar\\\" de la esquina superior derecha.\\n                </div>\\n            </div>\\n        </div>\\n    </ng-template>\\n\\n</div>\\n\"","export default \"<app-sub-toolbar\\n    title=\\\"{{this.Organization.name}}: Hist√≥rico de Socios\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\">\\n</app-sub-toolbar>\\n\\n<div id=\\\"partners-historic\\\">\\n    <mat-tab-group mat-align-tabs=\\\"center\\\" class=\\\"full-width\\\">\\n        <mat-tab label=\\\"Gr√°fico\\\">\\n            <!--Graphic of Partner's Evolution-->\\n            <div id=\\\"graphic\\\" class=\\\"mt-307032017\\\">\\n                <div class=\\\"flex justify-content-center\\\">\\n                    <ngx-charts-line-chart *ngIf=\\\"this.multi\\\"\\n                        [view]=\\\"view\\\"\\n                        [scheme]=\\\"colorScheme\\\"\\n                        [legend]=\\\"legend\\\"\\n                        [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                        [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                        [xAxis]=\\\"xAxis\\\"\\n                        [yAxis]=\\\"yAxis\\\"\\n                        [xAxisLabel]=\\\"xAxisLabel\\\"\\n                        [yAxisLabel]=\\\"yAxisLabel\\\"\\n                        [timeline]=\\\"timeline\\\"\\n                        [results]=\\\"multi\\\"\\n                        (select)=\\\"onSelect($event)\\\"\\n                        (activate)=\\\"onActivate($event)\\\"\\n                        (deactivate)=\\\"onDeactivate($event)\\\">\\n                    </ngx-charts-line-chart>\\n                </div>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Tabla\\\" class=\\\"full-width\\\">\\n            <!--Table-->\\n            <div class=\\\"mat-elevation-z8 full-width\\\">\\n                <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"full-width\\\">\\n              \\n                  <!-- Position Column -->\\n                  <ng-container matColumnDef=\\\"number\\\">\\n                    <th mat-header-cell *matHeaderCellDef> No. </th>\\n                    <td mat-cell *matCellDef=\\\"let registry\\\"> {{registry.number}} </td>\\n                  </ng-container>\\n              \\n                  <!-- Name Column -->\\n                  <ng-container matColumnDef=\\\"period\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Periodo </th>\\n                    <td mat-cell *matCellDef=\\\"let registry\\\"> {{registry.period}} </td>\\n                  </ng-container>\\n              \\n                  <!-- Weight Column -->\\n                  <ng-container matColumnDef=\\\"mens\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Socios Hombres </th>\\n                    <td mat-cell *matCellDef=\\\"let registry\\\"> {{registry.mens}} </td>\\n                  </ng-container>\\n              \\n                  <!-- Symbol Column -->\\n                  <ng-container matColumnDef=\\\"womens\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Socios Mujeres </th>\\n                    <td mat-cell *matCellDef=\\\"let registry\\\"> {{registry.womens}} </td>\\n                  </ng-container>\\n\\n                  <ng-container matColumnDef=\\\"total\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Total Socios </th>\\n                    <td mat-cell *matCellDef=\\\"let registry\\\"> {{registry.total}} </td>\\n                  </ng-container>\\n              \\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                </table>\\n              \\n                <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n              </div>\\n              \\n        </mat-tab>\\n    </mat-tab-group>\\n</div>\"","export default \"<app-sub-toolbar\\n    title=\\\"{{this.Organization.name}}: Socios\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\"\\n    [buttons]=\\\"this.buttons\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n\\n    <div>\\n        <mat-card>\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Socios Iniciales</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput disabled [ngModel]=\\\"this.Organization.partners.mens\\\" type=\\\"text\\\" placeholder=\\\"Socios Hombres\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput disabled [ngModel]=\\\"this.Organization.partners.womens\\\" type=\\\"text\\\" placeholder=\\\"Socios Mujeres\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput disabled [ngModel]=\\\"this.Organization.partners.mens + this.Organization.partners.womens\\\" type=\\\"text\\\" placeholder=\\\"Total Socios\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <mat-divider></mat-divider>\\n            <mat-card-title class=\\\"font-weight-lighter mt-2\\\">Socios Actuales</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput disabled [ngModel]=\\\"this.ActualPartners.mens\\\" type=\\\"text\\\" placeholder=\\\"Socios Hombres\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput disabled [ngModel]=\\\"this.ActualPartners.womens\\\" type=\\\"text\\\" placeholder=\\\"Socios Mujeres\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput disabled [ngModel]=\\\"this.ActualPartners.total\\\" type=\\\"text\\\" placeholder=\\\"Total Socios\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card>\\n        <mat-card class=\\\"mt-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter mt-2\\\">Nuevo Registro</mat-card-title>\\n            <form [formGroup]=\\\"this.PartnerForm\\\" (ngSubmit)=\\\"this.save()\\\" novalidate>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"mens\\\" placeholder=\\\"Socios Hombres\\\">\\n                            <mat-error *ngIf=\\\"this.mensCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"this.mensCtrl.errors?.pattern\\\">Ingrese una cantidad v√°lida, por favor.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"womens\\\" placeholder=\\\"Socios Mujeres\\\">\\n                            <mat-error *ngIf=\\\"this.womensCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"this.womensCtrl.errors?.pattern\\\">Ingrese una cantidad v√°lida, por favor.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input disabled matInput type=\\\"text\\\" value=\\\"{{this.toNumber(this.mensCtrl.value) + this.toNumber(this.womensCtrl.value)}}\\\" placeholder=\\\"Total Socios\\\">\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <app-form-buttons (cancel)=\\\"this.cancel()\\\" [formGroup]=\\\"this.PartnerForm\\\"></app-form-buttons>\\n            </form>\\n        </mat-card>\\n    </div>\\n\\n</div>\"","export default \"<app-sub-toolbar\\n    title=\\\"Nuevo Proyecto\\\"\\n    [addButton]=\\\"false\\\"\\n    [backButton]=\\\"true\\\"\\n    [importantBack]=\\\"true\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <form [formGroup]=\\\"ProjectFormGroup\\\">\\n        <mat-card>\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Datos Generales</mat-card-title> \\n            <div class=\\\"row pb-1\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Nombre del Proyecto\\\">\\n                        <mat-error *ngIf=\\\"this.nameCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                        <mat-error *ngIf=\\\"this.nameCtrl.errors?.exist\\\">Ya existe un proyecto con ese nombre</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"start_date\\\" placeholder=\\\"Fecha de Inicio\\\">\\n                        <mat-hint>Ingrese la fecha en formato: <b>01/01/2019</b></mat-hint>\\n                        <mat-error *ngIf=\\\"this.start_dateCtrl.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                        <mat-error *ngIf=\\\"this.start_dateCtrl.errors?.pattern\\\">Ingrese una fecha v√°lida</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"duration\\\" placeholder=\\\"Duraci√≥n\\\">\\n                        <mat-hint>Ingrese la duraci√≥n del proyecto en meses.</mat-hint>\\n                        <mat-error *ngIf=\\\"this.durationCtrl.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"this.durationCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica.</mat-error>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card>                    \\n        \\n        <mat-card class=\\\"mt-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Presupuesto, Localidad y Beneficiarios</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <div formGroupName=\\\"budgets\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"total_inicial\\\" placeholder=\\\"Presupuesto Total Inicial\\\">\\n                            <mat-error *ngIf=\\\"this.budgetCtrl.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"this.budgetCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"ubication\\\" placeholder=\\\"Ubicaci√≥n (Cant√≥n)\\\">\\n                        <mat-error *ngIf=\\\"this.ubicationCtrl.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"!this.ubicationCtrl.errors?.required && this.ubicationCtrl.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <div formGroupName=\\\"beneficiaries\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"number\\\" placeholder=\\\"N√∫mero de Beneficiarios\\\">\\n                            <mat-error *ngIf=\\\"this.beneficiariesNumberCtrl.errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"this.beneficiariesNumberCtrl.errors?.pattern\\\">Debe ingresar una cantidad num√©rica.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </div>\\n        </mat-card>\\n        \\n        <mat-card class=\\\"mt-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Objetivos y Resultados</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <textarea matInput type=\\\"text\\\" formControlName=\\\"gen_objective\\\" placeholder=\\\"Objetivo General\\\"></textarea>\\n                        <mat-error *ngIf=\\\"this.objGeneralCtrl.errors?.required\\\">El Objetivo General es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"!this.objGeneralCtrl.errors?.required && this.objGeneralCtrl.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <mat-form-field class=\\\"full-width\\\" formArrayName=\\\"esp_objectives\\\" *ngFor=\\\"let objetivo of this.objEspeCtrl.controls; let i = index\\\">\\n                        <div *ngIf=\\\"i != 0\\\" class=\\\"form-control-equis\\\">\\n                            <mat-icon (click)=\\\"this.deleteObjective(i)\\\">clear</mat-icon>\\n                        </div>\\n                        <textarea matInput type=\\\"text\\\" [formControlName]=\\\"i\\\" placeholder=\\\"Objetivo Espec√≠fico\\\"></textarea>\\n                        <mat-error *ngIf=\\\"this.objEspeCtrl.controls[i].errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"!this.objEspeCtrl.controls[i].errors?.required && this.objEspeCtrl.controls[i].errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                    </mat-form-field>\\n                    <div class=\\\"flex\\\">\\n                        <span class=\\\"fill-remaining-space\\\"></span>\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addObjective()\\\">A√±adir Objetivo</button>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                    <mat-form-field class=\\\"full-width\\\" formArrayName=\\\"results\\\" *ngFor=\\\"let resultado of this.resultsCtrl.controls; let i = index\\\">\\n                        <div *ngIf=\\\"i != 0\\\" class=\\\"form-control-equis\\\">\\n                            <mat-icon (click)=\\\"this.deleteResult(i)\\\">clear</mat-icon>\\n                        </div>\\n                        <textarea matInput type=\\\"text\\\" [formControlName]=\\\"i\\\" placeholder=\\\"Resultado\\\"></textarea>\\n                        <mat-error *ngIf=\\\"this.resultsCtrl.controls[i].errors?.required\\\">Este campo es obligatorio.</mat-error>\\n                        <mat-error *ngIf=\\\"!this.resultsCtrl.controls[i].errors?.required && this.resultsCtrl.controls[i].errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                    </mat-form-field>\\n                    <div class=\\\"flex\\\">\\n                        <span class=\\\"fill-remaining-space\\\"></span>\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.addResult()\\\">A√±adir Resultado</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </mat-card>\\n                \\n        <mat-card class=\\\"mt-4\\\">\\n\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Financiadores, Indicadores y Organizaciones</mat-card-title>\\n            <div class=\\\"row mt-3\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <div>\\n                        <div class=\\\"project-list-title\\\">\\n                            Financiadores\\n                        </div>\\n                        <mat-selection-list class=\\\"projects-selection-list\\\">      \\n                            <mat-list-option class=\\\"font-weight-lighter\\\" *ngFor=\\\"let funder of this.Funders\\\" [value]=\\\"funder._id\\\" (click)=\\\"OnFundersListChange(funder._id)\\\">{{funder.name}}</mat-list-option>\\n                        </mat-selection-list>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <div>\\n                        <div class=\\\"project-list-title\\\">\\n                            Indicadores\\n                        </div>\\n                        <mat-selection-list class=\\\"projects-selection-list\\\" #IndicatorsList>\\n                            <mat-list-option class=\\\"font-weight-lighter\\\" *ngFor=\\\"let indicator of this.Indicators\\\" [value]=\\\"indicator._id\\\" (click)=\\\"OnIndicatorsListChange(indicator._id,IndicatorsList)\\\">{{indicator.name}}</mat-list-option>  \\n                        </mat-selection-list>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <div>\\n                        <div class=\\\"project-list-title\\\">\\n                            Organizaciones\\n                        </div>\\n                        <mat-selection-list class=\\\"projects-selection-list\\\" #OrganizationsList>\\n                            <mat-list-option class=\\\"font-weight-lighter\\\" *ngFor=\\\"let organization of this.Organizations\\\" [value]=\\\"organization._id\\\" (click)=\\\"OnOrganizationsListChange(organization._id,OrganizationsList)\\\">{{organization.name}}</mat-list-option>\\n                        </mat-selection-list>\\n                    </div>\\n                </div>\\n            </div>\\n        </mat-card>\\n                \\n        <mat-card class=\\\"mt-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">L√≠nea Base y Metas</mat-card-title>\\n            <mat-card-content>\\n                <div *ngIf=\\\"!this.goalsCtrl.length; else LineaBaseSchema\\\" class=\\\"col-sm-12 mt-3 mb-3 font-weight-lighter text-center\\\">No ha seleccionado ning√∫n Indicador ni Organizaci√≥n</div>\\n                <ng-template #LineaBaseSchema>\\n                    <div class=\\\"mt-3 mb-3 full-width font-weight-lighter\\\">\\n                        <div formArrayName=\\\"goals\\\" *ngFor=\\\"let indicator of this.goalsCtrl.controls; let i = index\\\">\\n                            <h5 [ngClass]=\\\"{'pt-3': i}\\\" class=\\\"font-weight-lighter\\\">{{indicator.get('indicator').value}}</h5>\\n                            <div [formGroupName]=\\\"i\\\">\\n                                <div formArrayName=\\\"organizations\\\" class=\\\"mb-2\\\" *ngFor=\\\"let organization of indicator.get('organizations')['controls']; let j = index\\\">\\n                                    <h6 class=\\\"mt-3\\\">{{organization.get('organization').value}}</h6>\\n                                    <div class=\\\"table-container\\\" [formGroupName]=\\\"j\\\">\\n                                        <table class=\\\"baseline-table\\\">\\n                                            <tr>\\n                                                <th class=\\\"sticky\\\"></th>\\n                                                <th *ngFor=\\\"let parameter of this.indicatorsSelected[i].parameters\\\">{{parameter.name}}</th>\\n                                            </tr>\\n                                            <tr>\\n                                                <td class=\\\"sticky\\\">\\n                                                    <div>L√≠nea Base</div>\\n                                                    <div>Meta (1er a√±o)</div>\\n                                                </td>\\n                                                <td formArrayName=\\\"parameters\\\" *ngFor=\\\"let parameter of organization.get('parameters')['controls']; let k = index\\\">\\n                                                    <div [formGroupName]=\\\"k\\\">\\n                                                        <input type=\\\"text\\\" class=\\\"full-width font-weight-lighter\\\" formControlName=\\\"baseline\\\" placeholder=\\\"L√≠nea Base\\\">\\n                                                        <input type=\\\"text\\\" class=\\\"full-width font-weight-lighter\\\" formControlName=\\\"goal\\\" placeholder=\\\"Meta Anual\\\">\\n                                                    </div>\\n                                                </td>\\n                                            </tr>\\n                                        </table>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <mat-divider *ngIf=\\\"i != this.goalsCtrl.length - 1\\\"></mat-divider>\\n                        </div>\\n                    </div>\\n                </ng-template>\\n            </mat-card-content>\\n        </mat-card>\\n        \\n        <mat-card class=\\\"mt-4 mb-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Lista de Beneficiarios</mat-card-title>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <input type=\\\"file\\\" placeholder=\\\"Elegir Archivo\\\" (change)=\\\"prepareBeneficiariesList($event)\\\" class=\\\"form-control-file\\\">\\n                </div>\\n            </div>\\n        </mat-card>\\n\\n        <app-button-group (cancel)=\\\"true\\\" (save)=\\\"createProject()\\\" [formStatus]=\\\"false\\\"></app-button-group>\\n                   \\n    </form>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar *ngIf=\\\"this.userRole == 'Administrador'\\\"\\n    [title]=\\\"this.Project.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [buttons]=\\\"[this.DeleteBtn]\\\"\\n    [addButton]=\\\"false\\\">\\n</app-sub-toolbar>\\n\\n<app-sub-toolbar *ngIf=\\\"this.userRole != 'Administrador'\\\"\\n    [title]=\\\"this.Project.name\\\"\\n    [backButton]=\\\"true\\\"\\n    [addButton]=\\\"false\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"full-height\\\">\\n    <mat-tab-group mat-stretch-tabs class=\\\"full-height\\\"> \\n        <mat-tab label=\\\"Infomaci√≥n General\\\">\\n            <div class=\\\"container pb-3 pt-3 border-box\\\">\\n                <mat-card>\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Generales</mat-card-title>\\n                    <mat-divider></mat-divider>\\n                    <div class=\\\"mt-3 mb-3 row\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Nombre:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.name}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Fecha de Inicio:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.start_date}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Ubicaci√≥n (cant√≥n):</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.ubication}}</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mb-3 row\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Duraci√≥n del Proyecto:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.duration}} meses</span>\\n                        </div>\\n                    </div>\\n                    <mat-divider></mat-divider>\\n                    <div class=\\\"pt-3\\\">\\n                        <small class=\\\"d-block full-width\\\">Objetivo General:</small>\\n                        <p class=\\\"font-weight-lighter\\\">{{this.Project.gen_objective}}</p>\\n                    </div>\\n                    <div class=\\\"mt-3 mb-3\\\" *ngFor=\\\"let objetive of this.Project.esp_objectives; let i = index\\\">\\n                        <small class=\\\"d-block full-width\\\">Objetivo Espec√≠fico {{i+1}}:</small>\\n                        <span class=\\\"font-weight-lighter\\\">{{objetive}}</span>\\n                    </div>\\n                    <mat-divider></mat-divider>\\n                    <div class=\\\"pt-3\\\">\\n                        <div class=\\\"mb-3\\\" *ngFor=\\\"let result of this.Project.results; let i = index\\\">\\n                            <small class=\\\"d-block full-width\\\">Resultado {{i+1}}:</small>\\n                            <p class=\\\"font-weight-lighter\\\">{{result}}</p>\\n                        </div>\\n                    </div>\\n                    <mat-divider></mat-divider>\\n                    <div class=\\\"row pt-3\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                            <small class=\\\"d-block full-width\\\">N√∫mero de Beneficiarios:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.beneficiaries.number}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <small class=\\\"d-block full-width\\\">Listado de Beneficiarios:</small>\\n                            <div *ngIf=\\\"this.File == undefined; else IfThereFile\\\">\\n                                <img src=\\\"../../../../../assets/images/logo-sisi-only.svg\\\" width=\\\"50px\\\">\\n                                Cargando...\\n                            </div>\\n                            <ng-template #IfThereFile>\\n                                <a [href]=\\\"'http://64.227.8.162:3000/'+ this.File.file\\\" target=\\\"blank\\\" [download]=\\\"this.File.name+this.File.ext\\\" mat-raised-button color=\\\"primary\\\" class=\\\"font-weight-lighter\\\">DESCARGAR</a>\\n                            </ng-template>\\n                        </div>\\n                    </div>\\n                </mat-card>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Presupuesto\\\">\\n            <div class=\\\"container pb-3 border-box pt-3 \\\">\\n                <mat-card>\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Presupuesto</mat-card-title>\\n                    <mat-divider></mat-divider>\\n                    <div class=\\\"mt-3 mb-3 row\\\">\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Presupuesto Total Inicial:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.budgets.total_inicial | currency}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Presupuesto Total Final:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.Project.budgets.total_final | currency}}</span>\\n                        </div>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <small class=\\\"d-block full-width\\\">Presupuesto Ejecutado:</small>\\n                            <span class=\\\"font-weight-lighter\\\">{{this.executed_budget.value | currency}}</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mt-3 flex\\\" *ngIf=\\\"this.userRole == 'Administrador'\\\">\\n                        <div class=\\\"fill-remaining-space\\\"></div>\\n                        <button mat-raised-button color=\\\"primary\\\" class=\\\"font-weight-lighter mr-2\\\" (click)=\\\"this.updateBudget()\\\">Registrar cambio en presupuesto</button>\\n                        <button mat-raised-button color=\\\"primary\\\" class=\\\"font-weight-lighter\\\" (click)=\\\"this.updateExecuted()\\\">Actualizar presupuesto ejecutado</button>\\n                    </div>\\n                </mat-card>\\n                <mat-card class=\\\"mt-4\\\">\\n                    <mat-card-title class=\\\"font-weight-lighter text-center\\\">Progreso</mat-card-title>\\n                \\n                    <div id=\\\"graphic\\\">\\n                        <div class=\\\"flex justify-content-center\\\">\\n                            <ngx-charts-line-chart *ngIf=\\\"this.multi\\\"\\n                                [view]=\\\"view\\\"\\n                                [scheme]=\\\"colorScheme\\\"\\n                                [legend]=\\\"legend\\\"\\n                                [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                                [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                                [xAxis]=\\\"xAxis\\\"\\n                                [yAxis]=\\\"yAxis\\\"\\n                                [xAxisLabel]=\\\"xAxisLabel\\\"\\n                                [yAxisLabel]=\\\"yAxisLabel\\\"\\n                                [timeline]=\\\"timeline\\\"\\n                                [results]=\\\"multi\\\"\\n                                (select)=\\\"onSelect($event)\\\"\\n                                (activate)=\\\"onActivate($event)\\\"\\n                                (deactivate)=\\\"onDeactivate($event)\\\">\\n                            </ngx-charts-line-chart>\\n                        </div>\\n                    </div>\\n\\n                </mat-card>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Organizaciones\\\">\\n            <div class=\\\"container pb-3 pt-3 border-box\\\">\\n                <div class=\\\"row\\\" *ngIf=\\\"this.Project.organizations.length; else NoOrganizations\\\">\\n                    <div class=\\\"mb-4 col-sm-4\\\" *ngFor=\\\"let organization of this.Project.organizations\\\">\\n                        <mat-card>\\n                            <mat-card-title class=\\\"font-weight-lighter\\\">{{organization.name}}</mat-card-title>\\n                            <mat-card-subtitle>{{organization.type}}</mat-card-subtitle>\\n                            <mat-divider></mat-divider>\\n                            <mat-card-content>\\n                                <mat-list>\\n                                    <li class=\\\"pt-2\\\">\\n                                        <span>\\n                                            Sector: <span class=\\\"font-weight-lighter\\\">{{organization.sector}}</span>\\n                                        </span>\\n                                    </li>\\n                                    <li class=\\\"mt-2\\\">\\n                                        <span>\\n                                            Ubicaci√≥n: <span class=\\\"font-weight-lighter\\\">{{organization.ubication.parroquia}}, {{organization.ubication.canton}}</span>\\n                                        </span>\\n                                    </li>\\n                                    <li class=\\\"mt-2\\\">\\n                                        <span>\\n                                            Fecha de constituci√≥n: <span class=\\\"font-weight-lighter\\\">{{organization.foundation_date}}</span>\\n                                        </span>\\n                                    </li>\\n                                </mat-list>\\n                            </mat-card-content>\\n                            <div class=\\\"flex\\\">\\n                                <span class=\\\"fill-remaining-space\\\"></span>\\n                                <button mat-button [routerLink]=\\\"['/organizations',organization._id,'partners']\\\">SOCIOS</button>\\n                                <button mat-button [routerLink]=\\\"['/organizations',organization._id]\\\">DETALLES</button>\\n                            </div>\\n                        </mat-card>\\n                    </div>\\n                </div>\\n\\n                <ng-template #NoOrganizations>\\n                    <div class=\\\"full-height full-width flex justify-content-center align-items-center\\\">\\n                        <div>\\n                            <h2 class=\\\"text-center font-weight-lighter\\\">No hay Organizaciones vinculadas con este proyecto.</h2>\\n                        </div>\\n                    </div>\\n                </ng-template>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Financiadores\\\" id=\\\"financiadores-box\\\" class=\\\"full-height\\\">\\n            <div class=\\\"container pb-3 pt-3 border-box full-height\\\">\\n                <div class=\\\"row full-height\\\" *ngIf=\\\"this.Project.funders.length; else NoFunders\\\">\\n                    <div class=\\\"col-sm-12 full-height\\\">\\n                        <mat-card class=\\\"full-height\\\">\\n                            <div class=\\\"flex flex-align-vertical\\\">\\n                                <mat-card-title class=\\\"font-weight-lighter\\\">Financiadores Vinculados</mat-card-title>\\n                                <span class=\\\"fill-remaining-space\\\"></span>\\n                                <button *ngIf=\\\"this.userRole == 'Administrador'\\\" mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.linkFunders()\\\">Vincular Financiador</button>\\n                            </div>\\n                            <mat-divider></mat-divider>\\n                            <mat-card-content class=\\\"full-height\\\">\\n                                <div class=\\\"pt-3 full-height\\\">\\n                                    <mat-list class=\\\"scroll-list-view full-height bordered-list\\\">\\n                                        <a mat-button *ngFor=\\\"let funder of this.Project.funders\\\" [routerLink]=\\\"['/funders',funder._id]\\\" class=\\\"full-width text-left font-weight-lighter\\\">{{funder.name}} - {{funder.place}}</a>\\n                                        <mat-divider></mat-divider>\\n                                    </mat-list>\\n                                </div>\\n                            </mat-card-content>\\n                        </mat-card>\\n                    </div>\\n                </div>\\n                <ng-template #NoFunders>\\n                    <div class=\\\"row full-height\\\">\\n                        <div class=\\\"col-sm-12\\\">\\n                            <h3 class=\\\"full-width font-weight-lighter mt-5 text-center\\\">No hay Financiadores Vinculados con este proyecto.</h3>\\n                            <div class=\\\"flex flex-center\\\">\\n                                <button *ngIf=\\\"this.userRole == 'Administrador'\\\" mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.linkFunders()\\\">Vincular Financiador</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </ng-template>\\n            </div>\\n        </mat-tab>\\n    </mat-tab-group>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar\\n    title=\\\"Proyectos\\\"\\n    [addButton]=\\\"this.userRole == 'Administrador' || this.userRole == 'Coordinador'\\\"\\n    [backButton]=\\\"false\\\">\\n</app-sub-toolbar> \\n\\n<div class=\\\"page-content\\\">\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"this.projects.length; else NoProjects\\\">\\n        <div class=\\\"col-sm-4 mb-4\\\" *ngFor=\\\"let project of this.projects\\\">\\n            <mat-card>\\n                <mat-card-title class=\\\"font-weight-lighter\\\">{{project.name}}</mat-card-title>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <mat-list>\\n                        <li class=\\\"pt-2\\\">\\n                            <span>\\n                                Fecha de Inicio: <span class=\\\"font-weight-lighter\\\">{{project.start_date}}</span>\\n                            </span>\\n                        </li>\\n                        <li class=\\\"mt-2\\\">\\n                            <span>\\n                                Ubicaci√≥n: <span class=\\\"font-weight-lighter\\\">{{project.ubication}}</span>\\n                            </span>\\n                        </li>\\n                        <li class=\\\"mt-2\\\">\\n                            <span>\\n                                Duraci√≥n: <span class=\\\"font-weight-lighter\\\">{{project.duration}} meses</span>\\n                            </span>\\n                        </li>\\n                    </mat-list>\\n                </mat-card-content>\\n                <mat-card-actions>\\n                    <div class=\\\"flex\\\">\\n                        <span class=\\\"fill-remaining-space\\\"></span>\\n                        <a mat-button [routerLink]=\\\"[project._id]\\\">DETALLES</a>\\n                    </div>\\n                </mat-card-actions>\\n            </mat-card>\\n        </div>\\n    </div>\\n\\n    <ng-template #NoProjects>\\n        <div class=\\\"full-height full-width flex justify-content-center align-items-center\\\">\\n            <div>\\n                <h2 class=\\\"text-center font-weight-lighter\\\">No hay Proyectos registrados</h2>\\n                <div class=\\\"font-weight-lighter\\\">\\n                    Para agregar un nuevo proyecto dale click al boton \\\"Agregar\\\" de la esquina superior derecha.\\n                </div>\\n            </div>\\n        </div>\\n    </ng-template>\\n\\n</div>\\n\"","export default \"<app-sub-toolbar\\n    title=\\\"Reporte\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <mat-card class=\\\"margin-bottom-50\\\">\\n        <mat-card-title class=\\\"font-weight-lighter\\\">Generar Reporte:</mat-card-title>\\n        <mat-divider></mat-divider>\\n        <mat-card-content>\\n            <div class=\\\"row pt-3\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Proyectos</mat-label>\\n                        <mat-select [(ngModel)]=\\\"this.selectedProject\\\" matNativeControl (valueChange)=\\\"onProjectSelected($event)\\\">\\n                            <mat-option *ngFor=\\\"let project of this.Projects\\\" [value]=\\\"project._id\\\">{{project.name}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Indicadores</mat-label>\\n                        <mat-select [disabled]=\\\"!this.selectedProject\\\" [(ngModel)]=\\\"this.selectedIndicator\\\" (valueChange)=\\\"onIndicatorSelected($event)\\\" matNativeControl>\\n                            <mat-option *ngFor=\\\"let indicator of this.Indicators\\\" [value]=\\\"indicator._id\\\">{{indicator.name}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Per√≠odo</mat-label>\\n                        <mat-select [disabled]=\\\"!this.PeriodSelectAvailable\\\" [(ngModel)]=\\\"this.selectedPeriod\\\" (valueChange)=\\\"onPeriodSelected($event)\\\" matNativeControl>\\n                            <mat-option *ngIf=\\\"this.AvailablePeriods && !this.AvailablePeriods.length\\\" value=\\\"none\\\">No existen registros</mat-option>\\n                            <mat-option *ngFor=\\\"let periodo of this.AvailablePeriods\\\" [value]=\\\"periodo\\\">{{periodo}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n\\n    <mat-card class=\\\"mt-4\\\" *ngIf=\\\"this.Status == 'loading'\\\">\\n        <div class=\\\"loading-box\\\">\\n            <div>\\n                <img src=\\\"../../../../../assets/images/logo-sisi-only.svg\\\" alt=\\\"\\\">\\n                <h4 class=\\\"font-weight-lighter text-center\\\">Cargando...</h4>\\n            </div>\\n        </div>\\n    </mat-card>\\n    \\n    <app-table-and-graphic *ngIf=\\\"this.SchemaTable\\\" [IndicatorTable]=\\\"this.IndicatorTable\\\" [ChartData]=\\\"this.ChartData\\\" [Project]=\\\"this.Project\\\" [Period]=\\\"this.selectedPeriod\\\" [ParametersTable]=\\\"this.ParametersTable\\\" [SchemaTable]=\\\"this.SchemaTable\\\" [Indicator]=\\\"this.Indicator\\\"></app-table-and-graphic>\\n\\n</div>\\n\"","export default \"<mat-card class=\\\"mt-4 report-box\\\">\\n    <mat-tab-group mat-stretch-tabs class=\\\"full-height\\\">\\n        <mat-tab label=\\\"Tablas\\\"> \\n            <mat-card class=\\\"report-mat-card\\\" *ngIf=\\\"this.SchemaTable\\\">\\n                <mat-card-title class=\\\"font-weight-lighter pt-2\\\">Ficha</mat-card-title>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <div class=\\\"pt-3\\\">\\n                        <p>Proyecto: <span class=\\\"font-weight-lighter\\\">{{this.SchemaTable.projectName}}</span></p>\\n                        <p>Indicador: <span class=\\\"font-weight-lighter\\\">{{this.Indicator.name}}</span></p>\\n                        <p>Periodo: <span class=\\\"font-weight-lighter\\\">{{this.Period}}</span></p>\\n                        <p>T√©cnico Responsable: <span class=\\\"font-weight-lighter\\\">{{this.Technic.name}} {{this.Technic.last_names}} - {{this.Technic.position}}</span></p>\\n                    </div>\\n                    <div class=\\\"table-container pt-3 pb-2\\\">\\n                        <table class=\\\"baseline-table\\\">\\n                            <tr>\\n                                <th class=\\\"sticky\\\"></th>\\n                                <th *ngFor=\\\"let field of this.SchemaTable.schema[0].fields\\\">{{field.name}}</th>\\n                            </tr>\\n                            <tr *ngFor=\\\"let organization of this.SchemaTable.schema\\\">\\n                                <td class=\\\"sticky\\\">{{organization.name}}</td>\\n                                <td *ngFor=\\\"let field of organization.fields\\\">\\n                                    <div class=\\\"full-width font-weight-lighter text-center table-box\\\">\\n                                        {{field.value}}\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>        \\n                </mat-card-content>\\n            </mat-card>\\n\\n            <mat-card class=\\\"report-mat-card\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">C√°lculo de los Par√°metros</mat-card-title>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <div class=\\\"table-container pt-3 pb-2\\\">\\n                        <table class=\\\"baseline-table\\\">\\n                            <tr>\\n                                <th class=\\\"sticky\\\"></th>\\n                                <th [matTooltip]=\\\"this.ParametersTable[0].parameters[i].definition\\\" matTooltipPosition=\\\"above\\\" *ngFor=\\\"let parameter of this.ParametersTable[0].parameters; let i = index\\\">{{parameter.name}}</th>\\n                            </tr>\\n                            <tr *ngFor=\\\"let organization of this.ParametersTable\\\">\\n                                <td class=\\\"sticky\\\">{{organization.name}}</td>\\n                                <td *ngFor=\\\"let parameter of organization.parameters\\\">\\n                                    <div *ngIf=\\\"parameter.unit == 'N√∫mero'\\\" class=\\\"full-width font-weight-lighter text-center table-box\\\">\\n                                        {{parameter.value}}\\n                                    </div>\\n                                    <div *ngIf=\\\"parameter.unit == 'Moneda'\\\" class=\\\"full-width font-weight-lighter text-center table-box\\\">\\n                                        {{parameter.value | currency}}\\n                                    </div>\\n                                    <div *ngIf=\\\"parameter.unit == 'Porcentaje'\\\" class=\\\"full-width font-weight-lighter text-center table-box\\\">\\n                                        {{parameter.value}}%\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>        \\n                </mat-card-content>\\n            </mat-card>\\n\\n            <mat-card class=\\\"report-mat-card\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">C√°lculo de Indicador</mat-card-title>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <div class=\\\"table-container pt-3 pb-2\\\">\\n                        <table class=\\\"baseline-table\\\">\\n                            <tr>\\n                                <th class=\\\"sticky\\\"></th>\\n                                <th *ngFor=\\\"let parameter of this.ParametersTable[0].parameters\\\">{{parameter.name}}</th>\\n                                <th>Total Indicador</th>\\n                            </tr>\\n                            <tr>\\n                                <th></th>\\n                                <th></th>\\n                            </tr>\\n                            <tr *ngFor=\\\"let organization of this.IndicatorTable; let i = index\\\">\\n                                <td class=\\\"sticky\\\">{{organization.name}}</td>\\n                                <td *ngFor=\\\"let parameter of this.IndicatorTable[i].parameters\\\">\\n                                    <div class=\\\"full-width font-weight-lighter text-center table-box\\\">\\n                                        {{parameter.ponderacion.medido}}% de {{parameter.ponderacion.establecido}}%\\n                                    </div>\\n                                </td>\\n                                <td>\\n                                    <div class=\\\"full-width font-weight-lighter text-center table-box\\\">\\n                                        {{organization.total_indicator_value}}%\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>        \\n                </mat-card-content>\\n            </mat-card>\\n\\n            <mat-card class=\\\"report-mat-card\\\">\\n                <mat-card-title class=\\\"font-weight-lighter\\\">Resultados Indicador</mat-card-title>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <div class=\\\"columns-2 pt-3 pb-2\\\">\\n                        <div class=\\\"flex flex-align-vertical\\\">\\n                            <span>Valor Promedio del Indicador: <span class=\\\"font-weight-lighter\\\">{{this.Promedio}}%</span></span>\\n                        </div>\\n                        <div class=\\\"flex flex-center flex-align-vertical\\\">\\n                            <div *ngIf=\\\"this.Promedio >= 80\\\" class=\\\"calification-detail\\\">\\n                                <div class=\\\"circulo green flex flex-align-vertical flex-center\\\">\\n                                    <span class=\\\"calification-letter\\\">{{this.Calificacion.letter}}</span>\\n                                </div>\\n                                <div class=\\\"flex flex-align-vertical ml-1\\\">\\n                                    <div>\\n                                        <span>{{this.Calificacion.message}}</span><br/>\\n                                        <span class=\\\"font-weight-lighter\\\">{{this.Calificacion.description}}</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div *ngIf=\\\"this.Promedio < 80 && this.Promedio >= 50\\\" class=\\\"calification-detail\\\">\\n                                <div class=\\\"circulo yellow flex flex-align-vertical flex-center\\\">\\n                                    <span class=\\\"calification-letter\\\">{{this.Calificacion.letter}}</span>\\n                                </div>\\n                                <div class=\\\"flex flex-align-vertical margin-left-10\\\">\\n                                    <div>\\n                                        <span>{{this.Calificacion.message}}</span><br/>\\n                                        <span class=\\\"font-weight-lighter\\\">{{this.Calificacion.description}}</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div *ngIf=\\\"this.Promedio < 50\\\" class=\\\"calification-detail\\\">\\n                                <div class=\\\"circulo red flex flex-align-vertical flex-center\\\">\\n                                    <span class=\\\"calification-letter\\\">{{this.Calificacion.letter}}</span>\\n                                </div>\\n                                <div class=\\\"flex flex-align-vertical margin-left-10\\\">\\n                                    <div>\\n                                        <span>{{this.Calificacion.message}}</span><br/>\\n                                        <span class=\\\"font-weight-lighter\\\">{{this.Calificacion.description}}</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </mat-card-content>\\n            </mat-card>\\n        </mat-tab>\\n\\n        <mat-tab label=\\\"Gr√°ficos\\\">\\n            <mat-card class=\\\"full-width\\\" *ngFor=\\\"let chart of this.ChartData; let i = index\\\">\\n                <mat-card-title *ngIf=\\\"i != this.ChartData.length - 1; else LastChartTitle\\\" class=\\\"font-weight-lighter\\\">Organizaci√≥n: {{chart.name}}</mat-card-title>\\n                <ng-template #LastChartTitle>\\n                    <mat-card-title class=\\\"font-weight-lighter\\\">Gr√°fico comparativo entre Organizaciones</mat-card-title>    \\n                </ng-template>\\n                <mat-divider></mat-divider>\\n                <mat-card-content>\\n                    <div class=\\\"pt-3 pb-2\\\">\\n                        <ngx-charts-bar-vertical-2d *ngIf=\\\"i != this.ChartData.length - 1; else LastChart\\\"\\n                            [view]=\\\"view\\\"\\n                            [scheme]=\\\"colorScheme\\\"\\n                            [results]=\\\"chart.multi\\\"\\n                            [gradient]=\\\"gradient\\\"\\n                            [xAxis]=\\\"showXAxis\\\"\\n                            [yAxis]=\\\"showYAxis\\\"\\n                            [legend]=\\\"showLegend\\\"\\n                            [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                            [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                            [xAxisLabel]=\\\"xAxisLabel\\\"\\n                            [yAxisLabel]=\\\"yAxisLabel\\\"\\n                            [legendTitle]=\\\"legendTitle\\\"\\n                            (select)=\\\"onSelect($event)\\\"\\n                            (activate)=\\\"onActivate($event)\\\"\\n                            (deactivate)=\\\"onDeactivate($event)\\\">\\n                        </ngx-charts-bar-vertical-2d>\\n                        <ng-template #LastChart>\\n                            <ngx-charts-bar-vertical\\n                                [view]=\\\"view\\\"\\n                                [scheme]=\\\"colorScheme\\\"\\n                                [results]=\\\"chart.single\\\"\\n                                [gradient]=\\\"gradient\\\"\\n                                [xAxis]=\\\"showXAxis\\\"\\n                                [yAxis]=\\\"showYAxis\\\"\\n                                [legend]=\\\"showLegend\\\"\\n                                [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n                                [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n                                [xAxisLabel]=\\\"xAxisLabelLast\\\"\\n                                [yAxisLabel]=\\\"yAxisLabelLast\\\"\\n                                (select)=\\\"onSelect($event)\\\">\\n                            </ngx-charts-bar-vertical>\\n                        </ng-template>\\n                    </div>\\n                </mat-card-content>\\n            </mat-card>\\n        </mat-tab>\\n    </mat-tab-group>\\n</mat-card>\"","export default \"<app-sub-toolbar\\n    title=\\\"Nuevo Usuario\\\"\\n    [backButton]=\\\"true\\\"\\n    [importantBack]=\\\"true\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <form [formGroup]=\\\"this.UserForm\\\" (ngSubmit)=\\\"createUser()\\\">\\n        <mat-card>\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Informaci√≥n General</mat-card-title>\\n            <mat-divider></mat-divider>\\n            <mat-card-content>\\n                <div class=\\\"pt-3 row\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Nombres\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.name.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.name.errors?.required && this.UserForm.controls.name.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"last_names\\\" placeholder=\\\"Apellidos\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.last_names.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.last_names.errors?.required && this.UserForm.controls.last_names.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"username\\\" placeholder=\\\"Nombre de Usuario\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.username.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.username.errors?.required && this.UserForm.controls.username.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.username.errors?.required && this.UserForm.controls.username.errors?.exists\\\">El nombre de usuario ingresado no est√° disponible.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"email\\\" placeholder=\\\"Correo Electr√≥nico\\\" type=\\\"email\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.email.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.email.errors?.required && this.UserForm.controls.email.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.email.errors?.required && !this.UserForm.controls.email.errors?.isBlank && this.UserForm.controls.email.errors?.pattern\\\">Ingrese una direcci√≥n de correo v√°lida.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"position\\\" placeholder=\\\"Puesto de Trabajo\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.position.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.position.errors?.required && this.UserForm.controls.position.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"this.UserForm.controls.role.value == 'Financiador' \\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <mat-label>Representa a</mat-label>\\n                            <mat-select formControlName=\\\"funder\\\">\\n                                <mat-option *ngFor=\\\"let funder of this.Funders\\\" [value]=\\\"funder._id\\\">{{funder.name}} - {{funder.place}}</mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.position.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.position.errors?.required && this.UserForm.controls.position.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n        <mat-card class=\\\"mt-4 mb-4\\\">\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Permisos y Seguridad</mat-card-title>\\n            <mat-divider></mat-divider>\\n            <mat-card-content>\\n                <div class=\\\"pt-3 row\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Ingresa una contrase√±a\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.password.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.password.errors?.required && this.UserForm.controls.password.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.password.errors?.minLength\\\">La contrase√±a debe tener al menos 10 caracteres.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput type=\\\"password\\\" formControlName=\\\"repassword\\\" placeholder=\\\"Repite la Contrase√±a\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.repassword.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.repassword.errors?.required && this.UserForm.controls.repassword.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.repassword.errors?.noMatch\\\">Las contrase√±as no coinciden.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <mat-label>Rol del Usuario</mat-label>\\n                            <mat-select formControlName=\\\"role\\\">\\n                                <mat-option value=\\\"T√©cnico\\\">T√©cnico</mat-option>\\n                                <mat-option value=\\\"Coordinador\\\">Coordinador</mat-option>\\n                                <mat-option value=\\\"Financiador\\\">Financiador</mat-option>\\n                                <mat-option value=\\\"Administrador\\\">Administrador</mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.role.errors?.required\\\">Debe seleccionar un rol de usuario</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n        <app-form-buttons [formGroup]=\\\"this.UserForm\\\"></app-form-buttons>\\n    </form>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar\\n    title=\\\"Usuario: {{this.User.name}} {{this.User.last_names}}\\\"\\n    [backButton]=\\\"true\\\"\\n    [importantBack]=\\\"this.EditMode\\\"\\n    [editButton]=\\\"!this.EditMode\\\"\\n    (editClick)=\\\"turnToEditMode()\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <form [formGroup]=\\\"this.UserForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n        <mat-card>\\n            <mat-card-title class=\\\"font-weight-lighter\\\">Informaci√≥n General</mat-card-title>\\n            <mat-divider></mat-divider>\\n            <mat-card-content>\\n                <div class=\\\"pt-3 row\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"name\\\" placeholder=\\\"Nombres\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.name.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.name.errors?.required && this.UserForm.controls.name.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"last_names\\\" placeholder=\\\"Apellidos\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.last_names.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.last_names.errors?.required && this.UserForm.controls.last_names.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"username\\\" placeholder=\\\"Nombre de Usuario\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.username.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.username.errors?.required && this.UserForm.controls.username.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.username.errors?.required && this.UserForm.controls.username.errors?.exists\\\">El nombre de usuario ingresado no est√° disponible.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"email\\\" placeholder=\\\"Correo Electr√≥nico\\\" type=\\\"email\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.email.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.email.errors?.required && this.UserForm.controls.email.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.email.errors?.required && !this.UserForm.controls.email.errors?.isBlank && this.UserForm.controls.email.errors?.pattern\\\">Ingrese una direcci√≥n de correo v√°lida.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"position\\\" placeholder=\\\"Puesto de Trabajo\\\" type=\\\"text\\\">\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.position.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.position.errors?.required && this.UserForm.controls.position.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <mat-label>Rol del Usuario</mat-label>\\n                            <mat-select formControlName=\\\"role\\\">\\n                                <mat-option value=\\\"T√©cnico\\\">T√©cnico</mat-option>\\n                                <mat-option value=\\\"Coordinador\\\">Coordinador</mat-option>\\n                                <mat-option value=\\\"Financiador\\\">Financiador</mat-option>\\n                                <mat-option value=\\\"Administrador\\\">Administrador</mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.role.errors?.required\\\">Debe seleccionar un rol de usuario</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"this.UserForm.controls.role.value == 'Financiador' \\\">\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <mat-label>Representa a</mat-label>\\n                            <mat-select formControlName=\\\"funder\\\">\\n                                <mat-option *ngFor=\\\"let funder of this.Funders\\\" [value]=\\\"funder._id\\\">{{funder.name}} - {{funder.place}}</mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"this.UserForm.controls.position.errors?.required\\\">Este campo es obligatorio</mat-error>\\n                            <mat-error *ngIf=\\\"!this.UserForm.controls.position.errors?.required && this.UserForm.controls.position.errors?.isBlank\\\">Este campo no puede quedar en blanco.</mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n        <div class=\\\"mt-4 mb-4\\\">\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"this.generateNewPassword()\\\">Generar Nueva Contrase√±a</button>\\n        </div>\\n        <app-button-group *ngIf=\\\"this.EditMode\\\" (cancel)=\\\"this.cancel()\\\" (save)=\\\"this.updateUser()\\\" [formStatus]=\\\"this.UserForm.invalid\\\"></app-button-group>\\n    </form>\\n</div>\\n<app-loading-view *ngIf=\\\"this.isWorking\\\" [message]=\\\"this.loadingMessage\\\"></app-loading-view>\"","export default \"<app-sub-toolbar\\n    title=\\\"Usuarios\\\"\\n    [addButton]=\\\"true\\\">\\n</app-sub-toolbar>\\n\\n<div class=\\\"page-content\\\">\\n    <mat-card class=\\\"mb-4\\\">\\n        <mat-card-title class=\\\"font-weight-lighter\\\">Buscar</mat-card-title>\\n        <mat-divider></mat-divider>\\n        <mat-card-content>\\n            <div class=\\\"pt-3 row\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <mat-form-field class=\\\"full-width\\\">\\n                        <mat-label>Buscar Por:</mat-label>\\n                        <mat-select [(ngModel)]=\\\"this.filter\\\">\\n                            <mat-option value=\\\"name\\\">Nombre</mat-option>\\n                            <mat-option value=\\\"last_names\\\">Apellido</mat-option>\\n                            <mat-option value=\\\"role\\\">Rol</mat-option>\\n                            <mat-option value=\\\"position\\\">Cargo</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                    <mat-form-field class=\\\"full-width\\\" *ngIf=\\\"this.filter == 'name' || this.filter == 'last_names' || this.filter == 'position'\\\">\\n                        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"this.search_term\\\" (keyup)=\\\"filterByTerm()\\\" placeholder=\\\"Ingrese el t√©rmino a buscar...\\\">\\n                    </mat-form-field>\\n                    <mat-form-field class=\\\"full-width\\\" *ngIf=\\\"this.filter == 'role'\\\">\\n                        <mat-label>Seleccione el Rol de Usuario</mat-label>\\n                        <mat-select (valueChange)=\\\"filterByRole($event)\\\">\\n                            <mat-option value=\\\"T√©cnico\\\">T√©cnico</mat-option>\\n                            <mat-option value=\\\"Coordinador\\\">Coordinador</mat-option>\\n                            <mat-option value=\\\"Financiador\\\">Financiador</mat-option>\\n                            <mat-option value=\\\"Administrador\\\">Administrador</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n    <mat-card>\\n        <mat-card-title class=\\\"font-weight-lighter\\\">Lista de Usuarios</mat-card-title>\\n        <mat-divider></mat-divider>\\n        <mat-card-content>\\n            <div class=\\\"pt-3\\\">\\n                <mat-list>\\n                    <li class=\\\"full-width text-left font-weight-lighter\\\" *ngFor=\\\"let user of this.filteredList\\\">\\n                        <div class=\\\"flex flex-align-vertical\\\">\\n                            <div>\\n                                {{user.name}} {{user.last_names}} - {{user.position}}\\n                            </div>\\n                            <span class=\\\"fill-remaining-space\\\"></span>\\n                            <a [routerLink]=\\\"user._id\\\" mat-button class=\\\"font-weight-lighter\\\"><mat-icon>remove_red_eye</mat-icon> DETALLES</a>\\n                            <button mat-button class=\\\"font-weight-lighter\\\"><mat-icon>delete</mat-icon>ELIMINAR</button>\\n                        </div>\\n                        <mat-divider></mat-divider>\\n                    </li>\\n                </mat-list>\\n            </div>\\n        </mat-card-content>\\n    </mat-card>\\n</div>\\n\"","export default \"<div class=\\\"flex\\\">\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button mat-button (click)=\\\"onCancel($event)\\\" type=\\\"reset\\\" class=\\\"mr-2\\\">CANCELAR</button>\\n    <button mat-raised-button [disabled]=\\\"this.formStatus\\\" color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"onSave()\\\">GUARDAR</button>\\n</div>\\n\"","export default \"<div class=\\\"flex\\\">\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button mat-button class=\\\"mr-3\\\" type=\\\"button\\\" (click)=\\\"this.cancel()\\\">CANCELAR</button>\\n    <button mat-raised-button [disabled]=\\\"this.formGroup.invalid\\\" color=\\\"primary\\\" type=\\\"submit\\\">GUARDAR</button>\\n</div>\"","export default \"<div class=\\\"full-height full-width flex justify-content-center align-items-center fadeIn\\\" id=\\\"loading-view\\\">\\n\\n    <div>\\n        <div class=\\\"full-width\\\">\\n            <img src=\\\"../../../../assets/images/logo-solo-white.svg\\\" class=\\\"mb-3\\\">\\n        </div>\\n        <h2 class=\\\"text-center font-weight-lighter\\\">{{this.message}}</h2>\\n    </div>\\n\\n</div>\"","export default \"<p>modals works!</p>\\n\"","export default \"<mat-toolbar>\\n    <button *ngIf=\\\"this.backButton\\\" mat-icon-button (click)=\\\"this.back()\\\"><mat-icon>arrow_back</mat-icon></button>\\n    <div>\\n        {{this.title}}\\n    </div>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button mat-raised-button class=\\\"mr-2\\\" *ngFor=\\\"let button of this.personalizedButtons\\\" (click)=\\\"button.handler()\\\"><mat-icon *ngIf=\\\"button.hasIcon\\\">{{button.icon}}</mat-icon>{{button.message}}</button>\\n    <button *ngIf=\\\"this.editButton\\\" (click)=\\\"this.edit()\\\" mat-raised-button><mat-icon>edit</mat-icon> EDITAR</button>\\n    <a [routerLink]=\\\"['add']\\\" *ngIf=\\\"this.addButton\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>add</mat-icon> AGREGAR</a>\\n</mat-toolbar> \"","export default \"<mat-card>\\n    <div class=\\\"flex\\\" id=\\\"upload-box-header\\\">\\n        <mat-card-title class=\\\"font-weight-lighter\\\">Documentos subidos</mat-card-title>\\n        <span class=\\\"fill-remaining-space\\\"></span>\\n        \\n        <input type=\\\"file\\\" (change)=\\\"onAddNewFile($event)\\\" multiple name=\\\"add-file\\\" id=\\\"add-file\\\" class=\\\"invisible\\\">\\n        <label for=\\\"add-file\\\"><i class=\\\"fas fa-file-upload\\\"></i> Seleccionar Archivo</label>\\n\\n    </div>\\n    <div id=\\\"upload-box\\\">\\n    \\n      <div id=\\\"upload-route-box\\\" class=\\\"p-1 flex align-items-center\\\">\\n        <div><span *ngFor=\\\"let path of this.fileDir; let i = index\\\"> {{path}} <i *ngIf=\\\"i != this.fileDir.length - 1\\\" class=\\\"fas fa-caret-right\\\"></i> </span> </div>\\n      </div> \\n\\n      <div id=\\\"file-grid\\\" class=\\\"p-2\\\">\\n        <div class=\\\"full-width\\\" *ngFor=\\\"let file of this.files; let i = index\\\">\\n          <i class=\\\"close-btn fas fa-times\\\" (click)=\\\"deleteFile(i)\\\"></i>\\n          <i *ngIf=\\\"file.type == 'Imagen'\\\" class=\\\"fas fa-file-image color-cyan\\\"></i>\\n          <i *ngIf=\\\"file.type == 'Word'\\\" class=\\\"fas fa-file-word color-blue\\\"></i>\\n          <i *ngIf=\\\"file.type == 'Excel'\\\" class=\\\"fas fa-file-excel color-green\\\"></i>\\n          <i *ngIf=\\\"file.type == 'Power Point'\\\" class=\\\"fas fa-file-powerpoint color-orange\\\"></i>\\n          <i *ngIf=\\\"file.type == 'PDF'\\\" class=\\\"fas fa-file-pdf color-red\\\"></i>\\n          <p class=\\\"file-name pt-2\\\">{{file.name}}</p>\\n          <p class=\\\"file-status\\\">{{file.status}}</p>\\n        </div>\\n      </div>\\n    \\n    </div>\\n    <div id=\\\"upload-buttons\\\" class=\\\"flex mt-3\\\">\\n      <span class=\\\"fill-remaining-space\\\"></span>\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"uploadFiles()\\\" [disabled]=\\\"this.isFilesPristine\\\">Subir Archivos</button>\\n    </div>\\n</mat-card>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReportComponent } from './components/pages/report/report/report.component';\nimport { FichasComponent } from './components/pages/fichas/fichas/fichas.component';\nimport { FundersComponent } from './components/pages/funders/funders/funders.component';\nimport { ProjectsComponent } from './components/pages/projects/projects/projects.component';\nimport { PartnersComponent } from './components/pages/organization/partners/partners.component';\nimport { DashboardComponent } from './components/pages/dashboard/dashboard.component';\nimport { IndicatorsComponent } from './components/pages/indicators/indicators/indicators.component';\nimport { NewProjectComponent } from './components/pages/projects/new-project/new-project.component';\nimport { FunderViewComponent } from './components/pages/funders/funder-view/funder-view.component';\nimport { ProjectViewComponent } from './components/pages/projects/project-view/project-view.component';\nimport { NewIndicatorComponent } from './components/pages/indicators/new-indicator/new-indicator.component';\nimport { OrganizationsComponent } from './components/pages/organization/organizations/organizations.component';\nimport { NewOrganizationComponent } from './components/pages/organization/new-organization/new-organization.component';\nimport { OrganizationViewComponent } from './components/pages/organization/organization-view/organization-view.component';\nimport { PartnersHistoricComponent } from './components/pages/organization/partners-historic/partners-historic.component';\nimport { IndicatorViewComponent } from './components/pages/indicators/indicator-view/indicator-view.component';\nimport { UsersComponent } from './components/pages/users/users/users.component';\nimport { NewUsersComponent } from './components/pages/users/new-users/new-users.component';\nimport { UsersViewComponent } from './components/pages/users/users-view/users-view.component';\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: 'dashboard'},\n  {path: 'dashboard', component: DashboardComponent},\n  {path: 'funders', component: FundersComponent},\n  {path: 'funders/:id', component: FunderViewComponent},\n  {path: 'organizations', component: OrganizationsComponent},\n  {path: 'organizations/add', component: NewOrganizationComponent},\n  {path: 'organizations/:id', component: OrganizationViewComponent},\n  {path: 'organizations/:id/partners', component: PartnersComponent},\n  {path: 'organizations/:id/partners/historic', component: PartnersHistoricComponent},\n  {path: 'indicators', component: IndicatorsComponent},\n  {path: 'indicators/add', component: NewIndicatorComponent},\n  {path: 'indicators/:id', component: IndicatorViewComponent},\n  {path: 'projects', component: ProjectsComponent},\n  {path: 'projects/add', component: NewProjectComponent},\n  {path: 'projects/:id', component: ProjectViewComponent},\n  {path: 'schemas', component: FichasComponent},\n  {path: 'reports', component: ReportComponent},\n  {path: 'documents', component: DashboardComponent},\n  {path: 'institucionales', component: DashboardComponent},\n  {path: 'users', component: UsersComponent},\n  {path: 'users/add', component: NewUsersComponent},\n  {path: 'users/:id', component: UsersViewComponent},\n  {path: 'settings', component: DashboardComponent},\n  {path: '**', pathMatch: 'full', redirectTo: 'dashboard'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component } from '@angular/core';\nimport { SisiCoreService } from './services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  \n  title = 'sisiapp';\n  \n  auth : boolean = false;\n\n  userData : any;\n\n  loadingMessage : string;\n\n  isWorking : boolean = false;\n\n  userRole : string = localStorage.getItem('userRole');\n\n  constructor(private _service : SisiCoreService,\n              private _snackBar : MatSnackBar,\n              private _Router : Router){\n    if(localStorage.getItem('authenticated') == 'true'){\n      this.userData = JSON.parse(localStorage.getItem('user'));\n      this.auth = true;\n      this._service.getFunders().subscribe(\n        result => {\n          if(result.message == 'OK') localStorage.setItem('funders',JSON.stringify(result.funders));\n        },error => this._snackBar.open('Error recuperando los financiadores.','ENTENDIDO',{duration: 3000})\n      );\n      this._service.getOrganizations().subscribe(\n        result => {\n          if(result.message == 'OK') localStorage.setItem('organizations',JSON.stringify(result.organizations));\n        },error => this._snackBar.open('Error recuperando las organizaciones.','ENTENDIDO',{duration: 3000})\n      );\n      this._service.getProjects().subscribe(\n        result => {\n          if(result.message == 'OK') localStorage.setItem('projects',JSON.stringify(result.projects));\n          else localStorage.setItem('projects','[]');\n        },error => this._snackBar.open('Error recuperando los proyectos.','ENTENDIDO',{duration: 3000})\n      );\n      this._service.getIndicators().subscribe(\n        result => {\n          if(result.message == 'OK') localStorage.setItem('indicators',JSON.stringify(result.indicators));\n        },error => this._snackBar.open('Error recuperando los indicadores.','ENTENDIDO',{duration: 3000})\n      );\n      this._service.getUsers().subscribe(\n        result => {\n          if(result.message == 'OK') localStorage.setItem('users',JSON.stringify(result.users));\n        },error => this._snackBar.open('Error recuperando los usuarios.','ENTENDIDO',{duration: 3000})\n      );\n      this._service.getPreferences().subscribe(\n        result => {\n          if(result.message == 'OK') {\n            localStorage.setItem('sectors',JSON.stringify(result.preferences.Organizations.Sectors));\n            localStorage.setItem('types',JSON.stringify(result.preferences.Organizations.Types));\n          } \n        },error => this._snackBar.open('Error recuperando los usuarios.','ENTENDIDO',{duration: 3000})\n      );\n    }\n  }\n\n  Authenticate(){\n    this._Router.navigate(['dashboard']);\n    this.userData = JSON.parse(localStorage.getItem('user')); \n    localStorage.setItem('authenticated','true');\n    localStorage.setItem('userID',this.userData._id);\n    localStorage.setItem('userRole',this.userData.role);\n    this.auth = true;\n    this.isWorking = true;\n    this.userRole = localStorage.getItem('userRole');\n    this.loadingMessage = 'Estamos cargando la informaci√≥n...';\n    this._service.getFunders().subscribe(\n      result => {\n        if(result.message == 'OK') localStorage.setItem('funders',JSON.stringify(result.funders));\n      },error => this._snackBar.open('Error recuperando los financiadores.','ENTENDIDO',{duration: 3000})\n    );\n    this._service.getOrganizations().subscribe(\n      result => {\n        if(result.message == 'OK') localStorage.setItem('organizations',JSON.stringify(result.organizations));\n      },error => this._snackBar.open('Error recuperando las organizaciones.','ENTENDIDO',{duration: 3000})\n    );\n    this._service.getProjects().subscribe(\n      result => {\n        if(result.message == 'OK') localStorage.setItem('projects',JSON.stringify(result.projects));\n        else localStorage.setItem('projects','[]');\n      },error => this._snackBar.open('Error recuperando los proyectos.','ENTENDIDO',{duration: 3000})\n    );\n    this._service.getIndicators().subscribe(\n      result => {\n        if(result.message == 'OK') localStorage.setItem('indicators',JSON.stringify(result.indicators));\n      },error => this._snackBar.open('Error recuperando los indicadores.','ENTENDIDO',{duration: 3000})\n    );\n    this._service.getUsers().subscribe(\n      result => {\n        if(result.message == 'OK') localStorage.setItem('users',JSON.stringify(result.users));\n      },error => this._snackBar.open('Error recuperando los usuarios.','ENTENDIDO',{duration: 3000})\n    );\n    this._service.getPreferences().subscribe(\n      result => {\n        if(result.message == 'OK') {\n          localStorage.setItem('sectors',JSON.stringify(result.preferences.Organizations.Sectors));\n          localStorage.setItem('types',JSON.stringify(result.preferences.Organizations.Types));\n        } \n      },error => this._snackBar.open('Error recuperando los usuarios.','ENTENDIDO',{duration: 3000})\n    );\n  }\n  \n  loadingView(options : any){\n    this.isWorking = options.isWorking;\n    this.loadingMessage = options.message;\n  }\n\n  logout(){\n    localStorage.removeItem('user');\n    localStorage.removeItem('funders');\n    localStorage.removeItem('projects');\n    localStorage.removeItem('organizations');\n    localStorage.removeItem('indicators');\n    this.userData = null;\n    this.auth = false;\n    localStorage.setItem('authenticated','false');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { ModalsComponent } from './components/shared/modals/modals.component';\nimport { FundersComponent } from './components/pages/funders/funders/funders.component';\nimport { ProjectsComponent } from './components/pages/projects/projects/projects.component';\nimport { PartnersComponent } from './components/pages/organization/partners/partners.component';\nimport { DashboardComponent } from './components/pages/dashboard/dashboard.component';\nimport { UploadBoxComponent } from './components/shared/upload-box/upload-box.component';\nimport { IndicatorsComponent } from './components/pages/indicators/indicators/indicators.component';\nimport { SubToolbarComponent } from './components/shared/sub-toolbar/sub-toolbar.component';\nimport { NewProjectComponent } from './components/pages/projects/new-project/new-project.component';\nimport { FunderViewComponent } from './components/pages/funders/funder-view/funder-view.component';\nimport { ButtonGroupComponent } from './components/shared/button-group/button-group.component';\nimport { ProjectViewComponent } from './components/pages/projects/project-view/project-view.component';\nimport { LoadingViewComponent } from './components/shared/loading-view/loading-view.component';\nimport { FormButtonsComponent } from './components/shared/form-buttons/form-buttons.component';\nimport { NewIndicatorComponent } from './components/pages/indicators/new-indicator/new-indicator.component';\nimport { OrganizationsComponent } from './components/pages/organization/organizations/organizations.component';\nimport { UpdateExecutedComponent } from './components/dialogs/update-executed/update-executed.component';\nimport { NewOrganizationComponent } from './components/pages/organization/new-organization/new-organization.component';\nimport { OrganizationViewComponent } from './components/pages/organization/organization-view/organization-view.component';\nimport { PartnersHistoricComponent } from './components/pages/organization/partners-historic/partners-historic.component';\n\n/**\n * Material Imports\n */\n\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatChipsModule } from '@angular/material/chips'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FichasComponent } from './components/pages/fichas/fichas/fichas.component';\nimport { ReportComponent } from './components/pages/report/report/report.component';\nimport { TableAndGraphicComponent } from './components/pages/report/table-and-graphic/table-and-graphic.component';\nimport { IndicatorViewComponent } from './components/pages/indicators/indicator-view/indicator-view.component';\nimport { FundersLinkComponent } from './components/dialogs/funders-link/funders-link.component';\nimport { UsersComponent } from './components/pages/users/users/users.component';\nimport { NewUsersComponent } from './components/pages/users/new-users/new-users.component';\nimport { UsersViewComponent } from './components/pages/users/users-view/users-view.component';\nimport { NewPasswordComponent } from './components/dialogs/new-password/new-password.component';\nimport { NewOrganizationPreferenceComponent } from './components/dialogs/new-organization-preference/new-organization-preference.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    FundersComponent,\n    ProjectsComponent,\n    PartnersComponent,\n    UploadBoxComponent,\n    DashboardComponent,\n    NewProjectComponent,\n    IndicatorsComponent,\n    SubToolbarComponent,\n    FunderViewComponent,\n    ButtonGroupComponent,\n    LoadingViewComponent,\n    FormButtonsComponent,\n    NewIndicatorComponent,\n    OrganizationsComponent,\n    NewOrganizationComponent,\n    OrganizationViewComponent,\n    PartnersHistoricComponent,\n    ModalsComponent,\n    ProjectViewComponent,\n    UpdateExecutedComponent,\n    FichasComponent,\n    ReportComponent,\n    TableAndGraphicComponent,\n    IndicatorViewComponent,\n    FundersLinkComponent,\n    UsersComponent,\n    NewUsersComponent,\n    UsersViewComponent,\n    NewPasswordComponent,\n    NewOrganizationPreferenceComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    MatListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatTabsModule,\n    MatTreeModule,\n    MatChipsModule,\n    MatTableModule,\n    MatInputModule,\n    NgxChartsModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatSelectModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatSidenavModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatToolbarModule,\n    MatDividerModule,\n    MatCheckboxModule,\n    MatSnackBarModule,\n    MatPaginatorModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule\n  ],\n  entryComponents: [\n    UpdateExecutedComponent,\n    FundersLinkComponent,\n    NewPasswordComponent,\n    NewOrganizationPreferenceComponent\n  ],\n  providers: [\n    {provide: MAT_DATE_LOCALE, useValue: 'es-EC'},\n    {provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: false}}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-funders-link',\n  templateUrl: './funders-link.component.html'\n})\nexport class FundersLinkComponent {\n  \n  constructor(\n    public dialogRef: MatDialogRef<FundersLinkComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.data.seleccion = [];\n      for(let i = 0; i < this.data.actualFunders.length; i++){\n        for(let j = 0; j < this.data.Funders.length; j++){\n          if(this.data.actualFunders[i]._id == this.data.Funders[j]._id){\n            this.data.Funders.splice(j,1);\n            break;\n          }\n        }\n      }\n\n    }\n\n  onNoClick(msg : string) : void {\n    this.dialogRef.close(msg);\n  }\n\n  OnFundersListChange(id : string){\n    this.data.seleccion.push(id);\n  }\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-new-organization-preference',\n  templateUrl: './new-organization-preference.component.html'\n})\nexport class NewOrganizationPreferenceComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<NewOrganizationPreferenceComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n      \n    }\n\n  onNoClick(msg : string) : void {\n    this.dialogRef.close(msg);\n  }\n  \n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators, AbstractControl, ValidatorFn } from '@angular/forms';\n\n@Component({\n  selector: 'app-new-password',\n  templateUrl: './new-password.component.html'\n})\nexport class NewPasswordComponent {\n\n  repassword : string = '';\n\n  PasswordForm : FormGroup;\n\n  constructor(public dialogRef: MatDialogRef<NewPasswordComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n\n    this.PasswordForm = new FormGroup({\n      password: new FormControl('',[Validators.required,Validators.minLength(10)]),\n      repassword: new FormControl('')\n    });\n\n    this.PasswordForm.get('repassword').setValidators([Validators.required,this.ComparePass(this.PasswordForm.get('password'))]);\n  \n  }\n\n  ComparePass(otherControl: AbstractControl): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} => {\n      const value: any = control.value;\n      const otherValue: any = otherControl.value;\n      return otherValue === value ? null : { 'notMatch': { value, otherValue } };\n    };\n  }\n\n  onNoClick(msg : string) : void {\n    this.dialogRef.close(msg);\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-update-executed',\n  templateUrl: './update-executed.component.html'\n})\nexport class UpdateExecutedComponent  {\n\n  constructor(\n    public dialogRef: MatDialogRef<UpdateExecutedComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n\n    }\n\n  onNoClick(msg : string) : void {\n    this.dialogRef.close(msg);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2FzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.sass']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-fichas',\n  templateUrl: './fichas.component.html'\n})\nexport class FichasComponent {\n\n  ProjectRecords : any[];\n  Projects : any[];\n  ProjectName : string;\n  selectedProject : string;\n\n  selectedIndicator : string;\n  Indicator : any;\n  Indicators : any[];\n\n  Organizations : any[]; \n\n  fieldsSchema : any[];\n\n  UserResponsable : any;\n\n  SchemaForm : any; \n\n  Period : Date = new Date();\n\n  Status : string = 'none';\n\n  isWorking : boolean = false;\n  loadingMessage : string;\n\n  constructor(public _service : SisiCoreService,\n              private _snackBar : MatSnackBar) { \n    this.Projects = this._service.getProjectsOff().map(project => this.formatProjects(project));\n  }\n\n  formatProjects(project : any){\n    return {\n      name: project.name,\n      _id: project._id\n    }\n  }\n\n  generateSchema(){\n    this.loadingMessage = 'Generando la Ficha...';\n    this.isWorking = true;\n    this.Status = 'loading';\n    setTimeout(this.makeSchema.bind(this),1500);\n  }\n\n  makeSchema(){\n    this.SchemaForm = null;\n    if(this.ProjectRecords.length){\n      let now = new Date();\n      for(let i = 0; i < this.ProjectRecords.length; i++){\n        let record_date = new Date(this.ProjectRecords[i].period);\n        if(this.ProjectRecords[i].records.indicator == this.selectedIndicator && now.getMonth() == record_date.getMonth() && now.getFullYear() == record_date.getFullYear()){\n          this.SchemaForm = this.ProjectRecords[i];\n          let user = this._service.getUser(this.SchemaForm.created_by);\n          this.UserResponsable = `${user.name} ${user.last_names} - ${user.position}`\n          this.Status = 'already-filled';\n          this.isWorking = false;\n          break;\n        }else{\n          this.Status = 'ready';\n        }\n      }\n      if(this.Status == 'ready') this.makeSchemaForm.call(this);\n    }else{\n      this.makeSchemaForm.call(this);\n      this.Status = 'ready';\n    }\n  }\n\n  makeSchemaForm(){\n    if(this.Indicator.type == 'Simple'){\n      this.fieldsSchema = this.Indicator.parameters_schema;\n    }else{\n      this.fieldsSchema = this.Indicator.record_schema;\n    }\n\n    this.SchemaForm = {\n      period: this.Period,\n      records: {\n        indicator: this.selectedIndicator,\n        rows: []\n      }\n    }\n\n    this.Organizations.forEach((organization,index) => {\n      this.SchemaForm.records.rows.push({\n        organization: organization._id,\n        fields: []\n      });\n      this.fieldsSchema.forEach(field => {\n        this.SchemaForm.records.rows[index].fields.push({\n          name: field.name,\n          value: ''\n        });\n      });\n    });\n    this.isWorking = false;\n  }\n\n  onProjectSelect(ev){\n    let project = this._service.getProject(ev);\n    this.ProjectRecords = project.records;\n    this.ProjectName = project.name;\n    this.Indicators = project.indicators;\n    this.Organizations = project.organizations;\n    this.Status = 'none';\n  }\n\n  onIndicatorSelect(ev){\n    this.Indicator = this._service.getIndicator(ev);\n    this.Status = 'none';\n  }\n\n  cancel(){\n\n  }\n\n  save(){\n    let isValid = true;\n    for(let i = 0; i < this.SchemaForm.records.rows.length; i++){\n      for(let j = 0; j < this.SchemaForm.records.rows[i].fields.length; j++){\n        if(this.SchemaForm.records.rows[i].fields[j].value == ''){\n          isValid = false;\n        }\n      }\n    }\n    if(!isValid) return alert('La Ficha debe estar llena completamente.');\n    else{\n      this._service.updateProject({records: this.SchemaForm},this.selectedProject).subscribe(\n        result => {\n          if(result.message == 'UPDATED'){\n            this._service.updateProjectsList(null);\n            this.Status = 'none';\n\n            this.ProjectRecords = result.project.records;\n\n            this.selectedIndicator = null;\n            this._snackBar.open('Ficha guardada exitosamente.','ENTENDIDO',{duration:3000});\n          }\n        },error => this._snackBar.open('Ha ocurrido un error.','ENTENDIDO',{duration: 3000})\n      )\n    }\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToolbarButton } from '../../../shared/sub-toolbar/sub-toolbar.component';\n\n@Component({\n  selector: 'app-funder-view',\n  templateUrl: './funder-view.component.html'\n})\nexport class FunderViewComponent{\n\n  funderID : string;\n\n  editMode : boolean = false;\n\n  userRole : string = localStorage.getItem('userRole');\n\n  Funder : any;\n\n  FunderFormGroup : FormGroup;\n\n  isWorking : boolean = false;\n\n  loadingMessage : string = '';\n\n  DeleteBtn : ToolbarButton = {\n    hasIcon: true,\n    icon: 'delete',\n    handler: ()=>{\n      if(confirm('¬øEst√° seguro que desea eliminar este Financiador?\\n\\nEsta acci√≥n no se puede deshacer.')){\n        this.loadingMessage = 'Eliminando Financiador...'\n        this.isWorking = true;\n        this._service.deleteFunder(this.Funder._id).subscribe(\n          result => {\n            if(result.message == 'DELETED'){\n              this._service.updateProjectsList(null);\n              this._service.updateFundersList(true);\n              this.isWorking = false;\n              this._snackBar.open('Se elimin√≥ el Financiador correctamente.','ENTENDIDO',{duration: 3000});\n            }\n          \n          },error => {\n            this.isWorking = false;\n            this._snackBar.open('Ocurri√≥ un error al eliminar el Financiador.','ENTENDIDO',{duration: 3000})\n          }\n        )\n      }\n    },\n    message: 'ELIMINAR'\n  }\n\n  constructor(private _activatedRoute : ActivatedRoute,\n              private _service : SisiCoreService,\n              private _snackBar : MatSnackBar,\n              private _Router : Router) { \n    this._activatedRoute.params.subscribe(\n      (params : Params) => {\n        this.funderID = params.id;\n        this.Funder = this._service.getFunder(this.funderID)\n      });\n    this.FunderFormGroup = new FormGroup({\n      name: new FormControl({value: this.Funder.name, disabled: true},Validators.required),\n      place: new FormControl({value: this.Funder.place, disabled: true},Validators.required),\n      website: new FormControl({value: this.Funder.website, disabled: true}),\n      coop_date: new FormControl({value: this.Funder.coop_date, disabled: true},[Validators.required,Validators.pattern(new RegExp(/^\\d{1,2}\\/\\d{4}$/))])\n    });\n  }\n\n  edit(){\n    this.editMode = true;\n    this.FunderFormGroup.enable();\n  }\n\n  save(){\n    this.loadingMessage = 'Guardando los cambios en el Financiador...';\n    this.isWorking = true;\n    this._service.updateFunder(this.FunderFormGroup.value,this.funderID).subscribe(\n      result => {\n        this._service.updateFundersList(false);\n        this.Funder = result.funder;\n        this.editMode = false;\n        this.FunderFormGroup.disable();\n        this.isWorking = false;\n        this._snackBar.open('Se han guardado los cambios.','ENTENDIDO',{duration: 3000});\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ha ocurrido un error al guardar los cambios','ENTENDIDO',{duration: 3000})\n      }\n    )\n  }\n\n  cancel(){\n    this.FunderFormGroup.disable();\n    this.FunderFormGroup.reset({\n      name: this.Funder.name,\n      place: this.Funder.place,\n      website: this.Funder.website,\n      coop_date: this.Funder.coop_date\n    });\n    this.editMode = false;\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-funders',\n  templateUrl: './funders.component.html'\n})\nexport class FundersComponent{\n\n  funders : any[] = this._service.getFundersOff();\n\n  userID : string = localStorage.getItem('userID');\n  userRole : string = localStorage.getItem('userRole');\n\n  isWorking : boolean = false;\n\n  loadingMessage : string = 'Registrando Financiador';\n\n  fundersForm : FormGroup;\n  nameCtrl : FormControl = new FormControl('',[Validators.required,this._service.existFunder]);\n  ubicationCtrl : FormControl = new FormControl('',Validators.required);\n  websiteCtrl : FormControl = new FormControl('');\n  coop_dateCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,2}\\/\\d{4}$/))]);\n\n  constructor(private _service : SisiCoreService,\n              private _snackBar : MatSnackBar) { \n    this.fundersForm = new FormGroup({\n      name: this.nameCtrl,\n      place: this.ubicationCtrl,\n      website: this.websiteCtrl,\n      coop_date: this.coop_dateCtrl\n    });\n  }\n\n  reset(){\n    this.fundersForm.reset();\n  }\n\n  saveFunder(){\n    this.isWorking = true;\n    let body = this.fundersForm.value;\n    this._service.createFunder(body).subscribe(\n      result => {\n        this.funders.push(result.funder);\n        this._service.updateFundersList(null);\n        this.fundersForm.reset();\n        this.isWorking = false;\n        this._snackBar.open('Se ha registrado el financiador correctamente.','ENTENDIDO',{duration: 3000});\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ha ocurrido un error al registrar el financiador.','ENTENDIDO',{duration: 3000})\n      }\n    );\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { FormGroup, Validators, FormControl, FormArray } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToolbarButton } from '../../../shared/sub-toolbar/sub-toolbar.component';\n\n@Component({\n  selector: 'app-indicator-view',\n  templateUrl: './indicator-view.component.html'\n})\nexport class IndicatorViewComponent{\n\n  Indicator : any;\n\n  IndicatorForm : FormGroup;\n\n  ParameterSelected : number;\n\n  editMode : boolean;\n\n  userRole : string = localStorage.getItem('userRole');\n\n  isWorking : boolean = false;\n  loadingMessage : string = '';\n\n  DeleteBtn : ToolbarButton = {\n    hasIcon: true,\n    icon: 'delete',\n    handler: ()=>{\n      if(confirm('¬øEst√° seguro que desea eliminar este Indicador?\\n\\nEsta acci√≥n no se puede deshacer.')){\n        this.loadingMessage = 'Eliminando Indicador...';\n        this.isWorking = true;\n        this._service.deleteIndicator(this.Indicator._id).subscribe(\n        result => {\n          if(result.message == 'DELETED'){\n            this._service.updateIndicatorsList(true);\n            this.isWorking = false;\n            this._snackBar.open('Se elimin√≥ el Indicador correctamente.','ENTENDIDO',{duration: 3000});\n          }\n        },error => {\n          this.isWorking = false;\n          this._snackBar.open('Ocurri√≥ un error al eliminar el Indicador.','ENTENDIDO',{duration: 3000})\n        }\n      )\n      }\n    },\n    message: 'ELIMINAR'\n  }\n\n  constructor(private _activatedRoute : ActivatedRoute,\n              private _service : SisiCoreService,\n              private _snackBar : MatSnackBar) { \n    this._activatedRoute.params.subscribe(\n      (params : Params) => {\n        this.Indicator = this._service.getIndicator(params.id);\n        this.editMode = false;\n        this.getFormFromIndicator();\n      }\n    );\n  }\n\n  getFormFromIndicator(){\n    console.log(this.Indicator);\n    if(this.Indicator.type == 'Simple'){\n      let description : string;\n      if(this.Indicator.description) description = this.Indicator.description;\n      else description = '';\n      this.IndicatorForm = new FormGroup({\n        name: new FormControl(this.Indicator.name,[Validators.required,this._service.isBlank]),\n        type : new FormControl(this.Indicator.type,Validators.required),\n        antiquity_diff: new FormControl(this.Indicator.antiquity_diff),\n        parameters_schema: new FormArray([]),\n        description: new FormControl(description,[Validators.required,this._service.isBlank])\n      });\n    }else{\n      this.IndicatorForm = new FormGroup({\n        name: new FormControl(this.Indicator.name,[Validators.required,this._service.isBlank]),\n        type : new FormControl(this.Indicator.type,Validators.required),\n        antiquity_diff: new FormControl(this.Indicator.antiquity_diff),\n        record_schema: new FormArray([]),\n        parameters_schema: new FormArray([])\n      });\n      this.Indicator.record_schema.forEach(field => {\n        (<FormArray> this.IndicatorForm.controls.record_schema).push(new FormGroup({\n          name: new FormControl(field.name,[Validators.required,this._service.isBlank]),\n          frequency: new FormControl(field.frequency,[Validators.required]),\n          unit: new FormControl(field.unit,[Validators.required])\n        }));\n      });\n\n      \n    }\n    this.Indicator.parameters_schema.forEach((parameter,i) => {\n      let weighing : any = {};\n      if(!parameter.weighing[0].weight) weighing.weight = 0;\n      else weighing.weight = parameter.weighing[0].weight;\n      if(!parameter.weighing[0].older) weighing.older = 0;\n      else weighing.older = parameter.weighing[0].older;\n      if(!parameter.weighing[0].newer) weighing.newer = 0;\n      else weighing.newer = parameter.weighing[0].newer;\n      (<FormArray> this.IndicatorForm.controls.parameters_schema).push(new FormGroup({\n          name: new FormControl(parameter.name,Validators.required),\n          weighing: new FormArray([new FormGroup({\n            weight: new FormControl(weighing.weight),\n            older: new FormControl(weighing.older),\n            newer: new FormControl(weighing.newer),\n          })]),\n          isAcum: new FormControl(parameter.isAcum,Validators.required),\n          unit: new FormControl(parameter.unit,Validators.required),\n          definition: new FormArray([]),\n          frequency: new FormControl('')\n        }));\n        parameter.definition.forEach(operator => {\n          (<FormArray> this.IndicatorForm.controls.parameters_schema['controls'][i].controls.definition).push(new FormControl(operator,Validators.required))\n        });\n    });\n    console.log(this.IndicatorForm.value);\n\n  }\n\n  setEditMode(){\n    this.editMode = true;\n  }\n\n  saveIndicator(){\n    this.loadingMessage = 'Guardando los cambios en el Indicador...';\n    this.isWorking = true;\n    let body : any = this.IndicatorForm.value;\n    console.log(body);\n    if(body.type == 'Simple'){\n      if(!this.IndicatorForm.valid){\n        this.isWorking = false;\n        return alert('Todos los campos son obligatorios, por favor, revise el formulario.');\n      }\n    }else{ //Indicador Compuesto\n      let flag : string;\n      body.parameters_schema.forEach((parameter : any) => {\n        if(!parameter.definition.length) return flag = 'Debe definir todos los par√°metros del Indicador.';\n      });\n      if(flag) {\n        this.isWorking = false;\n        return alert(flag);\n      }\n      let suma : any = {\n        older: 0,\n        newer: 0,\n        none: 0\n      }\n      body.parameters_schema.forEach(parameter => {\n        if(body.antiquity_diff){\n          suma.older += parseInt(parameter.weighing[0].older);\n          suma.newer += parseInt(parameter.weighing[0].newer);\n          if(parameter.weighing[0].newer == null || parameter.weighing[0].older == null) return flag = 'Debe completar todas las ponderaciones solicitadas.';\n        }else{\n          suma.none += parseInt(parameter.weighing[0].weight);\n          if(parameter.weighing[0].weight == null) return flag = 'Debe completar todas las ponderaciones solicitadas.';\n        }\n      });\n      if(flag) {\n        this.isWorking = false;\n        return alert(flag);\n      }\n      \n      if(body.antiquity_diff && (suma.older != 100 || suma.newer != 100)) flag = 'La ponderaci√≥n debe sumar 100% en total.';\n      if(!body.antiquity_diff && suma.none != 100) flag = 'La ponderaci√≥n debe sumar 100% en total.';\n      if(flag) {\n        this.isWorking = false;\n        return alert(flag);\n      }\n\n      if(this.IndicatorForm.invalid){\n        this.isWorking = false;\n        return alert('Todos los campos son obligatorios, por favor, revise el formulario');\n      }\n    }\n    this._service.updateIndicator(body,this.Indicator._id).subscribe(\n      result => {\n        if(result.message == 'UPDATED'){\n          this.Indicator = result.indicator;\n          this.editMode = false;\n          this.getFormFromIndicator();\n          this._service.updateIndicatorsList(null);\n          this.isWorking = false;\n          this._snackBar.open('Se ha modificado el indicador correctamente.','ENTENDIDO',{duration: 3000});\n        }\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ha ocurrido un error al actualizar el indicador.','ENTENDIDO',{duration: 3000});\n      }\n    );\n  }\n  \n  addParameter(){\n    (<FormArray>this.IndicatorForm.controls.parameters_schema).push(new FormGroup({\n        name: new FormControl('',Validators.required),\n        weighing: new FormArray([new FormGroup({\n          weight: new FormControl(''),\n          older: new FormControl(''),\n          newer: new FormControl(''),\n        })]),\n        isAcum: new FormControl(false,Validators.required),\n        unit: new FormControl('',Validators.required),\n        definition: new FormArray([])\n      })\n    );\n  }\n\n  addField(){\n    (<FormArray>this.IndicatorForm.controls.record_schema).push(new FormGroup({\n      name: new FormControl('',[Validators.required,this._service.isBlank]),\n      frequency: new FormControl('',[Validators.required]),\n      unit: new FormControl('',[Validators.required])\n    }));\n  }\n\n  cancel(){\n    if(confirm('Los cambios no guardados se borrar√°n.\\n\\n¬øEst√° seguro que desea cancelar la Edici√≥n?')){\n      this.editMode = false;\n      this.getFormFromIndicator();\n    }\n  }\n\n  addOperator(operator : string){\n    (<FormArray> this.IndicatorForm.controls.parameters_schema['controls'][this.ParameterSelected].controls.definition).push(new FormControl(operator));\n  }\n\n  addFieldToDefinition(value : string){\n    (<FormArray> this.IndicatorForm.controls.parameters_schema['controls'][this.ParameterSelected].controls.definition).push(new FormControl(value));\n  }\n\n  remove(index : number){\n    (<FormArray> this.IndicatorForm.controls.parameters_schema['controls'][this.ParameterSelected].controls.definition).removeAt(index)\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\n\n@Component({\n  selector: 'app-indicators',\n  templateUrl: './indicators.component.html'\n})\nexport class IndicatorsComponent{\n\n  Indicators : any[] = this._service.getIndicatorsOff();\n\n  search_term : string = '';\n\n  filteredList : any[] = this.Indicators;\n\n  userRole : string = localStorage.getItem('userRole');\n\n  constructor(private _service : SisiCoreService) { \n\n  }\n\n  filter(){\n    if(!this.search_term.trim()) this.filteredList = this.Indicators;\n    this.filteredList = this.Indicators.filter(indicator => indicator.name.toLowerCase().includes(this.search_term.trim().toLowerCase()));\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-indicator',\n  templateUrl: './new-indicator.component.html'\n})\nexport class NewIndicatorComponent{\n\n  indicatorForm : FormGroup;\n\n  parameterSelected;\n\n  isWorking : boolean = false;\n  loadingMessage : string; \n\n  nameCtrl : FormControl = new FormControl('',[Validators.required,this._service.isBlank]);\n  typeCtrl : FormControl = new FormControl('Compuesto',Validators.required);\n  antiquity_diffCtrl : FormControl = new FormControl(false);\n  descriptionCtrl : FormControl = new FormControl('',[Validators.required,this._service.isBlank]);\n  \n  fields : FormGroup = new FormGroup({\n    name: new FormControl('',Validators.required),\n    frequency: new FormControl('',Validators.required),\n    isAcum: new FormControl(false,Validators.required),\n    unit: new FormControl('',Validators.required)\n  });\n  \n  parameterCompuesto : FormArray = new FormArray([\n    new FormGroup({\n      name: new FormControl('',Validators.required),\n      weighing: new FormGroup({\n        weight: new FormControl(''),\n        older: new FormControl(''),\n        newer: new FormControl(''),\n      }),\n      isAcum: new FormControl(false,Validators.required),\n      unit: new FormControl('',Validators.required),\n      definition: new FormArray([])\n    })\n  ]);\n\n  record_schemaCtrl : FormArray = new FormArray([\n    new FormGroup({\n      name: new FormControl('',[Validators.required,this._service.isBlank]),\n      frequency: new FormControl('',[Validators.required]),\n      unit: new FormControl('',Validators.required)\n    })\n  ]);\n\n  constructor(private _service : SisiCoreService,\n              private _snackBar : MatSnackBar,\n              private _Router : Router) { \n    if(this.typeCtrl.value == 'Simple'){\n      this.indicatorForm = new FormGroup({\n        name: this.nameCtrl,\n        type: this.typeCtrl,\n        parameters_schema: this.fields\n      });\n    }else{\n      this.indicatorForm = new FormGroup({\n        name: this.nameCtrl,\n        type: this.typeCtrl,\n        record_schema: this.record_schemaCtrl,\n        parameters_schema: this.parameterCompuesto,\n        antiquity_diff: this.antiquity_diffCtrl\n      });\n    }\n  }\n\n  showData(){\n    console.log(this.indicatorForm);\n  }\n\n  addParameter(){\n    (<FormArray>this.parameterCompuesto).push(new FormGroup({\n        name: new FormControl('',Validators.required),\n        weighing: new FormGroup({\n          weight: new FormControl(''),\n          older: new FormControl(''),\n          newer: new FormControl(''),\n        }),\n        isAcum: new FormControl(false,Validators.required),\n        unit: new FormControl('',Validators.required),\n        definition: new FormArray([])\n      })\n    );\n  }\n\n  addField(){\n    (<FormArray>this.record_schemaCtrl).push(new FormGroup({\n      name: new FormControl('',[Validators.required,this._service.isBlank]),\n      frequency: new FormControl('',[Validators.required]),\n      unit: new FormControl('',[Validators.required])\n    }));\n  }\n\n  changeType(ev){\n    if(ev == 'Simple'){\n      this.indicatorForm = new FormGroup({\n        name: this.nameCtrl,\n        type: this.typeCtrl,\n        parameters_schema: this.fields,\n        description: this.descriptionCtrl\n      });\n    }else{\n      this.indicatorForm = new FormGroup({\n        name: this.nameCtrl,\n        type: this.typeCtrl,\n        record_schema: this.record_schemaCtrl,\n        parameters_schema: this.parameterCompuesto,\n        antiquity_diff: this.antiquity_diffCtrl\n      });\n    }\n  }\n\n  saveIndicator(){\n    this.loadingMessage = 'Guando el Indicador...';\n    this.isWorking = true;\n    let body : any;\n    if(this.typeCtrl.value == 'Simple'){\n      if(this.indicatorForm.valid){\n        body = this.indicatorForm.value;\n        body.parameters_schema = [{\n          name: this.fields.controls.name.value,\n          frequency: this.fields.controls.frequency.value,\n          isAcum: this.fields.controls.isAcum.value,\n          unit: this.fields.controls.unit.value,\n          definition: this.descriptionCtrl.value,\n          weighing: {weight: 100}\n        }];\n        body.antiquity_diff = false;\n        console.log(body);\n      }else {\n        this.isWorking = false\n        return alert('Todos los campos son obligatorios, por favor, revise el formulario.');\n      }\n    }else{\n      body = this.indicatorForm.value;\n      let flag : string;\n      if(body.parameters_schema.length == 1) {\n        this.isWorking = false;\n        return alert(\"Los indicadores compuestos tienen al menos 2 par√°metros. Si este indicador tine solamente uno, seleccione el tipo 'Simple'\");\n      }\n      body.parameters_schema.forEach((parameter : any) => {\n        if(!parameter.definition.length) return flag = 'Debe definir todos los par√°metros del Indicador.';\n      });\n      if(flag){\n        this.isWorking = false;\n        return alert(flag);\n      }\n      let suma : any = {\n        older: 0,\n        newer: 0,\n        none: 0\n      }\n      body.parameters_schema.forEach(parameter => {\n        if(this.antiquity_diffCtrl.value){\n          suma.older += parseInt(parameter.weighing.older);\n          suma.newer += parseInt(parameter.weighing.newer);\n          if(parameter.weighing.newer == null || parameter.weighing.older == null) return flag = 'Debe completar todas las ponderaciones solicitadas.';\n        }else{\n          suma.none += parseInt(parameter.weighing.weight);\n          if(parameter.weighing.weight == null) return flag = 'Debe completar todas las ponderaciones solicitadas.';\n        }\n      });\n      if(flag) {\n        this.isWorking = false;\n        return alert(flag);\n      }\n      \n      if(this.antiquity_diffCtrl.value && (suma.older != 100 || suma.newer != 100)) flag = 'La ponderaci√≥n debe sumar 100% en total.';\n      if(!this.antiquity_diffCtrl.value && suma.none != 100) flag = 'La ponderaci√≥n debe sumar 100% en total.';\n      if(flag) {\n        this.isWorking = false;\n        return alert(flag);\n      }\n\n      if(this.indicatorForm.invalid){ \n        this.isWorking = false;\n        return alert('Todos los campos son obligatorios, por favor, revise el formulario');\n      }\n    }\n    this._service.createIndicator(body).subscribe(\n      result => {\n        this._service.updateIndicatorsList(true);\n        this.isWorking = false;\n        this._snackBar.open('Se ha registrado el indicador correctamente.','ENTENDIDO',{duration: 3000});\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ha ocurrido un error al registrar el indicador.','ENTENDIDO',{duration: 3000});\n      }\n    );\n  }\n\n  cancel(){\n    if(confirm('Los cambios no guardados se borrar√°n.\\n\\n¬øEst√° seguro que desea salir?')) this._Router.navigate(['/indicators']);\n  }\n\n  addOperator(operator : string){\n    (<FormArray> this.parameterCompuesto.controls[this.parameterSelected]['controls']['definition']).push(new FormControl(operator));\n  }\n\n  addFieldToDefinition(value : string){\n    (<FormArray> this.parameterCompuesto.controls[this.parameterSelected]['controls']['definition']).push(new FormControl(value));\n  }\n\n  remove(index : number){\n    (<FormArray> this.parameterCompuesto.controls[this.parameterSelected]['controls']['definition']).removeAt(index)\n  }\n\n}\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators, } from '@angular/forms';\nimport { SisiCoreService } from '../../../services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent{\n\n  @Output() authentication : EventEmitter<void> = new EventEmitter();\n  @Output() isWorking : EventEmitter<any> = new EventEmitter();\n\n  LoginForm : FormGroup;\n\n  constructor(private _service : SisiCoreService,\n              private _snackBar : MatSnackBar) { \n    this.LoginForm = new FormGroup({\n      'username': new FormControl('',Validators.required),\n      'password': new FormControl('',[Validators.required,Validators.minLength(8)])\n    });\n  }\n\n  login(){\n    this.isWorking.emit({isWorking: true, message: 'Ingresando'});\n    let body = this.LoginForm.value;\n    body.last_login_date = new Date();\n\n    this._service.authenticate(body).subscribe(\n      result => {\n        this._snackBar.open(result.message,'ENTENDIDO',{duration: 3000});\n        if(result.message == 'Ingreso exitoso.'){\n          localStorage.setItem('user',JSON.stringify(result.user));\n          localStorage.setItem('token',result.token);\n          this.authentication.emit();\n        }\n        this.isWorking.emit({isWorking: false});\n      },\n      error => {\n        this.isWorking.emit({isWorking: false});\n        this._snackBar.open('Ha ocurrido un error, intente nuevamente.','ENTENDIDO',{duration: 3000})\n      }\n    );\n    \n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { NewOrganizationPreferenceComponent } from '../../../dialogs/new-organization-preference/new-organization-preference.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-new-organization',\n  templateUrl: './new-organization.component.html'\n})\nexport class NewOrganizationComponent implements OnInit {\n\n  organizationForm : FormGroup;\n\n  Sectors : any[] = this._service.getSectorsOff();\n  Types : any[] = this._service.getTypesOff();\n\n  isOlder : boolean = false;\n  isWorking : boolean= false;\n  loadingMessage : string = '';\n\n  newSector : boolean = false;\n\n  nameCtrl : FormControl = new FormControl('',[Validators.required,this._service.existOrganization]);\n  foundation_dateCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^(0?[1-9]|[12][0-9]|3[01])[\\/](0?[1-9]|1[012])[/\\\\/](19|20)\\d{2}$/))]);\n  sectorCtrl : FormControl = new FormControl('',Validators.required);\n  typeCtrl : FormControl = new FormControl('',Validators.required);\n  legalizedCtrl : FormControl = new FormControl('',Validators.required);\n  mensCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n  womensCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n  beneficiariesCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n  cantonCtrl : FormControl = new FormControl('',Validators.required);\n  recintoCtrl : FormControl = new FormControl('',Validators.required);\n  parroquiaCtrl : FormControl = new FormControl('',Validators.required);\n\n  constructor(private _service : SisiCoreService,\n              private _snackBar : MatSnackBar,\n              private dialog : MatDialog) { }\n\n  ngOnInit() {\n    this.organizationForm = new FormGroup({\n      name : this.nameCtrl,\n      foundation_date : this.foundation_dateCtrl,\n      sector: this.sectorCtrl,\n      type: this.typeCtrl,\n      legalized: this.legalizedCtrl,\n      partners: new FormGroup({\n        mens: this.mensCtrl,\n        womens: this.womensCtrl\n      }),\n      beneficiaries: this.beneficiariesCtrl,\n      ubication: new FormGroup({\n        canton: this.cantonCtrl,\n        recinto: this.recintoCtrl,\n        parroquia: this.parroquiaCtrl\n      })\n    });\n  }\n\n  setOlder(event){\n    let anio = this.foundation_dateCtrl.value.split('/')[2];\n    if(anio >= 2019) this.isOlder = false;\n    else this.isOlder = true;\n  }\n\n  saveOrganization(){\n    this.loadingMessage = 'Guardando nueva organizaci√≥n...'\n    this.isWorking = true;\n    let organization = this.organizationForm.value;\n    organization.created_by = localStorage.getItem('userID');\n    organization.isOlder = this.isOlder;\n\n    this._service.createOrganization(organization).subscribe(\n      result => {\n        this._service.updateOrganizationsList(true);\n        this.isWorking = false;\n        this._snackBar.open('La organizaci√≥n se registr√≥ correctamente.','ENTENDIDO',{duration: 3000});\n\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ocurri√≥ un error al guardar la organizaci√≥n.','ENTENDIDO',{duration: 3000});\n      }\n    );\n  }\n\n  /**\n   * Sectors\n   */\n  addNewSector(){\n    const dialogRef = this.dialog.open(NewOrganizationPreferenceComponent, {\n      width: '550px',\n      data: {preference: 'sectors'}\n    });\n\n    dialogRef.afterClosed().subscribe(sector => {\n      if(sector){\n        /**Actualizar Financiadores */\n        this._service.addNewOrganizationPreference({sector}).subscribe(\n          result => {\n            console.log(result);\n            this.Sectors.push(sector);\n            this._service.updatePreferencesList();\n            this._snackBar.open('Se a√±adi√≥ correctamente el sector.','ENTENDIDO',{duration : 3000});\n          },error =>{\n            this._snackBar.open('Ocurri√≥ un error al registrar un nuevo sector.','ENTENDIDO',{duration: 3000});\n          });\n      }\n    });\n  }\n\n  addNewType(){\n    const dialogRef = this.dialog.open(NewOrganizationPreferenceComponent, {\n      width: '550px',\n      data: {preference: 'types'}\n    });\n\n    dialogRef.afterClosed().subscribe(type => {\n      if(type){\n        /**Actualizar Financiadores */\n        this._service.addNewOrganizationPreference({type}).subscribe(\n          result => {\n            console.log(result,type);\n            this.Types.push(type);\n            this._service.updatePreferencesList();\n            this._snackBar.open('Se a√±adi√≥ correctamente el tipo.','ENTENDIDO',{duration : 3000});\n          },error => this._snackBar.open('Ocurri√≥ un error al registrar un nuevo tipo.','ENTENDIDO',{duration: 3000})\n        )\n      }\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { FormGroup,FormControl,Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ToolbarButton } from '../../../shared/sub-toolbar/sub-toolbar.component';\n\n@Component({\n  selector: 'app-organization-view',\n  templateUrl: './organization-view.component.html'\n})\nexport class OrganizationViewComponent implements OnInit{\n\n  buttons : ToolbarButton[];\n\n  Organization : any;\n\n  organizationForm : FormGroup;\n\n  userRole : string = localStorage.getItem('userRole');\n\n  editMode : boolean = false;\n\n  isOlder : boolean = false;\n\n  isWorking : boolean = false;\n  loadingMessage : string;\n\n  nameCtrl : FormControl;\n  foundation_dateCtrl : FormControl;\n  sectorCtrl : FormControl;\n  typeCtrl : FormControl;\n  legalizedCtrl : FormControl;\n  mensCtrl : FormControl;\n  womensCtrl : FormControl;\n  beneficiariesCtrl : FormControl;\n  cantonCtrl : FormControl;\n  recintoCtrl : FormControl;\n  parroquiaCtrl : FormControl;\n\n\n  constructor(private _ActivatedRoute : ActivatedRoute,\n              private _service : SisiCoreService,\n              private _snackBar : MatSnackBar,\n              private _Router : Router) {\n    \n    this._ActivatedRoute.params.subscribe(\n      (params : Params) => this.Organization = this._service.getOrganization(params.id)\n    );\n\n    this.buttons  = [\n      {\n        message: 'SOCIOS',\n        hasIcon: true,\n        icon: 'people',\n        handler: () => {\n          this._Router.navigate(['organizations',this.Organization._id,'partners']);\n        }\n      },\n      {\n        message: 'ELIMINAR',\n        hasIcon: true,\n        icon: 'delete',\n        handler: () => {\n          if(confirm('¬øEst√° seguro que desea eliminar esta Organizaci√≥n?\\n\\nEsta acci√≥n no se puede deshacer.')) {\n            this.loadingMessage = 'Eliminando la Organizaci√≥n ...';\n            this.isWorking = true;\n            this._service.deleteOrganization(this.Organization._id).subscribe(\n            result => {\n              if(result.message == 'DELETED'){\n                this._service.updateOrganizationsList(true);\n                this.isWorking = false;\n                this._snackBar.open('Se elimin√≥ la Organizaci√≥n correctamente.','ENTENDIDO',{duration: 3000});\n              }\n            },error => {\n              this.isWorking = false;\n              this._snackBar.open('Ocurri√≥ un error al eliminar la Organizaci√≥n.','ENTENDIDO',{duration: 3000})\n            }\n          )\n          }\n        }\n      }\n    ];\n    \n  }\n\n  ngOnInit(){\n    this.nameCtrl = new FormControl(this.Organization.name,[Validators.required,this._service.existOrganization]);\n    this.foundation_dateCtrl = new FormControl(this.Organization.foundation_date,[Validators.required,Validators.pattern(new RegExp(/^(0?[1-9]|[12][0-9]|3[01])[\\/](0?[1-9]|1[012])[/\\\\/](19|20)\\d{2}$/))]);\n    this.sectorCtrl = new FormControl(this.Organization.sector,Validators.required);\n    this.typeCtrl = new FormControl(this.Organization.type,Validators.required);\n    this.legalizedCtrl = new FormControl(this.Organization.legalized,Validators.required);\n    this.mensCtrl = new FormControl(this.Organization.partners.mens,[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n    this.womensCtrl = new FormControl(this.Organization.partners.womens,[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n    this.beneficiariesCtrl = new FormControl(this.Organization.beneficiaries,[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n    this.cantonCtrl = new FormControl(this.Organization.ubication.canton,Validators.required);\n    this.recintoCtrl = new FormControl(this.Organization.ubication.recinto,Validators.required);\n    this.parroquiaCtrl = new FormControl(this.Organization.ubication.parroquia,Validators.required);\n    this.organizationForm = new FormGroup({\n      name : this.nameCtrl,\n      foundation_date : this.foundation_dateCtrl,\n      sector: this.sectorCtrl,\n      type: this.typeCtrl,\n      legalized: this.legalizedCtrl,\n      partners: new FormGroup({\n        mens: this.mensCtrl,\n        womens: this.womensCtrl\n      }),\n      beneficiaries: this.beneficiariesCtrl,\n      ubication: new FormGroup({\n        canton: this.cantonCtrl,\n        recinto: this.recintoCtrl,\n        parroquia: this.parroquiaCtrl\n      })\n    });\n    this.organizationForm.disable();\n  }\n\n  setOlder(){\n    let anio = this.foundation_dateCtrl.value.split('/')[2];\n    if(anio >= 2019) this.isOlder = false;\n    else this.isOlder = true;\n  }\n\n  updateOrganization(){\n    this.loadingMessage = 'Guardando los cambios...'\n    this.isWorking = true;\n    let body : any = this.organizationForm.value;\n    body.isOlder = this.isOlder;\n    body.last_updated_by = localStorage.getItem('userID');\n    this._service.updateOrganization(body,this.Organization._id).subscribe(\n      result => {\n        this.Organization = result.organization;\n        this._service.updateOrganizationsList(null);\n        this.editMode = false;\n        this.organizationForm.disable();\n        this.isWorking = false;\n        this._snackBar.open('Se han guardado los cambios correctamente.','ENTENDIDO',{duration: 3000});\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ocurri√≥ un problema al guardar los cambios.','ENTENDIDO',{duration: 3000});\n      }\n    );\n  }\n\n  edit(){\n    this.editMode = true;\n    this.organizationForm.enable();\n  }\n\n  onCancel(){\n    if(confirm('Todos los cambios no guardados se perder√°n.\\n\\n¬øDesea continuar?')){\n      this.editMode = false;\n      this.organizationForm.disable();\n      this.organizationForm.reset({\n        name : this.Organization.name,\n        foundation_date : this.Organization.foundation_date,\n        sector: this.Organization.sector,\n        type: this.Organization.type,\n        legalized: this.Organization.legalized,\n        partners: new FormGroup({\n          mens: this.Organization.partners.mens,\n          womens: this.Organization.partners.womens\n        }),\n        beneficiaries: this.Organization.beneficiaries,\n        ubication: new FormGroup({\n          canton: this.Organization.ubication.canton,\n          recinto: this.Organization.ubication.recinto,\n          parroquia: this.Organization.ubication.parroquia\n        })\n      });\n    }\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\n\n@Component({\n  selector: 'app-organizations',\n  templateUrl: './organizations.component.html'\n})\nexport class OrganizationsComponent {\n\n  Organizations : any[] = this._service.getOrganizationsOff();\n\n  userRole : string = localStorage.getItem('userRole');\n\n  constructor(private _service : SisiCoreService) {\n    \n  }\n\n}\n","import { Component, ViewChild, OnInit, …µConsole } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\nimport { SisiDatewarehouseService } from '../../../../services/sisi-datewarehouse√ß.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-partners-historic',\n  templateUrl: './partners-historic.component.html'\n})\nexport class PartnersHistoricComponent implements OnInit {\n\n  Organization : any;\n\n  ELEMENT_DATA : Registry[];\n  /*Table Widget*/\n  displayedColumns : string[];\n  dataSource : MatTableDataSource<Registry>;\n\n  constructor(private _ActivatedRoute : ActivatedRoute,\n              private _Service : SisiCoreService,\n              private _Datawarehouse : SisiDatewarehouseService,\n              private _snackbar : MatSnackBar) { \n\n    this._ActivatedRoute.params.subscribe(\n      (params : Params) => this.Organization = this._Service.getOrganization(params.id)\n    );\n\n    this._Datawarehouse.getPartnersHistoryData(this.Organization._id)\n        .subscribe(\n          result => {\n            if(result.message == 'OK'){\n              result.data[0].series.forEach(serie => serie.name = new Date(serie.name));\n              result.data[1].series.forEach(serie => serie.name = new Date(serie.name));\n              this.multi = null;\n              this.multi = result.data;\n              this.generateTable();\n            }\n          },\n          error => this._snackbar.open('Error al recuperar los datos para la gr√°fica.','ENTENDIDO',{duration: 3000})\n        );\n\n\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  /**\n   * Graphic's Logic\n   */\n\n  multi: any[];\n  view: any[] = [900, 400];\n\n  // options\n  legend: boolean = true;\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  //Eje de X\n  xAxisLabel: string = 'Tiempo';\n  //Eje de Y\n  yAxisLabel: string = 'N√∫mero de Socios';\n  timeline: boolean = true;\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25']\n  };\n\n  onSelect(data): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data): void {\n    console.log('Activate', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n\n  getRegistryDate (fecha : Date) : String{\n    return `${fecha.getMonth() + 1}-${fecha.getFullYear()}`;\n  }\n\n  generateTable(){\n    this.ELEMENT_DATA = [];\n    let fecha : Date = new Date(this.Organization.created_at);\n    this.ELEMENT_DATA.push({\n      number: 1,\n      period: `${this.getMonthText(fecha.getMonth() + 1)} - ${new Date(this.Organization.created_at).getFullYear()}`,\n      mens: this.Organization.partners.mens,\n      womens: this.Organization.partners.womens,\n      total: this.Organization.partners.mens + this.Organization.partners.womens\n    });\n    this.Organization.historyPartners.forEach((registry, index) => {\n      let fechaPeriodo : Date = new Date(registry.period);\n      this.ELEMENT_DATA.push({\n        number: index + 2,\n        period: `${this.getMonthText(fechaPeriodo.getMonth() + 1)} - ${fechaPeriodo.getFullYear()}`,\n        mens: registry.mens,\n        womens: registry.womens,\n        total: registry.mens + registry.womens\n      })\n    });\n    this.displayedColumns = ['number', 'period', 'mens', 'womens', 'total'];\n    this.dataSource = new MatTableDataSource<Registry>(this.ELEMENT_DATA);\n  }\n\n  getMonthText (month : number) : string {\n    let mes : string = '';\n    switch(month){\n      case 1:\n        mes = 'Enero';\n        break;\n      case 2:\n        mes = 'Febrero';\n        break;\n      case 3:\n        mes = 'Marzo';\n        break;\n      case 4:\n        mes = 'Abril';\n        break;\n      case 5:\n        mes = 'Mayo';\n        break;\n      case 6:\n        mes = 'Junio';\n        break;\n      case 7:\n        mes = 'Julio';\n        break;\n      case 8:\n        mes = 'Agosto';\n        break;\n      case 9:\n        mes = 'Septiembre';\n        break;\n      case 10:\n        mes = 'Octubre';\n        break;\n      case 11:\n        mes = 'Noviembre';\n        break;\n      case 12:\n        mes = 'Diciembre';\n        break;\n      default:\n        break;\n    }\n    return mes;\n  }\n\n  formatDate (fecha : Date) : string {\n    return fecha.toString().split('T')[0];\n  }\n\n}\n\n  export interface Registry {\n    number: number,\n    period: string,\n    mens: number,\n    womens: number,\n    total: number\n  }","import { Component } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { ToolbarButton } from '../../../shared/sub-toolbar/sub-toolbar.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-partners',\n  templateUrl: './partners.component.html'\n})\nexport class PartnersComponent {\n\n  PartnerForm : FormGroup;\n\n  Organization : any;\n\n  ActualPartners : any;\n\n  buttons : ToolbarButton[];\n\n  mensCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n  womensCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n\n  constructor(private _ActivedRoute : ActivatedRoute,\n              private _service : SisiCoreService,\n              private _snackBar : MatSnackBar,\n              private _Router : Router) { \n    \n    this._ActivedRoute.params.subscribe(  \n      (params: Params) => this.Organization = this._service.getOrganization(params.id)\n    );\n\n    this.PartnerForm = new FormGroup({\n      mens: this.mensCtrl,\n      womens: this.womensCtrl\n    });\n    console.log(this.Organization);\n    if(this.Organization.historyPartners.length) {\n      console.log('si hay');\n      this.ActualPartners = {\n        mens: this.Organization.historyPartners[this.Organization.historyPartners.length - 1].mens,\n        womens: this.Organization.historyPartners[this.Organization.historyPartners.length - 1].womens,\n        total: this.Organization.historyPartners[this.Organization.historyPartners.length - 1].mens + this.Organization.historyPartners[this.Organization.historyPartners.length - 1].womens\n      }\n    }else {\n      console.log('no hay');\n      this.ActualPartners = {\n        mens: this.Organization.partners.mens,\n        womens: this.Organization.partners.womens,\n        total: this.Organization.partners.mens + this.Organization.partners.womens\n      }\n    }\n    this.buttons = [\n      {\n        message: 'HIST√ìRICO',\n        hasIcon: true,\n        icon: 'timeline',\n        handler: () => {\n          this._Router.navigate(['organizations',this.Organization._id,'partners','historic'])\n        }\n      }\n    ];\n  }\n\n  cancel(){\n    this.PartnerForm.reset();\n  }\n\n  toNumber ( number : string ) : number {\n    return Number.parseInt(number);\n  }\n\n  save(){\n    let history : any[];\n    let registry : any = this.PartnerForm.value;\n    registry.period = new Date(); \n    history = this.Organization.historyPartners;\n    history.push(registry);\n    this._service.updateOrganization({historyPartners: history},this.Organization._id).subscribe(\n      result => {\n\n        this.Organization = result.organization;\n        let organizations : any[] = JSON.parse(localStorage.getItem('organizations'));\n        let position : number;\n        for(let i = 0; i < organizations.length; i++){\n          if(organizations[i]._id == this.Organization._id) position = i; \n        }\n        organizations.splice(position,1);\n        organizations.push(result.organization);\n        localStorage.setItem('organizations',JSON.stringify(organizations));\n\n        this.PartnerForm.reset();\n        this._snackBar.open('Se ha actualizado los socios correctamente.','ENTENDIDO',{duration: 3000});\n      },error => this._snackBar.open('Ha ocurrido un error al actualizar los socios.','ENTENDIDO',{duration: 3000})\n    );\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { MatSelectionList } from '@angular/material/list';\n\nimport { convertSize, getTypeFromExt } from '../../../shared/upload-box/upload-box.component';\n\nimport * as Moment from 'moment'\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-project',\n  templateUrl: './new-project.component.html'\n})\nexport class NewProjectComponent{\n\n  Organizations : any[] = this._service.getOrganizationsOff();\n  Funders : any[] = this._service.getFundersOff();\n  Indicators : any[] = this._service.getIndicatorsOff(); \n  \n  ProjectFormGroup : FormGroup;\n\n  isValid : boolean = true;\n\n  organizationsSelected : any = [];\n  indicatorsSelected : any = [];\n\n  isWorking : boolean = false;\n  loadingMessage : string;\n\n  File : any; //Variable para la subida de la lista de usuarios\n\n  /*Inicializando Formulario*/\n  nameCtrl : FormControl = new FormControl('',[Validators.required,this._service.existProject,this._service.isBlank]);\n  start_dateCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^(0?[1-9]|[12][0-9]|3[01])[\\/](0?[1-9]|1[012])[/\\\\/](19|20)\\d{2}$/))]);\n  durationCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/)),this._service.isBlank]);\n  \n  budgetCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,10}$/))]);\n  ubicationCtrl : FormControl = new FormControl('',[Validators.required,this._service.isBlank]);\n  beneficiariesNumberCtrl : FormControl = new FormControl('',[Validators.required,Validators.pattern(new RegExp(/^\\d{1,8}$/))]);\n\n  objGeneralCtrl : FormControl = new FormControl('',[Validators.required,this._service.isBlank]);\n  objEspeCtrl : FormArray = new FormArray([new FormControl('',[Validators.required,this._service.isBlank])]);\n  resultsCtrl : FormArray = new FormArray([new FormControl('',[Validators.required,this._service.isBlank])]);\n\n  goalsCtrl : FormArray = new FormArray([]);\n  fundersCtrl : FormArray = new FormArray([]);\n\n  constructor(private _service : SisiCoreService,\n              private _snackbar : MatSnackBar,\n              private _Router : Router){\n    this.ProjectFormGroup = new FormGroup({\n      name: this.nameCtrl,\n      start_date: this.start_dateCtrl,\n      duration: this.durationCtrl,\n      budgets: new FormGroup({\n        total_inicial: this.budgetCtrl\n      }),\n      ubication: this.ubicationCtrl,\n      beneficiaries: new FormGroup({\n        number: this.beneficiariesNumberCtrl\n      }),\n      gen_objective: this.objGeneralCtrl,\n      esp_objectives: this.objEspeCtrl,\n      results: this.resultsCtrl,\n      goals: this.goalsCtrl,\n      funders: this.fundersCtrl\n    });\n  }\n\n  addObjective(){\n    (<FormArray> this.objEspeCtrl).push(new FormControl('',[Validators.required,this._service.isBlank]));\n  }\n\n  addResult(){\n    (<FormArray> this.resultsCtrl).push(new FormControl('',[Validators.required,this._service.isBlank]));\n  }\n\n  deleteObjective(index : number){\n    if(confirm('¬øEst√° seguro de que quiere eliminar este objetivo?')) (<FormArray> this.objEspeCtrl).removeAt(index);\n  }\n\n  deleteResult(index : number){\n    if(confirm('¬øEst√° seguro de que quiere eliminar este resultado?')) (<FormArray> this.resultsCtrl).removeAt(index);\n  }\n\n  /*Listeners para las listas de Selecci√≥n de Funders, Indicators y Organizations*/\n  OnIndicatorsListChange(id : string, list : MatSelectionList){\n    let ready : boolean = false;\n    let indice : number;\n    for(let i = 0; i < (<FormArray> this.goalsCtrl).length; i++){\n      if(this.goalsCtrl.controls[i].get('id').value == id){\n        indice = i;\n        ready = true;\n        break;\n      }\n    }\n    if(ready){//Hay que eliminar\n      if(confirm('Esta acci√≥n no se puede deshacer.\\n¬øEst√° seguro que desea descartar este indicador?')) (<FormArray> this.goalsCtrl).removeAt(indice);\n      else list.options.filter(option => option.value == id)[0].selected = true;\n    }else{//Agregar\n      let indicator : any = this.Indicators.filter(indicator => indicator._id == id)[0];\n      this.indicatorsSelected.push({id: indicator._id,parameters: indicator.parameters_schema});\n      let organizationsCtrl : FormArray = new FormArray([]);\n      this.organizationsSelected.forEach(organization => {\n        (<FormArray> organizationsCtrl).push(new FormGroup({\n          organization: new FormControl(organization.name,[Validators.required]),\n          id: new FormControl(organization.id,[Validators.required]),\n          parameters: new FormArray([])\n        }));\n      });\n      let indicatorCtrl = new FormGroup({\n        indicator: new FormControl(indicator.name),\n        id: new FormControl(indicator._id),\n        organizations: organizationsCtrl\n      });\n      for(let i = 0; i < (<FormArray>indicatorCtrl.controls.organizations).length; i++){\n          indicator.parameters_schema.forEach(parametro => {\n            (<FormArray>indicatorCtrl.controls.organizations['controls'][i].get('parameters')).push(new FormGroup({\n              name: new FormControl(parametro.name),\n              baseline: new FormControl('',[Validators.required,this._service.isBlank,Validators.pattern(new RegExp(/^\\d{1,10}$/))]),\n              goal: new FormControl('',[Validators.required,this._service.isBlank,Validators.pattern(new RegExp(/^\\d{1,10}$/))])\n            }));\n          })\n      }\n      (<FormArray> this.goalsCtrl).push(indicatorCtrl);\n    }\n  } \n  \n  OnOrganizationsListChange(id : string, OrganizationsList : MatSelectionList){    \n    let ready : boolean = false;\n    this.organizationsSelected.forEach((organization, index) => {\n      if(organization.id == id){ //Hay que quitar\n        ready = true;\n        if(confirm('Esta acci√≥n no se puede deshacer.\\n¬øEst√° seguro que desea descartar esta organizaci√≥n?')){\n          this.organizationsSelected.splice(index,1); //Quitar del Array de organizaciones seleccionadas\n          //Eliminar del Formulario\n          return this.RemoveFromForm(index); \n        }else return OrganizationsList.options.filter(option => option.value == id)[0].selected = true;\n      }\n    });\n    //Agregar\n    if(!ready){\n      let organization : any = this.Organizations.filter(organization => organization._id == id)[0];\n      this.organizationsSelected.push({\n        name: organization.name,\n        id: organization._id\n      });\n      for(let i = 0; i < this.goalsCtrl.length; i++){\n\n        let parameters : FormArray = new FormArray([]);\n\n        this.indicatorsSelected[i].parameters.forEach(parameter => {\n          (<FormArray> parameters).push(new FormGroup({\n            name: new FormControl(parameter.name),\n            baseline: new FormControl('',[Validators.required,this._service.isBlank,Validators.pattern(new RegExp(/^\\d{1,10}$/))]),\n            goal: new FormControl('',[Validators.required,this._service.isBlank,Validators.pattern(new RegExp(/^\\d{1,10}$/))])\n          }))\n        });\n\n        (<FormArray> this.goalsCtrl.controls[i].get('organizations')).push(new FormGroup({\n          organization: new FormControl(organization.name,[Validators.required]),\n          id: new FormControl(organization._id,[Validators.required]),\n          parameters\n        }));\n      }\n    }\n  }\n\n  RemoveFromForm(index : number){\n    for(let i = 0; i < this.goalsCtrl.length; i++){\n      (<FormArray> this.goalsCtrl.controls[i].get('organizations')).removeAt(index);\n    }\n  }\n\n  OnFundersListChange(id : string){\n    (<FormArray> this.fundersCtrl).push(new FormControl(id,[Validators.required]));\n  }\n\n  createProject(){\n    this.loadingMessage = 'Guardando el proyecto...'\n    this.isWorking = true;\n    if(this.ProjectFormGroup.invalid || !this.File || !this.goalsCtrl.length || !this.fundersCtrl.length){\n      this.isWorking = false;\n      return alert('Debe completar todo el formulario de registro de Proyectos!\\n\\nNo olvide asignar los financiadores, indicadores y organizaciones. Tampoco olvide seleccionar el archivo de lista de beneficiarios.')\n    }\n    let project : any = this.ProjectFormGroup.value;\n    project.indicators = [];\n    project.organizations = [];\n    for(let i = 0; i < project.goals.length; i++){\n      project.indicators.push(project.goals[i].id);\n    }\n    for(let i = 0; i < project.goals[0].organizations.length; i++){\n      project.organizations.push(project.goals[0].organizations[i].id);\n    }\n    this._service.createProject(project).subscribe(\n      result => {\n        if(result.message == 'CREATED') {\n          this.uploadBeneficiariesList(result.project._id).subscribe(\n            result => {\n              if(result.message ==\"CREATED\"){\n                this._service.updateOrganizationsList(null);\n                this._service.updateFundersList(null);\n                this._service.updateProjectsList(true);\n                this.isWorking = false;\n                this._snackbar.open('Proyecto Registrado correctamente.','ENTENDIDO',{duration: 3000});\n              }\n            },error => {\n              this.isWorking = false;\n              this._snackbar.open('Ha ocurrido un error al subir el archivo de Beneficiarios.','ENTENDIDO',{duration: 3000})\n            }\n          );\n        }\n      },error => {\n        this.isWorking = false;\n        this._snackbar.open('Ocurri√≥ un error al guardar el nuevo proyecto.','ENTENDIDO',{duration: 3000})\n      }\n    )\n  }\n\n  prepareBeneficiariesList(event){\n    if(event.target.files && event.target.files.length > 0){\n      let file = event.target.files[0];\n        let name = file.name.split('.');\n        this.File = {\n          name: name[0],\n          folder: this.nameCtrl.value,\n          file: file.name,\n          ext: name[1],\n          type: getTypeFromExt(name[1]),\n          description: 'descripcion',\n          tama√±o: convertSize(file.size),\n          fileObj: file \n        };\n      }\n  }\n\n  uploadBeneficiariesList(id) : Observable<any>{\n    let filesForm = new FormData();\n    let details = [];\n    let name = `${this.File.name.replace(/ /g,'-')}_${Moment.now()}.${this.File.ext}`;\n        filesForm.append('multi-files',this.File.fileObj,name);\n        details.push({\n          name: this.File.name,\n          folder: id,\n          type: this.File.type,\n          file: name,\n          ext: this.File.ext,\n          size: this.File.tama√±o,\n          entity: 'Proyectos'\n        });\n    filesForm.append('details',JSON.stringify(details));\n    filesForm.append('entity','Project');\n    filesForm.append('id',id);\n    return this._service.uploadFile(filesForm);\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UpdateExecutedComponent } from '../../../dialogs/update-executed/update-executed.component';\nimport { ToolbarButton } from '../../../shared/sub-toolbar/sub-toolbar.component';\nimport { FundersLinkComponent } from '../../../dialogs/funders-link/funders-link.component';\n\n@Component({\n  selector: 'app-project-view',\n  templateUrl: './project-view.component.html'\n})\nexport class ProjectViewComponent {\n\n  Project : any;\n\n  File : any;\n\n  executed_budget : any;\n\n  userRole : string = localStorage.getItem('userRole');\n\n  loadingMessage : string;\n  isWorking : boolean = false; \n\n  DeleteBtn : ToolbarButton = {\n    hasIcon: true,\n    icon: 'delete',\n    handler: ()=>{\n      if(confirm('¬øEst√° seguro que desea eliminar este Proyecto?\\n\\nEsta acci√≥n no se puede deshacer.')){\n        this.loadingMessage = 'Eliminando el proyecto...';\n        this.isWorking = true;\n        this._service.deleteProject(this.Project._id).subscribe(\n        result => {\n          if(result.message == 'DELETED'){\n            this._service.updateProjectsList(true);\n            this.isWorking = false;\n            this._snackBar.open('Se elimin√≥ el Proyecto correctamente.','ENTENDIDO',{duration: 3000});\n          }\n        },error => {\n          this.isWorking = false;\n          this._snackBar.open('Ocurri√≥ un error al eliminar el Proyecto.','ENTENDIDO',{duration: 3000});\n        }\n      )\n      }\n    },\n    message: 'ELIMINAR'\n  }\n\n  constructor(private _service : SisiCoreService,\n              private _ActivatedRoute : ActivatedRoute,\n              private _snackBar: MatSnackBar,\n              private dialog : MatDialog) { \n\n    this._ActivatedRoute.params.subscribe(\n      (params : Params) => {\n        this.Project = this._service.getProject(params.id);\n        this.executed_budget = this.Project.budgets.ejecutado.pop();\n        this.Project.budgets.ejecutado.push(this.executed_budget);\n        console.log(this.Project.funders);\n        this.generateChartData();\n      }\n    );\n\n\n    this._service.getBeneficiariesFile(this.Project.beneficiaries.file).subscribe(\n      result => {\n        if(result.message == 'OK') this.File = result.file\n      },error => this._snackBar.open('Error al recuperar la lista de Beneficiarios.','ENTENDIDO',{duration: 3000})\n    );\n  }\n\n  /**\n   * Funders Update Modal\n   */\n  linkFunders(){\n    const dialogRef = this.dialog.open(FundersLinkComponent, {\n      width: '550px',\n      data: {Funders: JSON.parse(localStorage.funders),actualFunders: this.Project.funders}\n    });\n\n    dialogRef.afterClosed().subscribe(funders => {\n      if(funders){\n        /**Actualizar Financiadores */\n        this.loadingMessage = 'Guardando los cambios...';\n        this.isWorking = true;\n        this._service.updateProject({funders},this.Project._id).subscribe(\n          result => {\n            if(result.message == 'UPDATED'){\n              let updatedFunders : any[] = []\n              result.project.funders.forEach(id => {\n                console.log(id);\n                updatedFunders.push(this.formatFunder(this._service.getFunder(id)))\n              });\n              this.Project.funders = updatedFunders;\n              this.isWorking = false;\n              this._snackBar.open('Se ha vinculado el Financiador.','ENTENDIDO',{duration: 3000});\n              this._service.updateProjectsList(null);\n              this._service.updateFundersList(null);\n            }\n          },error => {\n            this.isWorking = false;\n            this._snackBar.open('Ha ocurrido un error.','ENTENDIDO',{duration: 3000})\n          }\n        )\n      }\n    });\n  }\n\n  formatFunder(funder : any) : any {\n    return {\n      name: funder.name,\n      _id: funder._id,\n      place: funder.place\n    }\n  }\n\n  /**\n   * Budget Modals\n   */\n\n  updateExecuted(){\n    const dialogRef = this.dialog.open(UpdateExecutedComponent, {\n      width: '550px',\n      data: {ejecutado: '',type: 'executed'}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        /**Actualizar Ejecutado */\n        this.loadingMessage = 'Guardando los cambios...'\n        this.isWorking = true;\n        let newBudget : number = parseInt(result);\n        if(newBudget <= this.executed_budget.value){\n          this.isWorking = false;\n          return this._snackBar.open('El presupuesto ejecutado debe ir aumentando, no puede ser menor o igual que el √∫ltimo registrado.','ENTENDIDO',{duration: 3000});\n        }\n        let budgets = { \n          budgets:{\n            value: newBudget,\n            name: new Date()\n          }\n        }\n        this._service.updateProject(budgets,this.Project._id).subscribe(\n          result => {\n            console.log(result);\n            if(result.message == 'UPDATED'){\n              this.executed_budget.value = newBudget;\n              this.Project.budgets = result.project.budgets\n              this.multi[1].series.push(budgets.budgets);\n              this._service.updateProjectsList(null);\n              this.generateChartData();\n              this.isWorking = false;\n              this._snackBar.open('Cambios guardados correctamente.','ENTENDIDO',{duration: 3000});\n            }\n          },error => {\n            this.isWorking = false;\n            this._snackBar.open('Ocurri√≥ un error al actualizar el presupuesto.','ENTENDIDO',{duration: 3000});\n          }\n        )\n      }\n    });\n  }\n\n  updateBudget(){\n    const dialogRef = this.dialog.open(UpdateExecutedComponent, {\n      width: '550px',\n      data: {final: '',type: 'budget'}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        /**Actualizar Ejecutado */\n        this.loadingMessage = 'Guardando los cambios...';\n        this.isWorking = true;\n        let newBudget : number = parseInt(result);\n        let body = { newBudget }\n        this._service.updateProject(body,this.Project._id).subscribe(\n          resultado => {\n            if(resultado.message == 'UPDATED'){\n              this.Project.budgets.total_final = result;\n              this.multi[0].series.pop();\n              this.multi[0].series.push({value: result, name: new Date()});\n              this._service.updateProjectsList(null);\n              this.generateChartData();\n              this.isWorking = false;\n              this._snackBar.open('Cambios guardados correctamente.','ENTENDIDO',{duration: 3000});\n            }\n          },error => {\n            this.isWorking = false;\n            this._snackBar.open('Ocurri√≥ un error al actualizar el presupuesto.','ENTENDIDO',{duration: 3000})\n          }\n        )\n      }\n    });\n  }\n\n  /**\n     * Budget Graphic\n     */\n\n    generateChartData(){\n      console.log(this.Project.budgets);\n      this.multi = null;\n      this.multi = [\n        {\n          name: 'Presupuesto',\n          series: [{\n              name: new Date(this.Project.created_at),\n              value: this.Project.budgets.total_inicial\n            },\n            {\n              name: new Date(),\n              value: this.Project.budgets.total_final\n          }]\n        },\n        {\n          name: 'Ejecutado',\n          series: [{name: new Date(this.Project.created_at),value: this.Project.budgets.ejecutado[0].value}]\n        }\n      ];\n      for(let i = 0; i < this.Project.budgets.ejecutado.length; i++){\n        if(i) this.multi[1].series.push(this.getSerieItem(this.Project.budgets.ejecutado[i].name,this.Project.budgets.ejecutado[i].value));\n      }\n      \n      this.multi[1].series.push({\n        name: new Date(),\n        value: this.executed_budget.value\n      });\n      console.log(this.multi);\n      \n    }\n\n    getSerieItem(name : string, value : number){\n      return {\n        name: new Date(name),\n        value\n      }\n    }\n  \n    multi: any[];\n    view: any[] = [700, 400];\n  \n    // options\n    legend: boolean = true;\n    showLabels: boolean = true;\n    animations: boolean = true;\n    xAxis: boolean = true;\n    yAxis: boolean = true;\n    showYAxisLabel: boolean = true;\n    showXAxisLabel: boolean = true;\n    //Eje de X\n    xAxisLabel: string = 'Tiempo';\n    //Eje de Y\n    yAxisLabel: string = 'Presupuesto en d√≥lares (USD)';\n    timeline: boolean = true;\n  \n    colorScheme = {\n      domain: ['#5AA454', '#E44D25']\n    };\n  \n    onSelect(data): void {\n      console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n    }\n  \n    onActivate(data): void {\n      console.log('Activate', JSON.parse(JSON.stringify(data)));\n    }\n  \n    onDeactivate(data): void {\n      console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n    }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html'\n})\nexport class ProjectsComponent{\n\n  userRole : string = localStorage.getItem('userRole');\n  \n  projects : any[] = [];\n\n  constructor (private _service : SisiCoreService) { \n    if(this.userRole == 'Financiador'){\n      let normalProjects : any[] = this._service.getProjectsOff();\n      let userProjects = JSON.parse(localStorage.getItem('user')).funder.projects;\n      userProjects.forEach(project => {\n        normalProjects.forEach(projectito => {\n          if(projectito._id == project) this.projects.push(projectito);\n        });\n      });\n    }else this.projects  = this._service.getProjectsOff();\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html'\n})\nexport class ReportComponent {\n\n  Project : any;\n  Projects : any[] = [];\n  Indicator : any;\n  Indicators : any[];\n  AvailablePeriods : any[];\n\n  ProjectRecords : any[];\n  ProjectGoals : any[];\n\n  selectedProject : string;\n  selectedIndicator : string;\n  selectedPeriod : string;\n\n  PeriodSelectAvailable : boolean;\n\n  Status : string = 'none';\n\n  Schema : any;\n\n  BaselineSchema : any;\n\n  SchemaTable : any;\n  ParametersTable : any[];\n  IndicatorTable : any[];\n\n  ChartData : any[];\n\n  userRole : string;\n\n  constructor(private _service : SisiCoreService) {\n    this.userRole = localStorage.getItem('userRole');\n    if(this.userRole == 'Financiador'){\n      let normalProjects : any[] = this._service.getProjectsOff();\n      let userProjects = JSON.parse(localStorage.getItem('user')).funder.projects;\n      userProjects.forEach(project => {\n        normalProjects.forEach(projectito => {\n          if(projectito._id == project) this.Projects.push(projectito);\n        });\n      });\n    }else this.Projects  = this._service.getProjectsOff();\n  }\n\n  onProjectSelected(seleccion){\n    this.Project = this.Projects.filter(project => project._id == seleccion)[0];\n    this.Indicators = this.Project.indicators;\n    this.ProjectRecords = this.Project.records;\n    this.ProjectGoals = this.Project.goals;\n  }\n\n  onIndicatorSelected(seleccion){\n    this.PeriodSelectAvailable = false;\n    this.Indicator = this._service.getIndicator(seleccion);\n\n    this.AvailablePeriods = [];\n\n    this.ProjectRecords.forEach(record => {\n      if(record.records.indicator == seleccion) this.AvailablePeriods.push(this.formatPeriod(new Date(record.period)));\n    });\n    \n    this.PeriodSelectAvailable = true;\n  }\n\n  onPeriodSelected(seleccion){\n    /*TODO*/\n    /**\n     * Generar la informaci√≥n para la gr√°fica y la Tabla\n     */\n    console.log(seleccion);\n    if(seleccion == 'none') return null;\n\n    this.Status = 'loading';\n\n    let recordsWithIndicator = this.ProjectRecords.filter(record => record.records.indicator == this.selectedIndicator);\n    this.Schema = recordsWithIndicator.filter(record => this.formatPeriod(new Date(record.period)) == seleccion)[0];\n\n    this.BaselineSchema = this.ProjectGoals.filter(indicator => indicator.id == this.selectedIndicator)[0];\n    this.generateTablesAndGraphicsData();\n\n    this.Status = 'ready';\n  }\n\n  generateTablesAndGraphicsData(){\n    this.ParametersTable = [];\n    this.IndicatorTable = [];\n    this.ChartData = [];\n\n    if(this.Indicator.type == 'Simple') true;\n    else {\n      this.SchemaTable = {\n        projectName: this.Project.name,\n        technic: this.Schema.created_by,\n        schema: []\n      };\n\n      this.Project.organizations.forEach((organization,i) => {\n        \n        /**\n         * Ficha Esquema\n         */\n        this.SchemaTable.schema.push({\n          name: organization.name,\n          fields: []\n        });\n        this.Schema.records.rows[i].fields.forEach(field => this.SchemaTable.schema[i].fields.push(field));\n\n        /**\n         * Par√°metros Esquema\n         */\n        let parameters = this.Indicator.parameters_schema;\n        \n        this.ParametersTable.push({\n          name: organization.name,\n          parameters:[]\n        });\n\n        parameters.forEach((parameter,j) => {\n          //C√°lculo de los par√°metros\n          this.ParametersTable[i].parameters.push({\n            value: this.calculateParameter(parameter.definition,this.SchemaTable.schema[i].fields),\n            definition: this.formatDefinition(parameter.definition),\n            unit: parameter.unit,\n            isAcum: parameter.isAcum,\n            name: parameter.name\n          });\n        });\n        \n        /**\n         * Indicador Esquema\n         */\n        this.IndicatorTable.push({\n          name: organization.name,\n          baseline: [],\n          parameters: [],\n          total_indicator_value: 0\n        });\n        parameters.forEach((parameter,j) => {\n          //A√±adiendo las l√≠neabase y metas\n          this.IndicatorTable[i].baseline.push({\n            baseline: this.BaselineSchema.organizations[i].parameters[j].baseline,\n            goal: this.BaselineSchema.organizations[i].parameters[j].goal\n          });\n          //C√°lculo de % de los par√°metros\n          this.IndicatorTable[i].parameters.push({\n            ponderacion: this.calculateWeighing(this.ParametersTable[i].parameters[j].value,parameter.weighing,this.IndicatorTable[i].baseline[j].goal,organization.isOlder,this.Indicator.antiquity_diff)\n          });\n          //C√°lculo del Total del Indicador\n          this.IndicatorTable[i].total_indicator_value += this.IndicatorTable[i].parameters[j].ponderacion.medido;\n        });\n\n        /**\n         * Graficos Data\n         */\n        this.ChartData.push({\n          name: organization.name,\n          multi: [],\n        });\n        parameters.forEach((parameter,j) => {\n          console.log(this.ChartData);\n          this.ChartData[i].multi.push({\n            name: parameter.name,\n            series: [\n              {\n                name: 'Meta',\n                value: this.IndicatorTable[i].parameters[j].ponderacion.establecido\n              },\n              {\n                name: 'Valor Medido',\n                value: this.IndicatorTable[i].parameters[j].ponderacion.medido\n              }\n            ]\n          })\n        });\n\n      });\n\n      let last : any = {\n        single: []\n      };\n\n      this.Project.organizations.forEach((organization,i) => {\n        last.single.push({\n          name: organization.name,\n          value: this.IndicatorTable[i].total_indicator_value\n        });\n      });\n\n      this.ChartData.push(last);\n\n    }\n\n  }\n\n  calculateWeighing(value : string, weighing : any, goal : string, isOlder : boolean, diff : boolean) : any{\n    let calculated : any = {medido: 0, establecido: 0};\n    if(diff){    //Se diferencia por Antiguedad\n      if(isOlder){ //Si la Org es nueva\n        calculated.establecido = weighing[0].newer;\n        calculated.medido = parseInt(value) * weighing[0].newer / parseInt(goal);\n      }else{       //Si la Org es antigua\n        calculated.establecido = weighing[0].older;\n        calculated.medido = parseInt(value) * weighing[0].older / parseInt(goal);\n      }\n    }else{       //No se diferencia por Antiguedad\n      calculated.establecido = weighing[0].weight;\n      calculated.medido = parseInt(value) * weighing[0].weight / parseInt(goal);\n    }\n    return calculated;\n  }\n\n  formatDefinition(definition : string[]) : string {\n    let result = '';\n    definition.forEach(operador => {\n      if(operador == '+' || operador == '-' || operador == '*' || operador == '/') result += ` ${operador} `;\n      else result += operador;\n    });\n    return result;\n  }\n\n  calculateParameter(definition : string[],fields : any[]) : number {\n    let calculated : string = '';\n    definition.forEach(operador => {\n      if(operador == '+' || operador == '-' || operador == '*' || operador == '/' || operador == '(' || operador == ')' || operador == '*100%'){\n        if(operador == '*100%') calculated += '*100';\n        else calculated += operador;\n      }else{\n        calculated += (fields.filter(field => operador == field.name)[0]).value;\n      }\n    })\n    return eval(calculated).toFixed(2);\n  }\n\n  formatPeriod(fecha : Date) : string{\n    return `${this._service.getMonth(fecha.getMonth())} ${fecha.getFullYear()}`;\n  }\n  \n}\n","import { Component, Input } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\n\n@Component({\n  selector: 'app-table-and-graphic',\n  templateUrl: './table-and-graphic.component.html'\n})\nexport class TableAndGraphicComponent {\n\n  @Input() SchemaTable : any;\n  @Input() ParametersTable : any;\n  @Input() IndicatorTable : any;\n  @Input() Indicator : any;\n  @Input() Project : any;\n  @Input() Period : string;\n  @Input() ChartData : any[];\n  \n  Technic : any;\n\n  Promedio : number;\n  Calificacion : any = {\n    letter: '',\n    message: '',\n    description: ''\n  };\n\n  constructor(public _service : SisiCoreService) { }\n  \n  ngOnInit() {\n    this.Technic = this._service.getUser(this.SchemaTable.technic);\n    this.getIndicatorsPromedio();\n  \n    //this.setUpGraphics();\n  }\n\n  getIndicatorsPromedio() {\n    let totales = this.IndicatorTable.map(organization => organization.total_indicator_value);\n    let sumatoria = 0;\n    totales.forEach(total => sumatoria += total);\n    this.Promedio = sumatoria / totales.length;\n    this.Calificacion = this.getCalification();\n  }\n\n  getCalification(){\n    if(this.Promedio >= 80) return {letter: 'A',message:'Optimo!',description:'Requiere seguimiento periodico'};\n    else if(this.Promedio < 80 && this.Promedio >= 60) return {letter: 'B',message:'Bueno!',description:'Requiere seguimiento y apoyo t√©cnico puntual'};\n    else if(this.Promedio < 60 && this.Promedio >= 40) return {letter: 'C',message:'Satisfactorio!',description:'Requiere seguimiento y apoyo t√©cnico sistem√°tico (per√≠odico/minimo bimensual)'};\n    else if(this.Promedio < 40 && this.Promedio >= 20) return {letter: 'D',message:'Deficiente!',description:'Requiere seguimiento y apoyo t√©cnico cercano y frecuente(m√≠nimo mensual)'};\n    else if(this.Promedio < 20) return {letter: 'E',message:'Muy deficiente!',description:'En peligro de desaparecer, se debe valorar si se continua apoyo'};\n  }\n\n  /*Graphics*/\n  view: any[] = [700, 400];\n\n  // options\n  showXAxis: boolean = true;\n  showYAxis: boolean = true;\n  gradient: boolean = true;\n  showLegend: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Par√°metros';\n  showYAxisLabel: boolean = true;\n  yAxisLabel: string = 'Ponderaci√≥n';\n  legendTitle: string = 'Leyenda';\n\n  xAxisLabelLast: string = 'Organizaciones';\n  yAxisLabelLast: string = 'Valor Indicador';\n\n  colorScheme = {\n    domain: ['#5AA454', '#C7B42C', '#AAAAAA']\n  };\n\n onSelect(data): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data): void {\n    console.log('Activate', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-new-users',\n  templateUrl: './new-users.component.html'\n})\nexport class NewUsersComponent {\n\n  UserForm : FormGroup;\n  Repassword : string = '';\n  \n  Funders : any[];\n\n  isWorking : boolean = false;\n  loadingMessage : string;\n\n  constructor(private _service : SisiCoreService,\n              private _snackBar : MatSnackBar) { \n    this.UserForm = new FormGroup({\n      username: new FormControl('',[Validators.required,this._service.isBlank,this._service.existUser]),\n      name: new FormControl('',[Validators.required,this._service.isBlank]),\n      last_names: new FormControl('',[Validators.required,this._service.isBlank]),\n      email: new FormControl('',[Validators.required,this._service.isBlank,Validators.pattern(new RegExp(/^[_a-z0-9-]+(.[_a-z0-9-]+)*@[a-z0-9-]+(.[a-z0-9-]+)*(.[a-z]{2,4})$/))]),\n      position: new FormControl('',[Validators.required,this._service.isBlank]),\n      password: new FormControl('',[Validators.required,this._service.isBlank,Validators.minLength(10)]),\n      funder: new FormControl(''),\n      repassword: new FormControl(''),\n      role:new FormControl('',[Validators.required]) \n    });\n    this.UserForm.get('repassword').setValidators([Validators.required,this._service.isBlank,this.ComparePass(this.UserForm.get('password'))]);\n    this.Funders = this._service.getFundersOff();\n  }\n\n  ComparePass(otherControl: AbstractControl): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} => {\n      const value: any = control.value;\n      const otherValue: any = otherControl.value;\n      return otherValue === value ? null : { 'notMatch': { value, otherValue } };\n    };\n  }\n\n  createUser(){\n    this.loadingMessage = 'Guardando Usuario...';\n    this.isWorking = true;\n    let body = this.UserForm.value;\n    delete body.repassword;\n    if(body.role == 'Financiador' && !body.funder) return alert('Es necesario que indique a que financiador representa este usuario.');\n    else if(body.role != 'Financiador') delete body.funder;\n    this._service.createUser(body).subscribe(\n      result => {\n        if(result.message == 'CREATED'){\n          this._service.updateUsersList(true);\n          this.isWorking = false;\n          this._snackBar.open('Usuario registrado correctamente.','ENTENDIDO',{duration: 3000})\n        }\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ha ocurrido un error al guardar el usuario.','ENTENDIDO',{duration: 3000});\n      }\n    )\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { FormGroup, FormControl, Validators, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NewPasswordComponent } from '../../../dialogs/new-password/new-password.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-users-view',\n  templateUrl: './users-view.component.html'\n})\nexport class UsersViewComponent {\n\n  User : any;\n\n  UserForm : FormGroup;\n\n  EditMode : boolean = false;\n\n  Funders : any[] = this._service.getFundersOff();\n\n  isWorking: boolean = false;\n\n  loadingMessage : string;\n\n  constructor(private _service : SisiCoreService,\n              private _ActivatedRoute : ActivatedRoute,\n              private _snackBar : MatSnackBar,\n              private dialog : MatDialog) {\n\n    this._ActivatedRoute.params.subscribe(\n      (params : Params) => {\n        this.User = this._service.getUser(params.id);\n        this.getFormFromUser();\n      }\n    );\n    \n    \n  }\n\n  updateUser(){\n    this.loadingMessage = 'Actualizando usuario...';\n    this.isWorking = true;\n    let body = this.UserForm.value;\n    if(body.role == 'Financiador' && !body.funder) return alert('Es necesario que indique a que financiador representa este usuario.');\n    else if(body.role != 'Financiador') delete body.funder;\n    this._service.updateUser(body,this.User._id).subscribe(\n      result => {\n        if(result.message == 'UPDATED'){\n          this.User = result.user;\n          this.getFormFromUser();\n          this.EditMode = false;\n          this.UserForm.disable();\n          this.isWorking = false;\n          this._snackBar.open('Usuario actualizado correctamente.','ENTENDIDO',{duration: 3000});\n          this._service.updateUsersList(null);\n        }\n      },error => {\n        this.isWorking = false;\n        this._snackBar.open('Ha ocurrido un error al guardar el usuario.','ENTENDIDO',{duration: 3000});\n      }\n    )\n  }\n\n  cancel(){\n    if(confirm('Los cambios que no se han guardados se perder√°n.\\n\\n¬øDesea continua?')) {\n      this.EditMode = false;\n      this.getFormFromUser();\n      this.UserForm.disable();\n    }\n  }\n\n  getFormFromUser(){\n    let funder : string = '';\n    if(this.User.role == 'Financiador') funder = this.User.funder._id;\n    this.UserForm = new FormGroup({\n      username: new FormControl({value: this.User.username, disabled: true},[Validators.required,this._service.isBlank]),\n      name: new FormControl({value: this.User.name, disabled: true},[Validators.required,this._service.isBlank]),\n      last_names: new FormControl({value: this.User.last_names, disabled: true},[Validators.required,this._service.isBlank]),\n      email: new FormControl({value: this.User.email, disabled: true},[Validators.required,this._service.isBlank,Validators.pattern(new RegExp(/^[_a-z0-9-]+(.[_a-z0-9-]+)*@[a-z0-9-]+(.[a-z0-9-]+)*(.[a-z]{2,4})$/))]),\n      position: new FormControl({value: this.User.position, disabled: true},[Validators.required,this._service.isBlank]),\n      role:new FormControl({value: this.User.role, disabled: true},[Validators.required]),\n      funder: new FormControl({value: funder, disabled: true}),\n    });\n  }\n\n  turnToEditMode(){\n    this.EditMode = true;\n    this.UserForm.enable();\n  }\n\n  generateNewPassword(){\n    const dialogRef = this.dialog.open(NewPasswordComponent, {\n      width: '550px',\n      data: {password: ''}\n    });\n\n    dialogRef.afterClosed().subscribe(passwords => {\n      if(passwords){\n        /**Actualizar Contrase√±a */\n        this.loadingMessage = 'Guardando los cambios...';\n        this.isWorking = true;\n        this._service.updateUser({password: passwords.password},this.User._id).subscribe(\n          result => {\n            this.isWorking = false;\n            this._snackBar.open('Se gener√≥ la contrase√±a correctamente.','ENTENDIDO',{duration: 3000});\n          },error => {\n            this.isWorking = false;\n            this._snackBar.open('Ocurri√≥ un error al generar la contrase√±a.','ENTENDIDO',{duration: 3000});\n          }\n        )\n      }\n    });\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { SisiCoreService } from '../../../../services/sisi-core.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html'\n})\nexport class UsersComponent {\n\n  filter : string = \"name\";\n  search_term : string = '';\n\n  Users : any[];\n  filteredList : any[];\n\n  constructor(private _service : SisiCoreService) {\n    this.Users = this._service.getUsersOff();\n    this.filteredList = this.Users;\n  }\n\n  filterByTerm(){\n    if(!this.search_term.trim()) return this.filteredList = this.Users;\n    this.filteredList = this.Users.filter(user => user[this.filter].toLowerCase().includes(this.search_term.trim().toLowerCase()))\n  }\n\n  filterByRole(role){\n    if(!role) return this.filteredList = this.Users;\n    this.filteredList = this.Users.filter(user => user[this.filter] == role);\n  }\n\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button-group',\n  templateUrl: './button-group.component.html'\n})\nexport class ButtonGroupComponent{\n\n  @Output() save : EventEmitter<void> = new EventEmitter();\n  @Output() cancel : EventEmitter<void> = new EventEmitter();\n\n  @Input() formStatus : boolean;\n\n  onSave(){\n    this.save.emit();\n  }\n\n  onCancel(ev){\n    ev.preventDefault();\n    this.cancel.emit();\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-buttons',\n  templateUrl: './form-buttons.component.html'\n})\nexport class FormButtonsComponent {\n\n  @Input() formGroup : FormGroup;\n\n  constructor(private _Router : Router) { }\n\n  cancel(){\n    if(confirm('Todos los cambios no guardados se perder√°n.\\n\\n¬øDesea continuar?')) this._Router.navigate([document.location.pathname.split('/')[1]]);\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-view',\n  templateUrl: './loading-view.component.html'\n})\nexport class LoadingViewComponent{\n\n  @Input() message : string;\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modals',\n  templateUrl: './modals.component.html'\n})\nexport class ModalsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sub-toolbar',\n  templateUrl: './sub-toolbar.component.html',\n  styles: ['mat-toolbar{background: #bbb;}']\n})\nexport class SubToolbarComponent implements OnInit{\n\n  @Input() title : string;\n  @Input() backButton : boolean;\n  @Input() addButton : boolean;\n  @Input() editButton;\n  @Input() buttons : ToolbarButton[];\n  @Input() importantBack : boolean;\n\n  @Output() editClick : EventEmitter<any> = new EventEmitter();\n\n  personalizedButtons : ToolbarButton[];\n\n  constructor(private _Router : Router){\n  }\n  \n  back(){\n    if(this.importantBack){\n      if(confirm('Todos los cambios no guardados se perder√°n.\\n\\n¬øDesea continuar?')) this._Router.navigate([document.location.pathname.split('/')[1]]);\n    }else this._Router.navigate([document.location.pathname.split('/')[1]]);\n  }\n  \n  edit(){\n    this.editClick.emit();\n  }\n  \n  ngOnInit(): void {\n    if(this.buttons && this.buttons.length) this.personalizedButtons = this.buttons;\n    else this.personalizedButtons = [];\n  }\n}\n\n export interface ToolbarButton {\n  hasIcon: boolean,\n  message: string,\n  handler: () => void,\n  icon: string\n}\n","import { Component, Input, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SisiCoreService } from '../../../services/sisi-core.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport * as Moment from 'moment';\n\n@Component({\n  selector: 'app-upload-box',\n  templateUrl: './upload-box.component.html'\n})\nexport class UploadBoxComponent implements OnInit{\n\n  @Input() organization_name : string;\n  @Input() organization_id : string;\n  @Input() organization_files : any[];\n\n  createFolder : boolean = false;\n\n  isFilesPristine : boolean = true;\n\n  fileDir : string[] = [];\n\n  filesForm : FormData = new FormData();\n  \n  files: any[];\n\n  nameCtrl : FormControl = new FormControl('',Validators.required);\n  newFolderForm : FormGroup = new FormGroup({\n    name: this.nameCtrl\n  });\n\n  constructor(private _service : SisiCoreService,\n              private _snackbar : MatSnackBar) {\n                let entity = document.location.pathname.split('/')[1];\n                this.fileDir.push(entity);\n              }\n              \n  ngOnInit(){\n    if(this.organization_files){\n      this.files = this.organization_files;\n      this.files.forEach(file => file.status = 'Subido');\n    }\n    else this.files = [];\n    this.fileDir.push(this.organization_name);\n  }\n\n  /*FILES*/\n  onAddNewFile(event){\n    if(event.target.files && event.target.files.length > 0){\n      \n      for(let i = 0; i < event.target.files.length; i++){\n        let file = event.target.files[i];\n        let name = file.name.split('.');\n        this.files.push({\n          name: name[0],\n          folder: this.organization_name,\n          file: file.name,\n          ext: name[1],\n          type: getTypeFromExt(name[1]),\n          description: 'descripcion',\n          status: 'Pendiente',\n          tama√±o: convertSize(file.size),\n          fileObj: file \n        });\n        this.isFilesPristine = false;\n      \n      }\n    }\n  }\n\n  deleteFile (index : number) {\n    if(this.files[index].status == 'Subido'){\n      if(confirm('Este archivo se encuentra subido en el servidor. Esta acci√≥n no se puede deshacer.\\n¬øRealmente desea eliminarlo?')){\n        this._service.deleteFile(this.files[index]._id).subscribe(\n          result => {\n            if(result.message == 'OK'){\n              let organizations = JSON.parse(localStorage.organizations);\n              organizations.forEach((organization,i) => {\n                if(organization._id == result.organization_id){\n                  organizations.splice(i,1);\n                  organizations.push(result.organization)\n                }\n              });\n              localStorage.setItem('organizations',JSON.stringify(organizations));\n              this.files.splice(index,1);\n              this._snackbar.open('Se ha eliminado el Archivo.','ENTENDIDO',{duration: 3000});\n            }\n          },\n          error => this._snackbar.open('Error al eliminar el archivo.','ENTENDIDO',{duration: 3000})\n        );\n      }\n    }else this.files.splice(index,1);\n  }\n\n  uploadFiles () {\n    this.filesForm = new FormData();\n    let details = [];\n    this.files.forEach(file => {\n      if(file.status == 'Pendiente'){\n        let name = `${file.name.replace(/ /g,'-')}_${Moment.now()}.${file.ext}`;\n        this.filesForm.append('multi-files',file.fileObj,name);\n        details.push({\n          name: file.name,\n          folder: this.organization_id,\n          type: file.type,\n          file: name,\n          ext: file.ext,\n          size: file.tama√±o,\n          entity: 'Organizaciones'\n        });\n      }\n    });\n    this.filesForm.append('details',JSON.stringify(details));\n    this.filesForm.append('entity','Organization');\n    this.filesForm.append('id',this.organization_id);\n    this._service.uploadFile(this.filesForm).subscribe(\n      result => {\n        if(result.message ==\"OK\"){\n          this._service.updateOrganizationsList(null);\n          this.isFilesPristine = true;\n          let counter = 0;\n          this.files.forEach(file => {\n            if(file.status == 'Pendiente'){\n              file._id = result.documents[counter]._id;\n              file.status = 'Subido';\n              counter++;\n            }\n          });\n          this._snackbar.open('Archivos Subidos correctamente.','ENTENDIDO',{duration: 3000});\n        }\n      },error => this._snackbar.open('Ha ocurrido un error.','ENTENDIDO',{duration: 3000})\n    );\n  }\n\n}\n\ninterface Folder {\n  name : string,\n  files : File[]\n}\n\ninterface File {\n  name : string,\n  type : string,\n  size : string,\n  path : string,\n  description : string\n}\n\nexport function getTypeFromExt(ext : String) : String{\n  if(ext == 'jpg' || ext == 'jpeg' || ext == 'png') return 'Imagen';\n  else if(ext == 'doc' || ext == 'docx') return 'Word';\n  else if(ext == 'xltx' || ext == 'xlsx' || ext == 'xlsx' || ext == 'xltm' || ext == 'xlsm' || ext == 'xlam') return 'Excel';\n  else if(ext == 'ppt' || ext == 'pptx' || ext == 'potx' || ext == 'pptm' || ext == 'potm' || ext == 'ppam' || ext == 'ppsx' || ext == 'ppsm') return 'Power Point';\n  else if(ext == 'pdf') return 'PDF';\n  return 'Archivo';\n}\n\nexport function convertSize(size) : String{\n  if(size > Math.pow(1024,3)) return `${(size / Math.pow(1024,3)).toFixed(1)} GB`;\n  else if(size > Math.pow(1024,2)) return `${(size / Math.pow(1024,2)).toFixed(1)} MB`;\n  else if(size > 1024) return `${(size / 1024).toFixed(1)} kB`;\n  return `${(size).toFixed(1)} B`;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SisiCoreService {\n\n  URL : string = 'http://64.227.8.162:3000';\n\n  headers : HttpHeaders = new HttpHeaders({'Content-Type':'application/json','Authorization':`Bearer ${localStorage.token}`});\n  authHeader : HttpHeaders = new HttpHeaders({'Authorization':`Bearer ${localStorage.token}`});\n\n  constructor(private _httpClient : HttpClient,\n              private _snackBar : MatSnackBar,\n              private _Router : Router) {  }\n\n  /*Login*/\n  authenticate (body) : Observable<any> {\n    return this._httpClient.post(`${this.URL}/User/login`,body,{headers: new HttpHeaders({'Content-Type':'application/json'})});\n  }\n\n  /*Financiadores*/\n  getFunders () : Observable<any> {\n    return this._httpClient.get(`${this.URL}/Funder/`,{headers: this.authHeader});\n  }\n  getFundersOff () :any[] {\n    if(localStorage.getItem('funders')) return JSON.parse(localStorage.getItem('funders'));\n    return [];\n  }\n  getFunder (id : string) : any {\n    let funders : any[] = JSON.parse(localStorage.getItem('funders'));\n    return funders.filter(funder => funder._id == id)[0];\n  }\n  createFunder (funder : any) : Observable<any> {\n    return this._httpClient.post(`${this.URL}/Funder/`,funder,{headers: this.headers});\n  }\n  updateFunder (funder : any,id : string) : Observable<any> {\n    return this._httpClient.put(`${this.URL}/Funder/${id}`,funder,{headers: this.headers});\n  }\n  updateFundersList (redirect) {\n    this._httpClient.get(`${this.URL}/Funder/`,{headers: this.authHeader}).subscribe(\n      result => {\n        if(result['message'] == 'OK'){\n          localStorage.setItem('funders',JSON.stringify(result['funders']));\n        }else{\n          localStorage.setItem('funders','[]');\n        }\n        if(redirect) this._Router.navigate(['/funders']);\n      },\n      error => this._snackBar.open('Ocurri√≥ un error al actualizar los financiadores.','ENTENDIDO',{duration: 3000}));\n  }\n  deleteFunder (id : string) : Observable <any> {\n    return this._httpClient.delete(`${this.URL}/Funder/${id}`,{headers: this.authHeader});\n  }\n\n  /*Organizaciones*/\n  getOrganizations () : Observable<any> {\n    return this._httpClient.get(`${this.URL}/Organization/`,{headers: this.authHeader});\n  }\n  getOrganizationsOff () :any[] {\n    if(localStorage.getItem('organizations')) return JSON.parse(localStorage.getItem('organizations'));\n    return [];\n  }\n  getOrganization (id : string) : any {\n    let organizations : any[] = JSON.parse(localStorage.getItem('organizations'));\n    return organizations.filter(organization => organization._id == id)[0];\n  }\n  createOrganization (organization : any) : Observable<any> {\n    return this._httpClient.post(`${this.URL}/Organization/`,organization,{headers: this.headers});\n  }\n  updateOrganization (organization : any,id : string) : Observable<any> {\n    return this._httpClient.put(`${this.URL}/Organization/${id}`,organization,{headers: this.headers});\n  }\n  updateOrganizationsList (redirect) {\n    this._httpClient.get(`${this.URL}/Organization/`,{headers: this.authHeader}).subscribe(\n      result => {\n        if(result['message'] == 'OK'){\n          localStorage.setItem('organizations',JSON.stringify(result['organizations']));\n        }else{\n          localStorage.setItem('organizations','[]');\n        }\n        if(redirect) this._Router.navigate(['/organizations']);\n      },\n      error => this._snackBar.open('Ocurri√≥ un error al actualizar las organizaciones.','ENTENDIDO',{duration: 3000}));\n  }\n  deleteOrganization (id : string) : Observable <any> {\n    return this._httpClient.delete(`${this.URL}/Organization/${id}`,{headers: this.authHeader});\n  }\n\n  /*Proyectos*/\n  getProjects () : Observable<any> {\n    return this._httpClient.get(`${this.URL}/Project/`,{headers: this.authHeader});\n  }\n  getProjectsOff () :any[] {\n    if(localStorage.getItem('projects')) return JSON.parse(localStorage.getItem('projects'));\n    return [];\n  }\n  getProject (id : string) : any {\n    let proojects : any[] = JSON.parse(localStorage.getItem('projects'));\n    return proojects.filter(project => project._id == id)[0];\n  }\n  createProject (project : any) : Observable<any> {\n    return this._httpClient.post(`${this.URL}/Project/`,project,{headers: this.headers});\n  }\n  updateProject (project: any, id : string) : Observable<any> {\n    return this._httpClient.put(`${this.URL}/Project/${id}`,project,{headers: this.headers});\n  }\n  updateProjectsList (redirect) {\n    this._httpClient.get(`${this.URL}/Project/`,{headers: this.authHeader}).subscribe(\n      result => {\n          localStorage.setItem('projects',JSON.stringify(result['projects']));\n          if(redirect) this._Router.navigate(['/projects'])\n      },\n      error => this._snackBar.open('Ocurri√≥ un error al actualizar los Proyectos.','ENTENDIDO',{duration: 3000}));\n  }\n  deleteProject (id : string) : Observable <any> {\n    return this._httpClient.delete(`${this.URL}/Project/${id}`,{headers: this.authHeader});\n  }\n\n  /*Indicadores*/\n  getIndicators () : Observable<any> {\n    return this._httpClient.get(`${this.URL}/Indicator/`,{headers: this.authHeader});\n  }\n  getIndicatorsOff () :any[] {\n    if(localStorage.getItem('indicators')) return JSON.parse(localStorage.getItem('indicators'));\n    return [];\n  }\n  getIndicator (id : string) : any {\n    let indicators : any[] = JSON.parse(localStorage.getItem('indicators'));\n    return indicators.filter(indicator => indicator._id == id)[0];\n  }\n  createIndicator (indicator : any) : Observable<any> {\n    return this._httpClient.post(`${this.URL}/Indicator/`,indicator,{headers: this.headers});\n  }\n  updateIndicator (indicator : any,id : string) : Observable<any> {\n    return this._httpClient.put(`${this.URL}/Indicator/${id}`,indicator,{headers: this.headers});\n  }\n  updateIndicatorsList (redirect) {\n    this._httpClient.get(`${this.URL}/Indicator/`,{headers: this.authHeader}).subscribe(\n      result => {\n        if(result['message'] == 'OK'){\n          localStorage.setItem('indicators',JSON.stringify(result['indicators']));\n        }else{\n          localStorage.setItem('indicators','[]');\n        }\n        if(redirect) this._Router.navigate(['/indicators']);\n      },\n      error => this._snackBar.open('Ocurri√≥ un error al actualizar los Indicadores.','ENTENDIDO',{duration: 3000}));\n  }\n  deleteIndicator (id : string) : Observable <any> {\n    return this._httpClient.delete(`${this.URL}/Indicator/${id}`,{headers: this.authHeader});\n  }\n\n  /*Validaciones*/\n  existFunder( control: FormControl ) : {[s:string]:boolean} {\n    if(!control.value) return null;\n    if(localStorage.getItem('funders')) {\n      let funders = JSON.parse(localStorage.getItem('funders'));\n      let result = funders.filter(funder => funder.name.toLowerCase() == control.value.toLowerCase());\n      if(result.length) return {exist: true};\n    }\n    return null;\n  }\n  existOrganization( control: FormControl ) : {[s:string]:boolean} {\n    if(localStorage.getItem('organizations')) {\n      let organizations = JSON.parse(localStorage.getItem('organizations'));\n      let result = organizations.filter(organization => organization.name.toLowerCase() == control.value.toLowerCase());\n      if(result.length) return {exist: true};\n    }\n    return null;\n  }\n  existProject( control: FormControl ) : {[s:string]:boolean} {\n    if(localStorage.getItem('projects')) {\n      let projects = JSON.parse(localStorage.getItem('projects'));\n      let result = projects.filter(project => project.name.toLowerCase() == control.value.toLowerCase());\n      if(result.length) return {exist: true};\n    }\n    return null;\n  }\n  existUser( control: FormControl ) : {[s:string]:boolean} {\n    if(localStorage.getItem('users')) {\n      let users = JSON.parse(localStorage.getItem('users'));\n      let result = users.filter(user => user.username.toLowerCase() == control.value.toLowerCase());\n      if(result.length) return {exist: true};\n    }\n    return null;\n  }\n  isBlank( control: FormControl ) : {[s:string]:boolean} {\n    if(!(control.value.trim()).length) return {isBlank: true};\n    return null;\n  }\n\n  /*Documentos*/\n  uploadBeneficiaries (form : any) : Observable<any>{\n    return this._httpClient.post(`${this.URL}/files/beneficiaries`,form,{headers: this.authHeader});\n  }\n  uploadFile (form : any) : Observable<any>{\n    return this._httpClient.post(`${this.URL}/files/upload`,form,{headers: this.authHeader});\n  }\n  getBeneficiariesFile (id : string) : Observable<any> {\n    return this._httpClient.get(`${this.URL}/files/beneficiaries/${id}`,{headers: this.authHeader});\n  }\n  deleteFile (id : string) : Observable<any>{\n    return this._httpClient.delete(`${this.URL}/files/${id}`,{headers: this.authHeader});\n  }\n\n  /*Users*/\n  getUsers () : Observable<any> {\n    return this._httpClient.get(`${this.URL}/User/`,{headers: this.authHeader});\n  }\n  getUsersOff () :any[] {\n    if(localStorage.getItem('users')) return JSON.parse(localStorage.getItem('users'));\n    return [];\n  }\n  getUser (id : string) : any {\n    let users : any[] = JSON.parse(localStorage.getItem('users'));\n    return users.filter(user => user._id == id)[0];\n  }\n  createUser (user : any) : Observable<any> {\n    return this._httpClient.post(`${this.URL}/User/`,user,{headers: this.headers});\n  }\n  updateUser (user : any,id : string) : Observable<any> {\n    return this._httpClient.put(`${this.URL}/User/${id}`,user,{headers: this.headers});\n  }\n  updateUsersList (redirect) {\n    this._httpClient.get(`${this.URL}/User/`,{headers: this.authHeader}).subscribe(\n      result => {\n        if(result['message'] == 'OK'){\n          localStorage.setItem('users',JSON.stringify(result['users']));\n        }else localStorage.setItem('users','[]');\n        if(redirect) this._Router.navigate(['/users']);\n      },\n      error => this._snackBar.open('Ocurri√≥ un error al actualizar los usuarios.','ENTENDIDO',{duration: 3000}));\n  }\n\n  /*GlobalPreferences*/\n  getPreferences () : Observable<any> {\n    return this._httpClient.get(`${this.URL}/Preferences/`,{headers: this.authHeader});\n  }\n  getSectorsOff () : any[] {\n    if(localStorage.getItem('sectors')) return JSON.parse(localStorage.getItem('sectors'));\n    return [];\n  }\n  getTypesOff () : any[] {\n    if(localStorage.getItem('types')) return JSON.parse(localStorage.getItem('types'));\n    return [];\n  }\n  updatePreferencesList () {\n    this._httpClient.get(`${this.URL}/Preferences/`,{headers: this.authHeader}).subscribe(\n      result => {\n        if(result['message'] == 'OK'){\n          localStorage.setItem('sectors',JSON.stringify(result['preferences'].Organizations.Sectors));\n          localStorage.setItem('types',JSON.stringify(result['preferences'].Organizations.Types));\n        }else{\n          localStorage.setItem('sectors','[]');\n          localStorage.setItem('types','[]');\n        }\n      },\n      error => this._snackBar.open('Ocurri√≥ un error al actualizar los usuarios.','ENTENDIDO',{duration: 3000}));\n  }\n  addNewOrganizationPreference (preference : any) : Observable<any> {\n    return this._httpClient.put(`${this.URL}/Preferences/`,preference,{headers: this.headers});\n  }\n\n  /*Extras*/\n  getMonth(month : number){\n    let period : string;\n    switch(month){\n      case 0:\n        period = 'Enero'\n        break;\n      case 1:\n        period = 'Febrero'\n        break;\n      case 2:\n        period = 'Marzo'\n        break;\n      case 3:\n        period = 'Abril'\n        break;\n      case 4:\n        period = 'Mayo'\n        break;\n      case 5:\n        period = 'Junio'\n        break;\n      case 6:\n        period = 'Julio'\n        break;\n      case 7:\n        period = 'Agosto'\n        break;\n      case 8:\n        period = 'Septiembre'\n        break;\n      case 9:\n        period = 'Octubre'\n        break;\n      case 10:\n        period = 'Noviembre'\n        break;\n      case 11:\n        period = 'Diciembre'\n        break;\n      default:\n        break;\n    }\n\n    return period;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormControl } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SisiDatewarehouseService {\n\n  URL : string = 'http://64.227.8.162:3000/Datawarehouse';\n\n  headers : HttpHeaders = new HttpHeaders({'Authorization':`Bearer ${localStorage.token}`})\n\n  constructor(private _httpClient : HttpClient) {  }\n\n  getPartnersHistoryData (id : string) : Observable<any> {\n    return this._httpClient.get(`${this.URL}/partners/${id}`,{headers: this.headers});\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}